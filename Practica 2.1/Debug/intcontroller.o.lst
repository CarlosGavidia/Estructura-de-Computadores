   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.file	"intcontroller.c"
  21              	.Ltext0:
  22              		.file 1 "../intcontroller.c"
 1701              		.align	2
 1702              		.global	ic_init
 1704              	ic_init:
 1705              	.LFB0:
   1:../intcontroller.c **** /*-------------------------------------------------------------------
   2:../intcontroller.c **** **
   3:../intcontroller.c **** **  Fichero:
   4:../intcontroller.c **** 
   5:../intcontroller.c **** 
   6:../intcontroller.c **** **    intcontroller.c  3/3/2016
   7:../intcontroller.c **** **
   8:../intcontroller.c **** **    Estructura de Computadores
   9:../intcontroller.c **** **    Dpto. de Arquitectura de Computadores y Automática
  10:../intcontroller.c **** **    Facultad de Informática. Universidad Complutense de Madrid
  11:../intcontroller.c **** **
  12:../intcontroller.c **** **  Propósito:
  13:../intcontroller.c **** **    Contiene las implementación del módulo intcontroller
  14:../intcontroller.c **** **
  15:../intcontroller.c **** **-----------------------------------------------------------------*/
  16:../intcontroller.c **** 
  17:../intcontroller.c **** /*--- ficheros de cabecera ---*/
  18:../intcontroller.c **** #include "44b.h"
  19:../intcontroller.c **** #include "intcontroller.h"
  20:../intcontroller.c **** 
  21:../intcontroller.c **** void ic_init(void)
  22:../intcontroller.c **** {
 1706              		.loc 1 22 0
 1707              		.cfi_startproc
 1708              		@ Function supports interworking.
 1709              		@ args = 0, pretend = 0, frame = 0
 1710              		@ frame_needed = 1, uses_anonymous_args = 0
 1711 0000 0DC0A0E1 		mov	ip, sp
 1712              	.LCFI0:
 1713              		.cfi_def_cfa_register 12
 1714 0004 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1715 0008 04B04CE2 		sub	fp, ip, #4
 1716              		.cfi_offset 14, -8
 1717              		.cfi_offset 13, -12
 1718              		.cfi_offset 11, -16
 1719              	.LCFI1:
 1720              		.cfi_def_cfa 11, 4
  23:../intcontroller.c **** 	/* Configuración por defector del controlador de interrupciones:
  24:../intcontroller.c **** 	 *    Líneas IRQ y FIQ no habilitadas
  25:../intcontroller.c **** 	 *    Línea IRQ en modo no vectorizado
  26:../intcontroller.c **** 	 *    Todo por la línea IRQ
  27:../intcontroller.c **** 	 *    Todas las interrupciones enmascaradas
  28:../intcontroller.c **** 	 **/
  29:../intcontroller.c **** 	rINTMOD = 0x0; // Configura las líneas como de tipo IRQ
 1721              		.loc 1 29 0
 1722 000c 28309FE5 		ldr	r3, .L2
 1723 0010 0020A0E3 		mov	r2, #0
 1724 0014 002083E5 		str	r2, [r3, #0]
  30:../intcontroller.c **** 	rINTCON = 0x7; // IRQ y FIQ enmascaradas, IRQ en modo no vectorizado
 1725              		.loc 1 30 0
 1726 0018 1E36A0E3 		mov	r3, #31457280
 1727 001c 0720A0E3 		mov	r2, #7
 1728 0020 002083E5 		str	r2, [r3, #0]
  31:../intcontroller.c **** 	rINTMSK = ~(0x0); // Enmascara todas las líneas
 1729              		.loc 1 31 0
 1730 0024 14309FE5 		ldr	r3, .L2+4
 1731 0028 0020E0E3 		mvn	r2, #0
 1732 002c 002083E5 		str	r2, [r3, #0]
  32:../intcontroller.c **** }
 1733              		.loc 1 32 0
 1734 0030 0CD04BE2 		sub	sp, fp, #12
 1735 0034 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1736 0038 1EFF2FE1 		bx	lr
 1737              	.L3:
 1738              		.align	2
 1739              	.L2:
 1740 003c 0800E001 		.word	31457288
 1741 0040 0C00E001 		.word	31457292
 1742              		.cfi_endproc
 1743              	.LFE0:
 1745              		.align	2
 1746              		.global	ic_conf_irq
 1748              	ic_conf_irq:
 1749              	.LFB1:
  33:../intcontroller.c **** 
  34:../intcontroller.c **** int ic_conf_irq(enum enable st, enum int_vec vec)
  35:../intcontroller.c **** {
 1750              		.loc 1 35 0
 1751              		.cfi_startproc
 1752              		@ Function supports interworking.
 1753              		@ args = 0, pretend = 0, frame = 16
 1754              		@ frame_needed = 1, uses_anonymous_args = 0
 1755 0044 0DC0A0E1 		mov	ip, sp
 1756              	.LCFI2:
 1757              		.cfi_def_cfa_register 12
 1758 0048 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1759 004c 04B04CE2 		sub	fp, ip, #4
 1760              		.cfi_offset 14, -8
 1761              		.cfi_offset 13, -12
 1762              		.cfi_offset 11, -16
 1763              	.LCFI3:
 1764              		.cfi_def_cfa 11, 4
 1765 0050 10D04DE2 		sub	sp, sp, #16
 1766 0054 0020A0E1 		mov	r2, r0
 1767 0058 0130A0E1 		mov	r3, r1
 1768 005c 15204BE5 		strb	r2, [fp, #-21]
 1769 0060 16304BE5 		strb	r3, [fp, #-22]
  36:../intcontroller.c **** 	int conf = rINTCON;
 1770              		.loc 1 36 0
 1771 0064 1E36A0E3 		mov	r3, #31457280
 1772 0068 003093E5 		ldr	r3, [r3, #0]
 1773 006c 10300BE5 		str	r3, [fp, #-16]
  37:../intcontroller.c **** 
  38:../intcontroller.c **** 	if (st != ENABLE && st != DISABLE)
 1774              		.loc 1 38 0
 1775 0070 15305BE5 		ldrb	r3, [fp, #-21]	@ zero_extendqisi2
 1776 0074 010053E3 		cmp	r3, #1
 1777 0078 0400000A 		beq	.L5
 1778              		.loc 1 38 0 is_stmt 0 discriminator 1
 1779 007c 15305BE5 		ldrb	r3, [fp, #-21]	@ zero_extendqisi2
 1780 0080 000053E3 		cmp	r3, #0
 1781 0084 0100000A 		beq	.L5
  39:../intcontroller.c **** 		return -1;
 1782              		.loc 1 39 0 is_stmt 1
 1783 0088 0030E0E3 		mvn	r3, #0
 1784 008c 170000EA 		b	.L6
 1785              	.L5:
  40:../intcontroller.c **** 
  41:../intcontroller.c **** 	if (vec == VEC){
 1786              		.loc 1 41 0
 1787 0090 16305BE5 		ldrb	r3, [fp, #-22]	@ zero_extendqisi2
 1788 0094 000053E3 		cmp	r3, #0
 1789 0098 0300001A 		bne	.L7
  42:../intcontroller.c **** 		//COMPLETAR: poner la línea IRQ en modo vectorizado
  43:../intcontroller.c **** 		conf=conf &~(0x01<<2);
 1790              		.loc 1 43 0
 1791 009c 10301BE5 		ldr	r3, [fp, #-16]
 1792 00a0 0430C3E3 		bic	r3, r3, #4
 1793 00a4 10300BE5 		str	r3, [fp, #-16]
 1794 00a8 020000EA 		b	.L8
 1795              	.L7:
  44:../intcontroller.c **** 	}
  45:../intcontroller.c **** 	else{
  46:../intcontroller.c **** 		//COMPLETAR: poner la línea IRQ en modo no vectorizado
  47:../intcontroller.c **** 		conf=conf | (0x01<<2);
 1796              		.loc 1 47 0
 1797 00ac 10301BE5 		ldr	r3, [fp, #-16]
 1798 00b0 043083E3 		orr	r3, r3, #4
 1799 00b4 10300BE5 		str	r3, [fp, #-16]
 1800              	.L8:
  48:../intcontroller.c **** 	}
  49:../intcontroller.c **** 
  50:../intcontroller.c **** 	if (st == ENABLE){
 1801              		.loc 1 50 0
 1802 00b8 15305BE5 		ldrb	r3, [fp, #-21]	@ zero_extendqisi2
 1803 00bc 010053E3 		cmp	r3, #1
 1804 00c0 0300001A 		bne	.L9
  51:../intcontroller.c **** 		//COMPLETAR: habilitar la línea IRQ
  52:../intcontroller.c **** 		conf=conf&~(0x01<<1);
 1805              		.loc 1 52 0
 1806 00c4 10301BE5 		ldr	r3, [fp, #-16]
 1807 00c8 0230C3E3 		bic	r3, r3, #2
 1808 00cc 10300BE5 		str	r3, [fp, #-16]
 1809 00d0 020000EA 		b	.L10
 1810              	.L9:
  53:../intcontroller.c **** 	}
  54:../intcontroller.c **** 	else{
  55:../intcontroller.c **** 		//COMPLETAR: deshabilitar la línea IRQ
  56:../intcontroller.c **** 		conf=conf | (0x01<<1);
 1811              		.loc 1 56 0
 1812 00d4 10301BE5 		ldr	r3, [fp, #-16]
 1813 00d8 023083E3 		orr	r3, r3, #2
 1814 00dc 10300BE5 		str	r3, [fp, #-16]
 1815              	.L10:
  57:../intcontroller.c **** 	}
  58:../intcontroller.c **** 	rINTCON = conf;
 1816              		.loc 1 58 0
 1817 00e0 1E36A0E3 		mov	r3, #31457280
 1818 00e4 10201BE5 		ldr	r2, [fp, #-16]
 1819 00e8 002083E5 		str	r2, [r3, #0]
  59:../intcontroller.c **** 	return 0;
 1820              		.loc 1 59 0
 1821 00ec 0030A0E3 		mov	r3, #0
 1822              	.L6:
  60:../intcontroller.c **** }
 1823              		.loc 1 60 0
 1824 00f0 0300A0E1 		mov	r0, r3
 1825 00f4 0CD04BE2 		sub	sp, fp, #12
 1826 00f8 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1827 00fc 1EFF2FE1 		bx	lr
 1828              		.cfi_endproc
 1829              	.LFE1:
 1831              		.align	2
 1832              		.global	ic_conf_fiq
 1834              	ic_conf_fiq:
 1835              	.LFB2:
  61:../intcontroller.c **** 
  62:../intcontroller.c **** int ic_conf_fiq(enum enable st)
  63:../intcontroller.c **** {
 1836              		.loc 1 63 0
 1837              		.cfi_startproc
 1838              		@ Function supports interworking.
 1839              		@ args = 0, pretend = 0, frame = 16
 1840              		@ frame_needed = 1, uses_anonymous_args = 0
 1841 0100 0DC0A0E1 		mov	ip, sp
 1842              	.LCFI4:
 1843              		.cfi_def_cfa_register 12
 1844 0104 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1845 0108 04B04CE2 		sub	fp, ip, #4
 1846              		.cfi_offset 14, -8
 1847              		.cfi_offset 13, -12
 1848              		.cfi_offset 11, -16
 1849              	.LCFI5:
 1850              		.cfi_def_cfa 11, 4
 1851 010c 10D04DE2 		sub	sp, sp, #16
 1852 0110 0030A0E1 		mov	r3, r0
 1853 0114 15304BE5 		strb	r3, [fp, #-21]
  64:../intcontroller.c **** 	int ret = 0;
 1854              		.loc 1 64 0
 1855 0118 0030A0E3 		mov	r3, #0
 1856 011c 10300BE5 		str	r3, [fp, #-16]
  65:../intcontroller.c **** 
  66:../intcontroller.c **** 	if (st == ENABLE){
 1857              		.loc 1 66 0
 1858 0120 15305BE5 		ldrb	r3, [fp, #-21]	@ zero_extendqisi2
 1859 0124 010053E3 		cmp	r3, #1
 1860 0128 0200001A 		bne	.L12
  67:../intcontroller.c **** 		//COMPLETAR: habilitar la línea FIQ
  68:../intcontroller.c **** 		ret=0;
 1861              		.loc 1 68 0
 1862 012c 0030A0E3 		mov	r3, #0
 1863 0130 10300BE5 		str	r3, [fp, #-16]
 1864 0134 070000EA 		b	.L13
 1865              	.L12:
  69:../intcontroller.c **** 	}
  70:../intcontroller.c **** 	else if (st == DISABLE){
 1866              		.loc 1 70 0
 1867 0138 15305BE5 		ldrb	r3, [fp, #-21]	@ zero_extendqisi2
 1868 013c 000053E3 		cmp	r3, #0
 1869 0140 0200001A 		bne	.L14
  71:../intcontroller.c **** 		//COMPLETAR: deshabilitar la línea FIQ
  72:../intcontroller.c **** 		ret=1;
 1870              		.loc 1 72 0
 1871 0144 0130A0E3 		mov	r3, #1
 1872 0148 10300BE5 		str	r3, [fp, #-16]
 1873 014c 010000EA 		b	.L13
 1874              	.L14:
  73:../intcontroller.c **** 	}
  74:../intcontroller.c **** 	else
  75:../intcontroller.c **** 		ret = -1;
 1875              		.loc 1 75 0
 1876 0150 0030E0E3 		mvn	r3, #0
 1877 0154 10300BE5 		str	r3, [fp, #-16]
 1878              	.L13:
  76:../intcontroller.c **** 
  77:../intcontroller.c **** 	return ret;
 1879              		.loc 1 77 0
 1880 0158 10301BE5 		ldr	r3, [fp, #-16]
  78:../intcontroller.c **** }
 1881              		.loc 1 78 0
 1882 015c 0300A0E1 		mov	r0, r3
 1883 0160 0CD04BE2 		sub	sp, fp, #12
 1884 0164 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1885 0168 1EFF2FE1 		bx	lr
 1886              		.cfi_endproc
 1887              	.LFE2:
 1889              		.align	2
 1890              		.global	ic_conf_line
 1892              	ic_conf_line:
 1893              	.LFB3:
  79:../intcontroller.c **** 
  80:../intcontroller.c **** int ic_conf_line(enum int_line line, enum int_mode mode)
  81:../intcontroller.c **** {
 1894              		.loc 1 81 0
 1895              		.cfi_startproc
 1896              		@ Function supports interworking.
 1897              		@ args = 0, pretend = 0, frame = 16
 1898              		@ frame_needed = 1, uses_anonymous_args = 0
 1899 016c 0DC0A0E1 		mov	ip, sp
 1900              	.LCFI6:
 1901              		.cfi_def_cfa_register 12
 1902 0170 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1903 0174 04B04CE2 		sub	fp, ip, #4
 1904              		.cfi_offset 14, -8
 1905              		.cfi_offset 13, -12
 1906              		.cfi_offset 11, -16
 1907              	.LCFI7:
 1908              		.cfi_def_cfa 11, 4
 1909 0178 10D04DE2 		sub	sp, sp, #16
 1910 017c 0020A0E1 		mov	r2, r0
 1911 0180 0130A0E1 		mov	r3, r1
 1912 0184 15204BE5 		strb	r2, [fp, #-21]
 1913 0188 16304BE5 		strb	r3, [fp, #-22]
  82:../intcontroller.c **** 	unsigned int bit = INT_BIT(line);
 1914              		.loc 1 82 0
 1915 018c 15305BE5 		ldrb	r3, [fp, #-21]	@ zero_extendqisi2
 1916 0190 0120A0E3 		mov	r2, #1
 1917 0194 1233A0E1 		mov	r3, r2, asl r3
 1918 0198 10300BE5 		str	r3, [fp, #-16]
  83:../intcontroller.c **** 
  84:../intcontroller.c **** 	if (line < 0 || line > 26)
 1919              		.loc 1 84 0
 1920 019c 15305BE5 		ldrb	r3, [fp, #-21]	@ zero_extendqisi2
 1921 01a0 1A0053E3 		cmp	r3, #26
 1922 01a4 0100009A 		bls	.L16
  85:../intcontroller.c **** 		return -1;
 1923              		.loc 1 85 0
 1924 01a8 0030E0E3 		mvn	r3, #0
 1925 01ac 120000EA 		b	.L17
 1926              	.L16:
  86:../intcontroller.c **** 
  87:../intcontroller.c **** 	if (mode != IRQ && mode != FIQ)
 1927              		.loc 1 87 0
 1928 01b0 16305BE5 		ldrb	r3, [fp, #-22]	@ zero_extendqisi2
 1929 01b4 000053E3 		cmp	r3, #0
 1930 01b8 0400000A 		beq	.L18
 1931              		.loc 1 87 0 is_stmt 0 discriminator 1
 1932 01bc 16305BE5 		ldrb	r3, [fp, #-22]	@ zero_extendqisi2
 1933 01c0 010053E3 		cmp	r3, #1
 1934 01c4 0100000A 		beq	.L18
  88:../intcontroller.c **** 		return -1;
 1935              		.loc 1 88 0 is_stmt 1
 1936 01c8 0030E0E3 		mvn	r3, #0
 1937 01cc 0A0000EA 		b	.L17
 1938              	.L18:
  89:../intcontroller.c **** 
  90:../intcontroller.c **** 	if (mode == IRQ){
 1939              		.loc 1 90 0
 1940 01d0 16305BE5 		ldrb	r3, [fp, #-22]	@ zero_extendqisi2
 1941 01d4 000053E3 		cmp	r3, #0
 1942 01d8 0300001A 		bne	.L19
  91:../intcontroller.c **** 		//COMPLETAR: poner la línea line en modo IRQ
  92:../intcontroller.c **** 		line= line &~(0x01<<1);
 1943              		.loc 1 92 0
 1944 01dc 15305BE5 		ldrb	r3, [fp, #-21]
 1945 01e0 0230C3E3 		bic	r3, r3, #2
 1946 01e4 15304BE5 		strb	r3, [fp, #-21]
 1947 01e8 020000EA 		b	.L20
 1948              	.L19:
  93:../intcontroller.c **** 
  94:../intcontroller.c **** 	}
  95:../intcontroller.c **** 	else{
  96:../intcontroller.c **** 		//COMPLETAR: poner la línea line en modo FIQ
  97:../intcontroller.c **** 		line= line &~(0x01<<0);
 1949              		.loc 1 97 0
 1950 01ec 15305BE5 		ldrb	r3, [fp, #-21]
 1951 01f0 0130C3E3 		bic	r3, r3, #1
 1952 01f4 15304BE5 		strb	r3, [fp, #-21]
 1953              	.L20:
  98:../intcontroller.c **** 	}
  99:../intcontroller.c **** 	return 0;
 1954              		.loc 1 99 0
 1955 01f8 0030A0E3 		mov	r3, #0
 1956              	.L17:
 100:../intcontroller.c **** }
 1957              		.loc 1 100 0
 1958 01fc 0300A0E1 		mov	r0, r3
 1959 0200 0CD04BE2 		sub	sp, fp, #12
 1960 0204 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1961 0208 1EFF2FE1 		bx	lr
 1962              		.cfi_endproc
 1963              	.LFE3:
 1965              		.align	2
 1966              		.global	ic_enable
 1968              	ic_enable:
 1969              	.LFB4:
 101:../intcontroller.c **** 
 102:../intcontroller.c **** int ic_enable(enum int_line line)
 103:../intcontroller.c **** {
 1970              		.loc 1 103 0
 1971              		.cfi_startproc
 1972              		@ Function supports interworking.
 1973              		@ args = 0, pretend = 0, frame = 8
 1974              		@ frame_needed = 1, uses_anonymous_args = 0
 1975 020c 0DC0A0E1 		mov	ip, sp
 1976              	.LCFI8:
 1977              		.cfi_def_cfa_register 12
 1978 0210 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1979 0214 04B04CE2 		sub	fp, ip, #4
 1980              		.cfi_offset 14, -8
 1981              		.cfi_offset 13, -12
 1982              		.cfi_offset 11, -16
 1983              	.LCFI9:
 1984              		.cfi_def_cfa 11, 4
 1985 0218 08D04DE2 		sub	sp, sp, #8
 1986 021c 0030A0E1 		mov	r3, r0
 1987 0220 0D304BE5 		strb	r3, [fp, #-13]
 104:../intcontroller.c **** 	if (line < 0 || line > 26){
 1988              		.loc 1 104 0
 1989 0224 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 1990 0228 1A0053E3 		cmp	r3, #26
 1991 022c 0100009A 		bls	.L22
 105:../intcontroller.c **** 		return -1;
 1992              		.loc 1 105 0
 1993 0230 0030E0E3 		mvn	r3, #0
 1994 0234 000000EA 		b	.L23
 1995              	.L22:
 106:../intcontroller.c **** 	//COMPLETAR: habilitar las interrupciones por la línea line (INT_BIT(line))
 107:../intcontroller.c **** 	//habilitar también bit global
 108:../intcontroller.c **** 		rINTMSK=rINTMSK &~(0x01<<line);
 109:../intcontroller.c **** 		rINTMSK=rINTMSK &~(0X01<<26);
 110:../intcontroller.c **** 	}
 111:../intcontroller.c **** 	return 0;
 1996              		.loc 1 111 0
 1997 0238 0030A0E3 		mov	r3, #0
 1998              	.L23:
 112:../intcontroller.c **** }
 1999              		.loc 1 112 0
 2000 023c 0300A0E1 		mov	r0, r3
 2001 0240 0CD04BE2 		sub	sp, fp, #12
 2002 0244 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2003 0248 1EFF2FE1 		bx	lr
 2004              		.cfi_endproc
 2005              	.LFE4:
 2007              		.align	2
 2008              		.global	ic_disable
 2010              	ic_disable:
 2011              	.LFB5:
 113:../intcontroller.c **** 
 114:../intcontroller.c **** int ic_disable(enum int_line line)
 115:../intcontroller.c **** {
 2012              		.loc 1 115 0
 2013              		.cfi_startproc
 2014              		@ Function supports interworking.
 2015              		@ args = 0, pretend = 0, frame = 8
 2016              		@ frame_needed = 1, uses_anonymous_args = 0
 2017 024c 0DC0A0E1 		mov	ip, sp
 2018              	.LCFI10:
 2019              		.cfi_def_cfa_register 12
 2020 0250 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2021 0254 04B04CE2 		sub	fp, ip, #4
 2022              		.cfi_offset 14, -8
 2023              		.cfi_offset 13, -12
 2024              		.cfi_offset 11, -16
 2025              	.LCFI11:
 2026              		.cfi_def_cfa 11, 4
 2027 0258 08D04DE2 		sub	sp, sp, #8
 2028 025c 0030A0E1 		mov	r3, r0
 2029 0260 0D304BE5 		strb	r3, [fp, #-13]
 116:../intcontroller.c **** 	if (line < 0 || line > 26)
 2030              		.loc 1 116 0
 2031 0264 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 2032 0268 1A0053E3 		cmp	r3, #26
 2033 026c 0100009A 		bls	.L25
 117:../intcontroller.c **** 		return -1;
 2034              		.loc 1 117 0
 2035 0270 0030E0E3 		mvn	r3, #0
 2036 0274 080000EA 		b	.L26
 2037              	.L25:
 118:../intcontroller.c **** 
 119:../intcontroller.c **** 	//COMPLETAR: enmascarar las interrupciones por la línea line (INT_BIT(line))
 120:../intcontroller.c **** 		rINTMSK= rINTMSK |(0x01<<line);
 2038              		.loc 1 120 0
 2039 0278 2C309FE5 		ldr	r3, .L27
 2040 027c 28209FE5 		ldr	r2, .L27
 2041 0280 001092E5 		ldr	r1, [r2, #0]
 2042 0284 0D205BE5 		ldrb	r2, [fp, #-13]	@ zero_extendqisi2
 2043 0288 0100A0E3 		mov	r0, #1
 2044 028c 1022A0E1 		mov	r2, r0, asl r2
 2045 0290 022081E1 		orr	r2, r1, r2
 2046 0294 002083E5 		str	r2, [r3, #0]
 121:../intcontroller.c **** 
 122:../intcontroller.c **** 	return 0;
 2047              		.loc 1 122 0
 2048 0298 0030A0E3 		mov	r3, #0
 2049              	.L26:
 123:../intcontroller.c **** }
 2050              		.loc 1 123 0
 2051 029c 0300A0E1 		mov	r0, r3
 2052 02a0 0CD04BE2 		sub	sp, fp, #12
 2053 02a4 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2054 02a8 1EFF2FE1 		bx	lr
 2055              	.L28:
 2056              		.align	2
 2057              	.L27:
 2058 02ac 0C00E001 		.word	31457292
 2059              		.cfi_endproc
 2060              	.LFE5:
 2062              		.align	2
 2063              		.global	ic_cleanflag
 2065              	ic_cleanflag:
 2066              	.LFB6:
 124:../intcontroller.c **** 
 125:../intcontroller.c **** int ic_cleanflag(enum int_line line)
 126:../intcontroller.c **** {
 2067              		.loc 1 126 0
 2068              		.cfi_startproc
 2069              		@ Function supports interworking.
 2070              		@ args = 0, pretend = 0, frame = 16
 2071              		@ frame_needed = 1, uses_anonymous_args = 0
 2072 02b0 0DC0A0E1 		mov	ip, sp
 2073              	.LCFI12:
 2074              		.cfi_def_cfa_register 12
 2075 02b4 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2076 02b8 04B04CE2 		sub	fp, ip, #4
 2077              		.cfi_offset 14, -8
 2078              		.cfi_offset 13, -12
 2079              		.cfi_offset 11, -16
 2080              	.LCFI13:
 2081              		.cfi_def_cfa 11, 4
 2082 02bc 10D04DE2 		sub	sp, sp, #16
 2083 02c0 0030A0E1 		mov	r3, r0
 2084 02c4 15304BE5 		strb	r3, [fp, #-21]
 127:../intcontroller.c **** 	int bit;
 128:../intcontroller.c **** 
 129:../intcontroller.c **** 	if (line < 0 || line > 26)
 2085              		.loc 1 129 0
 2086 02c8 15305BE5 		ldrb	r3, [fp, #-21]	@ zero_extendqisi2
 2087 02cc 1A0053E3 		cmp	r3, #26
 2088 02d0 0100009A 		bls	.L30
 130:../intcontroller.c **** 		return -1;
 2089              		.loc 1 130 0
 2090 02d4 0030E0E3 		mvn	r3, #0
 2091 02d8 1B0000EA 		b	.L31
 2092              	.L30:
 131:../intcontroller.c **** 
 132:../intcontroller.c **** 	bit = INT_BIT(line);
 2093              		.loc 1 132 0
 2094 02dc 15305BE5 		ldrb	r3, [fp, #-21]	@ zero_extendqisi2
 2095 02e0 0120A0E3 		mov	r2, #1
 2096 02e4 1233A0E1 		mov	r3, r2, asl r3
 2097 02e8 10300BE5 		str	r3, [fp, #-16]
 133:../intcontroller.c **** 
 134:../intcontroller.c **** 	if (rINTMOD & bit){
 2098              		.loc 1 134 0
 2099 02ec 68309FE5 		ldr	r3, .L34
 2100 02f0 002093E5 		ldr	r2, [r3, #0]
 2101 02f4 10301BE5 		ldr	r3, [fp, #-16]
 2102 02f8 033002E0 		and	r3, r2, r3
 2103 02fc 000053E3 		cmp	r3, #0
 2104 0300 0800000A 		beq	.L32
 135:../intcontroller.c **** 		//COMPLETAR: borrar el flag de interrupción correspondiente a la línea line
 136:../intcontroller.c **** 		//con la línea configurada por FIQ
 137:../intcontroller.c **** 		rF_ISPC=rF_ISPC |(0x01<<line);
 2105              		.loc 1 137 0
 2106 0304 54309FE5 		ldr	r3, .L34+4
 2107 0308 50209FE5 		ldr	r2, .L34+4
 2108 030c 001092E5 		ldr	r1, [r2, #0]
 2109 0310 15205BE5 		ldrb	r2, [fp, #-21]	@ zero_extendqisi2
 2110 0314 0100A0E3 		mov	r0, #1
 2111 0318 1022A0E1 		mov	r2, r0, asl r2
 2112 031c 022081E1 		orr	r2, r1, r2
 2113 0320 002083E5 		str	r2, [r3, #0]
 2114 0324 070000EA 		b	.L33
 2115              	.L32:
 138:../intcontroller.c **** 	}
 139:../intcontroller.c **** 
 140:../intcontroller.c **** 	else{
 141:../intcontroller.c **** 		//COMPLETAR: borrar el flag de interrupción correspondiente a la línea line
 142:../intcontroller.c **** 		//con la línea configurada por IRQ
 143:../intcontroller.c **** 		rI_ISPC=rI_ISPC |(0x01<<line);
 2116              		.loc 1 143 0
 2117 0328 34309FE5 		ldr	r3, .L34+8
 2118 032c 30209FE5 		ldr	r2, .L34+8
 2119 0330 001092E5 		ldr	r1, [r2, #0]
 2120 0334 15205BE5 		ldrb	r2, [fp, #-21]	@ zero_extendqisi2
 2121 0338 0100A0E3 		mov	r0, #1
 2122 033c 1022A0E1 		mov	r2, r0, asl r2
 2123 0340 022081E1 		orr	r2, r1, r2
 2124 0344 002083E5 		str	r2, [r3, #0]
 2125              	.L33:
 144:../intcontroller.c **** 	}
 145:../intcontroller.c **** 	return 0;
 2126              		.loc 1 145 0
 2127 0348 0030A0E3 		mov	r3, #0
 2128              	.L31:
 146:../intcontroller.c **** }
 2129              		.loc 1 146 0
 2130 034c 0300A0E1 		mov	r0, r3
 2131 0350 0CD04BE2 		sub	sp, fp, #12
 2132 0354 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2133 0358 1EFF2FE1 		bx	lr
 2134              	.L35:
 2135              		.align	2
 2136              	.L34:
 2137 035c 0800E001 		.word	31457288
 2138 0360 3C00E001 		.word	31457340
 2139 0364 2400E001 		.word	31457316
 2140              		.cfi_endproc
 2141              	.LFE6:
 2143              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 intcontroller.c
C:\Users\USUARI~1\AppData\Local\Temp\cc7iPcrz.s:1701   .text:00000000 $a
C:\Users\USUARI~1\AppData\Local\Temp\cc7iPcrz.s:1704   .text:00000000 ic_init
C:\Users\USUARI~1\AppData\Local\Temp\cc7iPcrz.s:1740   .text:0000003c $d
C:\Users\USUARI~1\AppData\Local\Temp\cc7iPcrz.s:1745   .text:00000044 $a
C:\Users\USUARI~1\AppData\Local\Temp\cc7iPcrz.s:1748   .text:00000044 ic_conf_irq
C:\Users\USUARI~1\AppData\Local\Temp\cc7iPcrz.s:1834   .text:00000100 ic_conf_fiq
C:\Users\USUARI~1\AppData\Local\Temp\cc7iPcrz.s:1892   .text:0000016c ic_conf_line
C:\Users\USUARI~1\AppData\Local\Temp\cc7iPcrz.s:1968   .text:0000020c ic_enable
C:\Users\USUARI~1\AppData\Local\Temp\cc7iPcrz.s:2010   .text:0000024c ic_disable
C:\Users\USUARI~1\AppData\Local\Temp\cc7iPcrz.s:2058   .text:000002ac $d
C:\Users\USUARI~1\AppData\Local\Temp\cc7iPcrz.s:2062   .text:000002b0 $a
C:\Users\USUARI~1\AppData\Local\Temp\cc7iPcrz.s:2065   .text:000002b0 ic_cleanflag
C:\Users\USUARI~1\AppData\Local\Temp\cc7iPcrz.s:2137   .text:0000035c $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
