
pract3-parte2.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000b80  0c100000  0c100000  00008000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  1 .bss          000001dc  0c100b80  0c100b80  00008b80  2**2
                  ALLOC
  2 .text         0000bd4c  0c100d60  0c100d60  00008d60  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .ARM.exidx    00000008  0c10caac  0c10caac  00014aac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .debug_abbrev 00000885  00000000  00000000  00014ab4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001862  00000000  00000000  00015339  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00000f07  00000000  00000000  00016b9b  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_macinfo 00030957  00000000  00000000  00017aa2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    00000b79  00000000  00000000  000483f9  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_pubnames 00000423  00000000  00000000  00048f72  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_pubtypes 0000022a  00000000  00000000  00049395  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_aranges 00000160  00000000  00000000  000495c0  2**3
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_str    00000816  00000000  00000000  00049720  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .comment      0000003b  00000000  00000000  00049f36  2**0
                  CONTENTS, READONLY
 14 .ARM.attributes 0000002e  00000000  00000000  00049f71  2**0
                  CONTENTS, READONLY
 15 .debug_frame  00001148  00000000  00000000  00049fa0  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

0c100d60 <D8Led_init>:
	 							 DIGIT_4, DIGIT_5, DIGIT_6, DIGIT_7,
								 DIGIT_8, DIGIT_9, DIGIT_A, DIGIT_B,
								 DIGIT_C, DIGIT_D, DIGIT_E, DIGIT_F };

void D8Led_init(void)
{
 c100d60:	e1a0c00d 	mov	ip, sp
 c100d64:	e92dd800 	push	{fp, ip, lr, pc}
 c100d68:	e24cb004 	sub	fp, ip, #4
    LED8ADDR = ~0 ;
 c100d6c:	e3a03785 	mov	r3, #34865152	; 0x2140000
 c100d70:	e3e02000 	mvn	r2, #0
 c100d74:	e5c32000 	strb	r2, [r3]
}
 c100d78:	e24bd00c 	sub	sp, fp, #12
 c100d7c:	e89d6800 	ldm	sp, {fp, sp, lr}
 c100d80:	e12fff1e 	bx	lr

0c100d84 <D8Led_segment>:

void D8Led_segment(int value)
{
 c100d84:	e1a0c00d 	mov	ip, sp
 c100d88:	e92dd800 	push	{fp, ip, lr, pc}
 c100d8c:	e24cb004 	sub	fp, ip, #4
 c100d90:	e24dd008 	sub	sp, sp, #8
 c100d94:	e50b0010 	str	r0, [fp, #-16]
	if( (value >= 0) && (value < 8) ){
 c100d98:	e51b3010 	ldr	r3, [fp, #-16]
 c100d9c:	e3530000 	cmp	r3, #0
 c100da0:	ba00000a 	blt	c100dd0 <D8Led_segment+0x4c>
 c100da4:	e51b3010 	ldr	r3, [fp, #-16]
 c100da8:	e3530007 	cmp	r3, #7
 c100dac:	ca000007 	bgt	c100dd0 <D8Led_segment+0x4c>
		LED8ADDR = ~Segments[value];
 c100db0:	e3a03785 	mov	r3, #34865152	; 0x2140000
 c100db4:	e59f2020 	ldr	r2, [pc, #32]	; c100ddc <D8Led_segment+0x58>
 c100db8:	e51b1010 	ldr	r1, [fp, #-16]
 c100dbc:	e7922101 	ldr	r2, [r2, r1, lsl #2]
 c100dc0:	e20220ff 	and	r2, r2, #255	; 0xff
 c100dc4:	e1e02002 	mvn	r2, r2
 c100dc8:	e20220ff 	and	r2, r2, #255	; 0xff
 c100dcc:	e5c32000 	strb	r2, [r3]
		//correcto para que se ilumine el segmento que está en la posición
		//value del array Segments. Hay que tener en cuenta que el display
		//usa lógica invertida (0 enciende, 1 apaga)


}
 c100dd0:	e24bd00c 	sub	sp, fp, #12
 c100dd4:	e89d6800 	ldm	sp, {fp, sp, lr}
 c100dd8:	e12fff1e 	bx	lr
 c100ddc:	0c100000 	.word	0x0c100000

0c100de0 <D8Led_digit>:

void D8Led_digit(int value)
{
 c100de0:	e1a0c00d 	mov	ip, sp
 c100de4:	e92dd800 	push	{fp, ip, lr, pc}
 c100de8:	e24cb004 	sub	fp, ip, #4
 c100dec:	e24dd008 	sub	sp, sp, #8
 c100df0:	e50b0010 	str	r0, [fp, #-16]
	if( (value >= 0) && (value < 16) ){
 c100df4:	e51b3010 	ldr	r3, [fp, #-16]
 c100df8:	e3530000 	cmp	r3, #0
 c100dfc:	ba00000a 	blt	c100e2c <D8Led_digit+0x4c>
 c100e00:	e51b3010 	ldr	r3, [fp, #-16]
 c100e04:	e353000f 	cmp	r3, #15
 c100e08:	ca000007 	bgt	c100e2c <D8Led_digit+0x4c>
		LED8ADDR = ~Digits[value];
 c100e0c:	e3a03785 	mov	r3, #34865152	; 0x2140000
 c100e10:	e59f2020 	ldr	r2, [pc, #32]	; c100e38 <D8Led_digit+0x58>
 c100e14:	e51b1010 	ldr	r1, [fp, #-16]
 c100e18:	e7922101 	ldr	r2, [r2, r1, lsl #2]
 c100e1c:	e20220ff 	and	r2, r2, #255	; 0xff
 c100e20:	e1e02002 	mvn	r2, r2
 c100e24:	e20220ff 	and	r2, r2, #255	; 0xff
 c100e28:	e5c32000 	strb	r2, [r3]
		// correcto para que se ilumine el dígito que está en la posición
		//value del array Digits. Hay que tener en cuenta que el display
		//usa lógica invertida (0 enciende, 1 apaga)


}
 c100e2c:	e24bd00c 	sub	sp, fp, #12
 c100e30:	e89d6800 	ldm	sp, {fp, sp, lr}
 c100e34:	e12fff1e 	bx	lr
 c100e38:	0c100020 	.word	0x0c100020

0c100e3c <portB_conf>:
#include "gpio.h"

/* Port B interface implementation */

int portB_conf(int pin, enum port_mode mode)
{
 c100e3c:	e1a0c00d 	mov	ip, sp
 c100e40:	e92dd800 	push	{fp, ip, lr, pc}
 c100e44:	e24cb004 	sub	fp, ip, #4
 c100e48:	e24dd010 	sub	sp, sp, #16
 c100e4c:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
 c100e50:	e1a03001 	mov	r3, r1
 c100e54:	e54b3019 	strb	r3, [fp, #-25]	; 0xffffffe7
	int ret = 0;
 c100e58:	e3a03000 	mov	r3, #0
 c100e5c:	e50b3010 	str	r3, [fp, #-16]
	if (pin < 0 || pin > 10){
 c100e60:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
 c100e64:	e3530000 	cmp	r3, #0
 c100e68:	ba000002 	blt	c100e78 <portB_conf+0x3c>
 c100e6c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
 c100e70:	e353000a 	cmp	r3, #10
 c100e74:	da000001 	ble	c100e80 <portB_conf+0x44>
		return -1;
 c100e78:	e3e03000 	mvn	r3, #0
 c100e7c:	ea00001b 	b	c100ef0 <portB_conf+0xb4>
	}
	else{
	if (mode == SIGOUT){
 c100e80:	e55b3019 	ldrb	r3, [fp, #-25]	; 0xffffffe7
 c100e84:	e3530002 	cmp	r3, #2
 c100e88:	1a000008 	bne	c100eb0 <portB_conf+0x74>
		//rPCONB &=~ (0x1 << pin);
		rPCONB |= (0x1 << pin);
 c100e8c:	e59f306c 	ldr	r3, [pc, #108]	; c100f00 <portB_conf+0xc4>
 c100e90:	e59f2068 	ldr	r2, [pc, #104]	; c100f00 <portB_conf+0xc4>
 c100e94:	e5921000 	ldr	r1, [r2]
 c100e98:	e3a00001 	mov	r0, #1
 c100e9c:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
 c100ea0:	e1a02210 	lsl	r2, r0, r2
 c100ea4:	e1812002 	orr	r2, r1, r2
 c100ea8:	e5832000 	str	r2, [r3]
 c100eac:	ea00000e 	b	c100eec <portB_conf+0xb0>
	}
		//COMPLETAR: configurar el puerto B para que pin funcione en modo SIGOUT
	else if (mode == OUTPUT){
 c100eb0:	e55b3019 	ldrb	r3, [fp, #-25]	; 0xffffffe7
 c100eb4:	e3530001 	cmp	r3, #1
 c100eb8:	1a000009 	bne	c100ee4 <portB_conf+0xa8>
		rPCONB &=~ (0x1 << pin);
 c100ebc:	e59f303c 	ldr	r3, [pc, #60]	; c100f00 <portB_conf+0xc4>
 c100ec0:	e59f2038 	ldr	r2, [pc, #56]	; c100f00 <portB_conf+0xc4>
 c100ec4:	e5921000 	ldr	r1, [r2]
 c100ec8:	e3a00001 	mov	r0, #1
 c100ecc:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
 c100ed0:	e1a02210 	lsl	r2, r0, r2
 c100ed4:	e1e02002 	mvn	r2, r2
 c100ed8:	e0012002 	and	r2, r1, r2
 c100edc:	e5832000 	str	r2, [r3]
 c100ee0:	ea000001 	b	c100eec <portB_conf+0xb0>

	}
		//COMPLETAR: configurar el puerto B para que pin funcione en modo OUTPUT
	else{
		ret = -1;
 c100ee4:	e3e03000 	mvn	r3, #0
 c100ee8:	e50b3010 	str	r3, [fp, #-16]
	}
	return ret;
 c100eec:	e51b3010 	ldr	r3, [fp, #-16]
	}
}
 c100ef0:	e1a00003 	mov	r0, r3
 c100ef4:	e24bd00c 	sub	sp, fp, #12
 c100ef8:	e89d6800 	ldm	sp, {fp, sp, lr}
 c100efc:	e12fff1e 	bx	lr
 c100f00:	01d20008 	.word	0x01d20008

0c100f04 <portB_write>:

int portB_write(int pin, enum digital val)
{
 c100f04:	e1a0c00d 	mov	ip, sp
 c100f08:	e92dd800 	push	{fp, ip, lr, pc}
 c100f0c:	e24cb004 	sub	fp, ip, #4
 c100f10:	e24dd008 	sub	sp, sp, #8
 c100f14:	e50b0010 	str	r0, [fp, #-16]
 c100f18:	e1a03001 	mov	r3, r1
 c100f1c:	e54b3011 	strb	r3, [fp, #-17]	; 0xffffffef
	if (pin < 0 || pin > 10)
 c100f20:	e51b3010 	ldr	r3, [fp, #-16]
 c100f24:	e3530000 	cmp	r3, #0
 c100f28:	ba000002 	blt	c100f38 <portB_write+0x34>
 c100f2c:	e51b3010 	ldr	r3, [fp, #-16]
 c100f30:	e353000a 	cmp	r3, #10
 c100f34:	da000001 	ble	c100f40 <portB_write+0x3c>
		return -1;
 c100f38:	e3e03000 	mvn	r3, #0
 c100f3c:	ea00001a 	b	c100fac <portB_write+0xa8>

	if (val < 0 || val > 1)
 c100f40:	e55b3011 	ldrb	r3, [fp, #-17]	; 0xffffffef
 c100f44:	e3530001 	cmp	r3, #1
 c100f48:	9a000001 	bls	c100f54 <portB_write+0x50>
		return -1;
 c100f4c:	e3e03000 	mvn	r3, #0
 c100f50:	ea000015 	b	c100fac <portB_write+0xa8>

	if (val){
 c100f54:	e55b3011 	ldrb	r3, [fp, #-17]	; 0xffffffef
 c100f58:	e3530000 	cmp	r3, #0
 c100f5c:	0a000008 	beq	c100f84 <portB_write+0x80>
		//rPDATB &=~(0x1 << pin);
		rPDATB |= (0x1 << pin);
 c100f60:	e59f3054 	ldr	r3, [pc, #84]	; c100fbc <portB_write+0xb8>
 c100f64:	e59f2050 	ldr	r2, [pc, #80]	; c100fbc <portB_write+0xb8>
 c100f68:	e5921000 	ldr	r1, [r2]
 c100f6c:	e3a00001 	mov	r0, #1
 c100f70:	e51b2010 	ldr	r2, [fp, #-16]
 c100f74:	e1a02210 	lsl	r2, r0, r2
 c100f78:	e1812002 	orr	r2, r1, r2
 c100f7c:	e5832000 	str	r2, [r3]
 c100f80:	ea000008 	b	c100fa8 <portB_write+0xa4>

		//COMPLETAR: configurar para que el led (indicado por pin) se apague
	}
	else{
		rPDATB &=~ (0x1 << pin); //Creo que es así porque tiene un bit por linea
 c100f84:	e59f3030 	ldr	r3, [pc, #48]	; c100fbc <portB_write+0xb8>
 c100f88:	e59f202c 	ldr	r2, [pc, #44]	; c100fbc <portB_write+0xb8>
 c100f8c:	e5921000 	ldr	r1, [r2]
 c100f90:	e3a00001 	mov	r0, #1
 c100f94:	e51b2010 	ldr	r2, [fp, #-16]
 c100f98:	e1a02210 	lsl	r2, r0, r2
 c100f9c:	e1e02002 	mvn	r2, r2
 c100fa0:	e0012002 	and	r2, r1, r2
 c100fa4:	e5832000 	str	r2, [r3]
		//COMPLETAR: configurar para que el led (indicado por pin) se encienda

	}
	return 0;
 c100fa8:	e3a03000 	mov	r3, #0
}
 c100fac:	e1a00003 	mov	r0, r3
 c100fb0:	e24bd00c 	sub	sp, fp, #12
 c100fb4:	e89d6800 	ldm	sp, {fp, sp, lr}
 c100fb8:	e12fff1e 	bx	lr
 c100fbc:	01d2000c 	.word	0x01d2000c

0c100fc0 <portG_conf>:

/* Port G interface implementation */

int portG_conf(int pin, enum port_mode mode)
{
 c100fc0:	e1a0c00d 	mov	ip, sp
 c100fc4:	e92dd800 	push	{fp, ip, lr, pc}
 c100fc8:	e24cb004 	sub	fp, ip, #4
 c100fcc:	e24dd010 	sub	sp, sp, #16
 c100fd0:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
 c100fd4:	e1a03001 	mov	r3, r1
 c100fd8:	e54b3019 	strb	r3, [fp, #-25]	; 0xffffffe7
	int pos  = pin*2;
 c100fdc:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
 c100fe0:	e1a03083 	lsl	r3, r3, #1
 c100fe4:	e50b3010 	str	r3, [fp, #-16]

	if (pin < 0 || pin > 7)
 c100fe8:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
 c100fec:	e3530000 	cmp	r3, #0
 c100ff0:	ba000002 	blt	c101000 <portG_conf+0x40>
 c100ff4:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
 c100ff8:	e3530007 	cmp	r3, #7
 c100ffc:	da000001 	ble	c101008 <portG_conf+0x48>
		return -1;
 c101000:	e3e03000 	mvn	r3, #0
 c101004:	ea000041 	b	c101110 <portG_conf+0x150>

	switch (mode) {
 c101008:	e55b3019 	ldrb	r3, [fp, #-25]	; 0xffffffe7
 c10100c:	e3530003 	cmp	r3, #3
 c101010:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
 c101014:	ea00003a 	b	c101104 <portG_conf+0x144>
 c101018:	0c101028 	.word	0x0c101028
 c10101c:	0c101050 	.word	0x0c101050
 c101020:	0c101074 	.word	0x0c101074
 c101024:	0c1010bc 	.word	0x0c1010bc
		case INPUT:
			rPCONG &=~ (0x3 << pos);
 c101028:	e59f30f0 	ldr	r3, [pc, #240]	; c101120 <portG_conf+0x160>
 c10102c:	e59f20ec 	ldr	r2, [pc, #236]	; c101120 <portG_conf+0x160>
 c101030:	e5921000 	ldr	r1, [r2]
 c101034:	e3a00003 	mov	r0, #3
 c101038:	e51b2010 	ldr	r2, [fp, #-16]
 c10103c:	e1a02210 	lsl	r2, r0, r2
 c101040:	e1e02002 	mvn	r2, r2
 c101044:	e0012002 	and	r2, r1, r2
 c101048:	e5832000 	str	r2, [r3]
			//COMPLETAR: configurar el puerto G para que pin funcione en modo INPUT


			break;
 c10104c:	ea00002e 	b	c10110c <portG_conf+0x14c>
		case OUTPUT:
			//rPCONG &=~ (0x3 << pos);
			rPCONG |= (0x1 << pos);
 c101050:	e59f30c8 	ldr	r3, [pc, #200]	; c101120 <portG_conf+0x160>
 c101054:	e59f20c4 	ldr	r2, [pc, #196]	; c101120 <portG_conf+0x160>
 c101058:	e5921000 	ldr	r1, [r2]
 c10105c:	e3a00001 	mov	r0, #1
 c101060:	e51b2010 	ldr	r2, [fp, #-16]
 c101064:	e1a02210 	lsl	r2, r0, r2
 c101068:	e1812002 	orr	r2, r1, r2
 c10106c:	e5832000 	str	r2, [r3]
			//COMPLETAR: configurar el puerto G para que pin funcione en modo OUTPUT


			break;
 c101070:	ea000025 	b	c10110c <portG_conf+0x14c>
		case SIGOUT:
			rPCONG &=~ (0x3 << pos);
 c101074:	e59f30a4 	ldr	r3, [pc, #164]	; c101120 <portG_conf+0x160>
 c101078:	e59f20a0 	ldr	r2, [pc, #160]	; c101120 <portG_conf+0x160>
 c10107c:	e5921000 	ldr	r1, [r2]
 c101080:	e3a00003 	mov	r0, #3
 c101084:	e51b2010 	ldr	r2, [fp, #-16]
 c101088:	e1a02210 	lsl	r2, r0, r2
 c10108c:	e1e02002 	mvn	r2, r2
 c101090:	e0012002 	and	r2, r1, r2
 c101094:	e5832000 	str	r2, [r3]
			rPCONG |= (0x2 << pos);
 c101098:	e59f3080 	ldr	r3, [pc, #128]	; c101120 <portG_conf+0x160>
 c10109c:	e59f207c 	ldr	r2, [pc, #124]	; c101120 <portG_conf+0x160>
 c1010a0:	e5921000 	ldr	r1, [r2]
 c1010a4:	e3a00002 	mov	r0, #2
 c1010a8:	e51b2010 	ldr	r2, [fp, #-16]
 c1010ac:	e1a02210 	lsl	r2, r0, r2
 c1010b0:	e1812002 	orr	r2, r1, r2
 c1010b4:	e5832000 	str	r2, [r3]
			//COMPLETAR: configurar el puerto G para que pin funcione en modo SIGOUT


			break;
 c1010b8:	ea000013 	b	c10110c <portG_conf+0x14c>
		case EINT:
			rPCONG &=~ (0x3 << pos);
 c1010bc:	e59f305c 	ldr	r3, [pc, #92]	; c101120 <portG_conf+0x160>
 c1010c0:	e59f2058 	ldr	r2, [pc, #88]	; c101120 <portG_conf+0x160>
 c1010c4:	e5921000 	ldr	r1, [r2]
 c1010c8:	e3a00003 	mov	r0, #3
 c1010cc:	e51b2010 	ldr	r2, [fp, #-16]
 c1010d0:	e1a02210 	lsl	r2, r0, r2
 c1010d4:	e1e02002 	mvn	r2, r2
 c1010d8:	e0012002 	and	r2, r1, r2
 c1010dc:	e5832000 	str	r2, [r3]
			rPCONG |= (0x3 << pos);
 c1010e0:	e59f3038 	ldr	r3, [pc, #56]	; c101120 <portG_conf+0x160>
 c1010e4:	e59f2034 	ldr	r2, [pc, #52]	; c101120 <portG_conf+0x160>
 c1010e8:	e5921000 	ldr	r1, [r2]
 c1010ec:	e3a00003 	mov	r0, #3
 c1010f0:	e51b2010 	ldr	r2, [fp, #-16]
 c1010f4:	e1a02210 	lsl	r2, r0, r2
 c1010f8:	e1812002 	orr	r2, r1, r2
 c1010fc:	e5832000 	str	r2, [r3]
			//COMPLETAR: configurar el puerto G para que pin funcione en modo EINT


			break;
 c101100:	ea000001 	b	c10110c <portG_conf+0x14c>
		default:
			return -1;
 c101104:	e3e03000 	mvn	r3, #0
 c101108:	ea000000 	b	c101110 <portG_conf+0x150>
	}

	return 0;
 c10110c:	e3a03000 	mov	r3, #0
}
 c101110:	e1a00003 	mov	r0, r3
 c101114:	e24bd00c 	sub	sp, fp, #12
 c101118:	e89d6800 	ldm	sp, {fp, sp, lr}
 c10111c:	e12fff1e 	bx	lr
 c101120:	01d20040 	.word	0x01d20040

0c101124 <portG_eint_trig>:

int portG_eint_trig(int pin, enum trigger trig)
{
 c101124:	e1a0c00d 	mov	ip, sp
 c101128:	e92dd800 	push	{fp, ip, lr, pc}
 c10112c:	e24cb004 	sub	fp, ip, #4
 c101130:	e24dd010 	sub	sp, sp, #16
 c101134:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
 c101138:	e1a03001 	mov	r3, r1
 c10113c:	e54b3019 	strb	r3, [fp, #-25]	; 0xffffffe7
	int pos = pin*4;
 c101140:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
 c101144:	e1a03103 	lsl	r3, r3, #2
 c101148:	e50b3010 	str	r3, [fp, #-16]

	if (pin < 0 || pin > 7)
 c10114c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
 c101150:	e3530000 	cmp	r3, #0
 c101154:	ba000002 	blt	c101164 <portG_eint_trig+0x40>
 c101158:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
 c10115c:	e3530007 	cmp	r3, #7
 c101160:	da000001 	ble	c10116c <portG_eint_trig+0x48>
		return -1;
 c101164:	e3e03000 	mvn	r3, #0
 c101168:	ea00005d 	b	c1012e4 <portG_eint_trig+0x1c0>

	switch (trig) {
 c10116c:	e55b3019 	ldrb	r3, [fp, #-25]	; 0xffffffe7
 c101170:	e3530004 	cmp	r3, #4
 c101174:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
 c101178:	ea000056 	b	c1012d8 <portG_eint_trig+0x1b4>
 c10117c:	0c101190 	.word	0x0c101190
 c101180:	0c1011b8 	.word	0x0c1011b8
 c101184:	0c101200 	.word	0x0c101200
 c101188:	0c101248 	.word	0x0c101248
 c10118c:	0c101290 	.word	0x0c101290
		case LLOW:
			rEXTINT &=~ (0x7 << pos);//000
 c101190:	e59f315c 	ldr	r3, [pc, #348]	; c1012f4 <portG_eint_trig+0x1d0>
 c101194:	e59f2158 	ldr	r2, [pc, #344]	; c1012f4 <portG_eint_trig+0x1d0>
 c101198:	e5921000 	ldr	r1, [r2]
 c10119c:	e3a00007 	mov	r0, #7
 c1011a0:	e51b2010 	ldr	r2, [fp, #-16]
 c1011a4:	e1a02210 	lsl	r2, r0, r2
 c1011a8:	e1e02002 	mvn	r2, r2
 c1011ac:	e0012002 	and	r2, r1, r2
 c1011b0:	e5832000 	str	r2, [r3]

			// COMPLETAR: configurar el puerto G en pin para detectar la interrupción
			// por nivel bajo


			break;
 c1011b4:	ea000049 	b	c1012e0 <portG_eint_trig+0x1bc>
		case LHIGH:
			rEXTINT &=~ (0x7 << pos);
 c1011b8:	e59f3134 	ldr	r3, [pc, #308]	; c1012f4 <portG_eint_trig+0x1d0>
 c1011bc:	e59f2130 	ldr	r2, [pc, #304]	; c1012f4 <portG_eint_trig+0x1d0>
 c1011c0:	e5921000 	ldr	r1, [r2]
 c1011c4:	e3a00007 	mov	r0, #7
 c1011c8:	e51b2010 	ldr	r2, [fp, #-16]
 c1011cc:	e1a02210 	lsl	r2, r0, r2
 c1011d0:	e1e02002 	mvn	r2, r2
 c1011d4:	e0012002 	and	r2, r1, r2
 c1011d8:	e5832000 	str	r2, [r3]
			rEXTINT |= (0x1 << pos);//001
 c1011dc:	e59f3110 	ldr	r3, [pc, #272]	; c1012f4 <portG_eint_trig+0x1d0>
 c1011e0:	e59f210c 	ldr	r2, [pc, #268]	; c1012f4 <portG_eint_trig+0x1d0>
 c1011e4:	e5921000 	ldr	r1, [r2]
 c1011e8:	e3a00001 	mov	r0, #1
 c1011ec:	e51b2010 	ldr	r2, [fp, #-16]
 c1011f0:	e1a02210 	lsl	r2, r0, r2
 c1011f4:	e1812002 	orr	r2, r1, r2
 c1011f8:	e5832000 	str	r2, [r3]
			// COMPLETAR: configurar el puerto G en pin para detectar la interrupción
			// por nivel alto


			break;
 c1011fc:	ea000037 	b	c1012e0 <portG_eint_trig+0x1bc>
		case FALLING:
			rEXTINT &=~ (0x7 << pos);
 c101200:	e59f30ec 	ldr	r3, [pc, #236]	; c1012f4 <portG_eint_trig+0x1d0>
 c101204:	e59f20e8 	ldr	r2, [pc, #232]	; c1012f4 <portG_eint_trig+0x1d0>
 c101208:	e5921000 	ldr	r1, [r2]
 c10120c:	e3a00007 	mov	r0, #7
 c101210:	e51b2010 	ldr	r2, [fp, #-16]
 c101214:	e1a02210 	lsl	r2, r0, r2
 c101218:	e1e02002 	mvn	r2, r2
 c10121c:	e0012002 	and	r2, r1, r2
 c101220:	e5832000 	str	r2, [r3]
			rEXTINT |= (0x2 << pos);//01x
 c101224:	e59f30c8 	ldr	r3, [pc, #200]	; c1012f4 <portG_eint_trig+0x1d0>
 c101228:	e59f20c4 	ldr	r2, [pc, #196]	; c1012f4 <portG_eint_trig+0x1d0>
 c10122c:	e5921000 	ldr	r1, [r2]
 c101230:	e3a00002 	mov	r0, #2
 c101234:	e51b2010 	ldr	r2, [fp, #-16]
 c101238:	e1a02210 	lsl	r2, r0, r2
 c10123c:	e1812002 	orr	r2, r1, r2
 c101240:	e5832000 	str	r2, [r3]
			// COMPLETAR: configurar el puerto G en pin para detectar la interrupción
			// por flanco de bajada


			break;
 c101244:	ea000025 	b	c1012e0 <portG_eint_trig+0x1bc>
		case RISING:
			rEXTINT &=~ (0x7 << pos);
 c101248:	e59f30a4 	ldr	r3, [pc, #164]	; c1012f4 <portG_eint_trig+0x1d0>
 c10124c:	e59f20a0 	ldr	r2, [pc, #160]	; c1012f4 <portG_eint_trig+0x1d0>
 c101250:	e5921000 	ldr	r1, [r2]
 c101254:	e3a00007 	mov	r0, #7
 c101258:	e51b2010 	ldr	r2, [fp, #-16]
 c10125c:	e1a02210 	lsl	r2, r0, r2
 c101260:	e1e02002 	mvn	r2, r2
 c101264:	e0012002 	and	r2, r1, r2
 c101268:	e5832000 	str	r2, [r3]
			rEXTINT |= (0x4 << pos); //10x
 c10126c:	e59f3080 	ldr	r3, [pc, #128]	; c1012f4 <portG_eint_trig+0x1d0>
 c101270:	e59f207c 	ldr	r2, [pc, #124]	; c1012f4 <portG_eint_trig+0x1d0>
 c101274:	e5921000 	ldr	r1, [r2]
 c101278:	e3a00004 	mov	r0, #4
 c10127c:	e51b2010 	ldr	r2, [fp, #-16]
 c101280:	e1a02210 	lsl	r2, r0, r2
 c101284:	e1812002 	orr	r2, r1, r2
 c101288:	e5832000 	str	r2, [r3]
			// COMPLETAR: configurar el puerto G en pin para detectar la interrupción
			// por flanco de subida


			break;
 c10128c:	ea000013 	b	c1012e0 <portG_eint_trig+0x1bc>
		case EDGE:
			rEXTINT &=~ (0x7 << pos);
 c101290:	e59f305c 	ldr	r3, [pc, #92]	; c1012f4 <portG_eint_trig+0x1d0>
 c101294:	e59f2058 	ldr	r2, [pc, #88]	; c1012f4 <portG_eint_trig+0x1d0>
 c101298:	e5921000 	ldr	r1, [r2]
 c10129c:	e3a00007 	mov	r0, #7
 c1012a0:	e51b2010 	ldr	r2, [fp, #-16]
 c1012a4:	e1a02210 	lsl	r2, r0, r2
 c1012a8:	e1e02002 	mvn	r2, r2
 c1012ac:	e0012002 	and	r2, r1, r2
 c1012b0:	e5832000 	str	r2, [r3]
			rEXTINT |= (0x6 << pos); //11x
 c1012b4:	e59f3038 	ldr	r3, [pc, #56]	; c1012f4 <portG_eint_trig+0x1d0>
 c1012b8:	e59f2034 	ldr	r2, [pc, #52]	; c1012f4 <portG_eint_trig+0x1d0>
 c1012bc:	e5921000 	ldr	r1, [r2]
 c1012c0:	e3a00006 	mov	r0, #6
 c1012c4:	e51b2010 	ldr	r2, [fp, #-16]
 c1012c8:	e1a02210 	lsl	r2, r0, r2
 c1012cc:	e1812002 	orr	r2, r1, r2
 c1012d0:	e5832000 	str	r2, [r3]
			// COMPLETAR: configurar el puerto G en pin para detectar la interrupción
			// por cualquier flanco


			break;
 c1012d4:	ea000001 	b	c1012e0 <portG_eint_trig+0x1bc>
		default:
			return -1;
 c1012d8:	e3e03000 	mvn	r3, #0
 c1012dc:	ea000000 	b	c1012e4 <portG_eint_trig+0x1c0>
	}
	return 0;
 c1012e0:	e3a03000 	mov	r3, #0
}
 c1012e4:	e1a00003 	mov	r0, r3
 c1012e8:	e24bd00c 	sub	sp, fp, #12
 c1012ec:	e89d6800 	ldm	sp, {fp, sp, lr}
 c1012f0:	e12fff1e 	bx	lr
 c1012f4:	01d20050 	.word	0x01d20050

0c1012f8 <portG_write>:

int portG_write(int pin, enum digital val)
{
 c1012f8:	e1a0c00d 	mov	ip, sp
 c1012fc:	e92dd800 	push	{fp, ip, lr, pc}
 c101300:	e24cb004 	sub	fp, ip, #4
 c101304:	e24dd010 	sub	sp, sp, #16
 c101308:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
 c10130c:	e1a03001 	mov	r3, r1
 c101310:	e54b3019 	strb	r3, [fp, #-25]	; 0xffffffe7
	int pos = pin*2;
 c101314:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
 c101318:	e1a03083 	lsl	r3, r3, #1
 c10131c:	e50b3010 	str	r3, [fp, #-16]

	if (pin < 0 || pin > 7)
 c101320:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
 c101324:	e3530000 	cmp	r3, #0
 c101328:	ba000002 	blt	c101338 <portG_write+0x40>
 c10132c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
 c101330:	e3530007 	cmp	r3, #7
 c101334:	da000001 	ble	c101340 <portG_write+0x48>
		return -1;
 c101338:	e3e03000 	mvn	r3, #0
 c10133c:	ea000027 	b	c1013e0 <portG_write+0xe8>

	if (val < 0 || val > 1)
 c101340:	e55b3019 	ldrb	r3, [fp, #-25]	; 0xffffffe7
 c101344:	e3530001 	cmp	r3, #1
 c101348:	9a000001 	bls	c101354 <portG_write+0x5c>
		return -1;
 c10134c:	e3e03000 	mvn	r3, #0
 c101350:	ea000022 	b	c1013e0 <portG_write+0xe8>

	if ((rPCONG & (0x3 << pos)) != (0x1 << pos))
 c101354:	e59f3094 	ldr	r3, [pc, #148]	; c1013f0 <portG_write+0xf8>
 c101358:	e5932000 	ldr	r2, [r3]
 c10135c:	e3a01003 	mov	r1, #3
 c101360:	e51b3010 	ldr	r3, [fp, #-16]
 c101364:	e1a03311 	lsl	r3, r1, r3
 c101368:	e0022003 	and	r2, r2, r3
 c10136c:	e3a01001 	mov	r1, #1
 c101370:	e51b3010 	ldr	r3, [fp, #-16]
 c101374:	e1a03311 	lsl	r3, r1, r3
 c101378:	e1520003 	cmp	r2, r3
 c10137c:	0a000001 	beq	c101388 <portG_write+0x90>
		return -1;
 c101380:	e3e03000 	mvn	r3, #0
 c101384:	ea000015 	b	c1013e0 <portG_write+0xe8>

	if (val){
 c101388:	e55b3019 	ldrb	r3, [fp, #-25]	; 0xffffffe7
 c10138c:	e3530000 	cmp	r3, #0
 c101390:	0a000008 	beq	c1013b8 <portG_write+0xc0>
		//rPDATG &=~ (0x1 << pos);
		rPDATG |= (0x1 << pos); //COMPLETAR: escribir en el registro de datos del puerto G (en pin) un 1
 c101394:	e59f3058 	ldr	r3, [pc, #88]	; c1013f4 <portG_write+0xfc>
 c101398:	e59f2054 	ldr	r2, [pc, #84]	; c1013f4 <portG_write+0xfc>
 c10139c:	e5921000 	ldr	r1, [r2]
 c1013a0:	e3a00001 	mov	r0, #1
 c1013a4:	e51b2010 	ldr	r2, [fp, #-16]
 c1013a8:	e1a02210 	lsl	r2, r0, r2
 c1013ac:	e1812002 	orr	r2, r1, r2
 c1013b0:	e5832000 	str	r2, [r3]
 c1013b4:	ea000008 	b	c1013dc <portG_write+0xe4>
	}
	else
		rPDATG &=~ (0x1 << pos);
 c1013b8:	e59f3034 	ldr	r3, [pc, #52]	; c1013f4 <portG_write+0xfc>
 c1013bc:	e59f2030 	ldr	r2, [pc, #48]	; c1013f4 <portG_write+0xfc>
 c1013c0:	e5921000 	ldr	r1, [r2]
 c1013c4:	e3a00001 	mov	r0, #1
 c1013c8:	e51b2010 	ldr	r2, [fp, #-16]
 c1013cc:	e1a02210 	lsl	r2, r0, r2
 c1013d0:	e1e02002 	mvn	r2, r2
 c1013d4:	e0012002 	and	r2, r1, r2
 c1013d8:	e5832000 	str	r2, [r3]
		//COMPLETAR: escribir en el registro de datos del puerto G (en pin) un 0


	return 0;
 c1013dc:	e3a03000 	mov	r3, #0
}
 c1013e0:	e1a00003 	mov	r0, r3
 c1013e4:	e24bd00c 	sub	sp, fp, #12
 c1013e8:	e89d6800 	ldm	sp, {fp, sp, lr}
 c1013ec:	e12fff1e 	bx	lr
 c1013f0:	01d20040 	.word	0x01d20040
 c1013f4:	01d20044 	.word	0x01d20044

0c1013f8 <portG_read>:

int portG_read(int pin, enum digital* val)
{
 c1013f8:	e1a0c00d 	mov	ip, sp
 c1013fc:	e92dd800 	push	{fp, ip, lr, pc}
 c101400:	e24cb004 	sub	fp, ip, #4
 c101404:	e24dd010 	sub	sp, sp, #16
 c101408:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
 c10140c:	e50b101c 	str	r1, [fp, #-28]	; 0xffffffe4
	int pos = pin*2;
 c101410:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
 c101414:	e1a03083 	lsl	r3, r3, #1
 c101418:	e50b3010 	str	r3, [fp, #-16]

	if (pin < 0 || pin > 7)
 c10141c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
 c101420:	e3530000 	cmp	r3, #0
 c101424:	ba000002 	blt	c101434 <portG_read+0x3c>
 c101428:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
 c10142c:	e3530007 	cmp	r3, #7
 c101430:	da000001 	ble	c10143c <portG_read+0x44>
		return -1;
 c101434:	e3e03000 	mvn	r3, #0
 c101438:	ea000019 	b	c1014a4 <portG_read+0xac>

	if (rPCONG & (0x3 << pos))
 c10143c:	e59f3070 	ldr	r3, [pc, #112]	; c1014b4 <portG_read+0xbc>
 c101440:	e5932000 	ldr	r2, [r3]
 c101444:	e3a01003 	mov	r1, #3
 c101448:	e51b3010 	ldr	r3, [fp, #-16]
 c10144c:	e1a03311 	lsl	r3, r1, r3
 c101450:	e0023003 	and	r3, r2, r3
 c101454:	e3530000 	cmp	r3, #0
 c101458:	0a000001 	beq	c101464 <portG_read+0x6c>
		return -1;
 c10145c:	e3e03000 	mvn	r3, #0
 c101460:	ea00000f 	b	c1014a4 <portG_read+0xac>



	if(rPDATG & (0x3 << pos))//COMPLETAR:true si está a 1 en rDATG el pin indicado por el parámetro pin)
 c101464:	e59f304c 	ldr	r3, [pc, #76]	; c1014b8 <portG_read+0xc0>
 c101468:	e5932000 	ldr	r2, [r3]
 c10146c:	e3a01003 	mov	r1, #3
 c101470:	e51b3010 	ldr	r3, [fp, #-16]
 c101474:	e1a03311 	lsl	r3, r1, r3
 c101478:	e0023003 	and	r3, r2, r3
 c10147c:	e3530000 	cmp	r3, #0
 c101480:	0a000003 	beq	c101494 <portG_read+0x9c>
		*val=HIGH;
 c101484:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
 c101488:	e3a02001 	mov	r2, #1
 c10148c:	e5c32000 	strb	r2, [r3]
 c101490:	ea000002 	b	c1014a0 <portG_read+0xa8>
	else
		*val=LOW;
 c101494:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
 c101498:	e3a02000 	mov	r2, #0
 c10149c:	e5c32000 	strb	r2, [r3]

	return 0;
 c1014a0:	e3a03000 	mov	r3, #0
}
 c1014a4:	e1a00003 	mov	r0, r3
 c1014a8:	e24bd00c 	sub	sp, fp, #12
 c1014ac:	e89d6800 	ldm	sp, {fp, sp, lr}
 c1014b0:	e12fff1e 	bx	lr
 c1014b4:	01d20040 	.word	0x01d20040
 c1014b8:	01d20044 	.word	0x01d20044

0c1014bc <portG_conf_pup>:

int portG_conf_pup(int pin, enum enable st)
{
 c1014bc:	e1a0c00d 	mov	ip, sp
 c1014c0:	e92dd800 	push	{fp, ip, lr, pc}
 c1014c4:	e24cb004 	sub	fp, ip, #4
 c1014c8:	e24dd008 	sub	sp, sp, #8
 c1014cc:	e50b0010 	str	r0, [fp, #-16]
 c1014d0:	e1a03001 	mov	r3, r1
 c1014d4:	e54b3011 	strb	r3, [fp, #-17]	; 0xffffffef
	if (pin < 0 || pin > 7){
 c1014d8:	e51b3010 	ldr	r3, [fp, #-16]
 c1014dc:	e3530000 	cmp	r3, #0
 c1014e0:	ba000002 	blt	c1014f0 <portG_conf_pup+0x34>
 c1014e4:	e51b3010 	ldr	r3, [fp, #-16]
 c1014e8:	e3530007 	cmp	r3, #7
 c1014ec:	da000001 	ble	c1014f8 <portG_conf_pup+0x3c>
		return -1;
 c1014f0:	e3e03000 	mvn	r3, #0
 c1014f4:	ea00001d 	b	c101570 <portG_conf_pup+0xb4>
	}
	if (st != ENABLE && st != DISABLE){
 c1014f8:	e55b3011 	ldrb	r3, [fp, #-17]	; 0xffffffef
 c1014fc:	e3530001 	cmp	r3, #1
 c101500:	0a000004 	beq	c101518 <portG_conf_pup+0x5c>
 c101504:	e55b3011 	ldrb	r3, [fp, #-17]	; 0xffffffef
 c101508:	e3530000 	cmp	r3, #0
 c10150c:	0a000001 	beq	c101518 <portG_conf_pup+0x5c>
		return -1;
 c101510:	e3e03000 	mvn	r3, #0
 c101514:	ea000015 	b	c101570 <portG_conf_pup+0xb4>
	}
	//COMPLETAR: activar la resistencia de pull-up en pin
	if (st == ENABLE){
 c101518:	e55b3011 	ldrb	r3, [fp, #-17]	; 0xffffffef
 c10151c:	e3530001 	cmp	r3, #1
 c101520:	1a000009 	bne	c10154c <portG_conf_pup+0x90>
		rPUPG &=~(0x1 << pin);
 c101524:	e59f3054 	ldr	r3, [pc, #84]	; c101580 <portG_conf_pup+0xc4>
 c101528:	e59f2050 	ldr	r2, [pc, #80]	; c101580 <portG_conf_pup+0xc4>
 c10152c:	e5921000 	ldr	r1, [r2]
 c101530:	e3a00001 	mov	r0, #1
 c101534:	e51b2010 	ldr	r2, [fp, #-16]
 c101538:	e1a02210 	lsl	r2, r0, r2
 c10153c:	e1e02002 	mvn	r2, r2
 c101540:	e0012002 	and	r2, r1, r2
 c101544:	e5832000 	str	r2, [r3]
 c101548:	ea000007 	b	c10156c <portG_conf_pup+0xb0>

	}
	else{
		rPUPG |= (0x1 << pin);
 c10154c:	e59f302c 	ldr	r3, [pc, #44]	; c101580 <portG_conf_pup+0xc4>
 c101550:	e59f2028 	ldr	r2, [pc, #40]	; c101580 <portG_conf_pup+0xc4>
 c101554:	e5921000 	ldr	r1, [r2]
 c101558:	e3a00001 	mov	r0, #1
 c10155c:	e51b2010 	ldr	r2, [fp, #-16]
 c101560:	e1a02210 	lsl	r2, r0, r2
 c101564:	e1812002 	orr	r2, r1, r2
 c101568:	e5832000 	str	r2, [r3]
		//COMPLETAR: desactivar la resistencia de pull-up en pin
	}

	return 0;
 c10156c:	e3a03000 	mov	r3, #0
}
 c101570:	e1a00003 	mov	r0, r3
 c101574:	e24bd00c 	sub	sp, fp, #12
 c101578:	e89d6800 	ldm	sp, {fp, sp, lr}
 c10157c:	e12fff1e 	bx	lr
 c101580:	01d20048 	.word	0x01d20048

0c101584 <start>:
	.equ rEXTINTPND, 0x1d20054

start:

	/* Pasa a modo supervisor */
    mrs	r0, cpsr
 c101584:	e10f0000 	mrs	r0, CPSR
    bic	r0, r0, #MODEMASK
 c101588:	e3c0001f 	bic	r0, r0, #31
    orr	r1, r0, #SVCMODE
 c10158c:	e3801013 	orr	r1, r0, #19
    msr	cpsr_c, r1 
 c101590:	e121f001 	msr	CPSR_c, r1

	/* Inicialización de la sección bss a 0, estándar C */
    ldr	    r3, =Image_ZI_Base
 c101594:	e59f30b8 	ldr	r3, [pc, #184]	; c101654 <InitStacks+0x48>
	ldr	    r1, =Image_ZI_Limit	/* Top of zero init segment */
 c101598:	e59f10b8 	ldr	r1, [pc, #184]	; c101658 <InitStacks+0x4c>
    mov	    r2, #0
 c10159c:	e3a02000 	mov	r2, #0

0c1015a0 <L0>:
L0:
    cmp	    r3, r1	    		/* Zero init */
 c1015a0:	e1530001 	cmp	r3, r1
    strcc   r2, [r3], #4
 c1015a4:	34832004 	strcc	r2, [r3], #4
    bcc	    L0
 c1015a8:	3afffffc 	bcc	c1015a0 <L0>
	/****************************************************/

	/* Desde modo SVC inicializa los SP de todos los modos de ejecuciï¿½n privilegiados */
    bl InitStacks
 c1015ac:	eb000016 	bl	c10160c <InitStacks>

	ldr r0, =rEXTINTPND
 c1015b0:	e59f00a4 	ldr	r0, [pc, #164]	; c10165c <InitStacks+0x50>
	ldr r1, =0xff
 c1015b4:	e3a010ff 	mov	r1, #255	; 0xff
	str r1, [r0]
 c1015b8:	e5801000 	str	r1, [r0]
	ldr r0, =rI_ISPC
 c1015bc:	e59f009c 	ldr	r0, [pc, #156]	; c101660 <InitStacks+0x54>
	ldr r1, =0x1fffffff
 c1015c0:	e3e0120e 	mvn	r1, #-536870912	; 0xe0000000
	str r1, [r0]
 c1015c4:	e5801000 	str	r1, [r0]
	ldr r0, =rF_ISPC
 c1015c8:	e59f0094 	ldr	r0, [pc, #148]	; c101664 <InitStacks+0x58>
	ldr r1, =0x1fffffff
 c1015cc:	e3e0120e 	mvn	r1, #-536870912	; 0xe0000000
	str r1, [r0]
 c1015d0:	e5801000 	str	r1, [r0]

	/* Enmascara interrupciones */
	ldr r0, =rINTMSK
 c1015d4:	e59f008c 	ldr	r0, [pc, #140]	; c101668 <InitStacks+0x5c>
	ldr r1, =0x1fffffff
 c1015d8:	e3e0120e 	mvn	r1, #-536870912	; 0xe0000000
    str r1, [r0]
 c1015dc:	e5801000 	str	r1, [r0]

	/* Habilita linea IRQ y FIQ del CPSR */
	mrs r0, cpsr
 c1015e0:	e10f0000 	mrs	r0, CPSR
	bic r0, r0, #0xC0
 c1015e4:	e3c000c0 	bic	r0, r0, #192	; 0xc0
	msr cpsr_c, r0
 c1015e8:	e121f000 	msr	CPSR_c, r0
	
	/* Desde modo SVC cambia a modo USR e inicializa el SP_usr */
	mrs r0, cpsr
 c1015ec:	e10f0000 	mrs	r0, CPSR
	bic r0, r0, #MODEMASK
 c1015f0:	e3c0001f 	bic	r0, r0, #31
	orr r1, r0, #USRMODE  
 c1015f4:	e3801010 	orr	r1, r0, #16
	msr cpsr_c, r1
 c1015f8:	e121f001 	msr	CPSR_c, r1
	ldr sp, =USRSTACK
 c1015fc:	e59fd068 	ldr	sp, [pc, #104]	; c10166c <InitStacks+0x60>

    mov fp, #0
 c101600:	e3a0b000 	mov	fp, #0

    bl main
 c101604:	eb000468 	bl	c1027ac <main>

0c101608 <End>:

End:
    B End
 c101608:	eafffffe 	b	c101608 <End>

0c10160c <InitStacks>:

InitStacks:
	mrs r0, cpsr
 c10160c:	e10f0000 	mrs	r0, CPSR
	bic r0, r0, #MODEMASK
 c101610:	e3c0001f 	bic	r0, r0, #31

	orr r1, r0, #UNDMODE  /* desde modo SVC cambia a modo UND e inicializa el SP_und */
 c101614:	e380101b 	orr	r1, r0, #27
	msr cpsr_c, r1    
 c101618:	e121f001 	msr	CPSR_c, r1
	ldr sp, =UNDSTACK
 c10161c:	e59fd04c 	ldr	sp, [pc, #76]	; c101670 <InitStacks+0x64>

	orr r1, r0, #ABTMODE  /* desde modo UND cambia a modo ABT e inicializa el SP_abt */
 c101620:	e3801017 	orr	r1, r0, #23
	msr cpsr_c, r1 
 c101624:	e121f001 	msr	CPSR_c, r1
	ldr sp, =ABTSTACK
 c101628:	e59fd044 	ldr	sp, [pc, #68]	; c101674 <InitStacks+0x68>

	orr r1, r0, #IRQMODE  /* desde modo ABT cambia a modo IRQ e inicializa el SP_abt */
 c10162c:	e3801012 	orr	r1, r0, #18
	msr cpsr_c, r1
 c101630:	e121f001 	msr	CPSR_c, r1
	ldr sp, =IRQSTACK
 c101634:	e59fd03c 	ldr	sp, [pc, #60]	; c101678 <InitStacks+0x6c>

	orr r1, r0, #FIQMODE  /* desde modo IRQ cambia a modo FIQ e inicializa el SP_fiq */
 c101638:	e3801011 	orr	r1, r0, #17
	msr cpsr_c, r1
 c10163c:	e121f001 	msr	CPSR_c, r1
	ldr sp, =FIQSTACK
 c101640:	e59fd034 	ldr	sp, [pc, #52]	; c10167c <InitStacks+0x70>

	orr r1, r0, #SVCMODE  /* desde modo FIQ cambia a modo SVC e inicializa el SP_svc */
 c101644:	e3801013 	orr	r1, r0, #19
	msr cpsr_c, r1
 c101648:	e121f001 	msr	CPSR_c, r1
	ldr sp, =SVCSTACK
 c10164c:	e59fd02c 	ldr	sp, [pc, #44]	; c101680 <InitStacks+0x74>
	
    mov pc, lr
 c101650:	e1a0f00e 	mov	pc, lr
 c101654:	0c100b80 	.word	0x0c100b80
 c101658:	0c100d5c 	.word	0x0c100d5c
 c10165c:	01d20054 	.word	0x01d20054
 c101660:	01e00024 	.word	0x01e00024
 c101664:	01e0003c 	.word	0x01e0003c
 c101668:	01e0000c 	.word	0x01e0000c
 c10166c:	0c7ff000 	.word	0x0c7ff000
 c101670:	0c7ff200 	.word	0x0c7ff200
 c101674:	0c7ff300 	.word	0x0c7ff300
 c101678:	0c7ff400 	.word	0x0c7ff400
 c10167c:	0c7ff500 	.word	0x0c7ff500
 c101680:	0c7ff100 	.word	0x0c7ff100

0c101684 <ic_init>:
//Copiar código completo de la práctica 2
#include "44b.h"
#include "intcontroller.h"

void ic_init(void)
{
 c101684:	e1a0c00d 	mov	ip, sp
 c101688:	e92dd800 	push	{fp, ip, lr, pc}
 c10168c:	e24cb004 	sub	fp, ip, #4
	 *    Líneas IRQ y FIQ no habilitadas
	 *    Línea IRQ en modo no vectorizado
	 *    Todo por la línea IRQ
	 *    Todas las interrupciones enmascaradas
	 **/
	rINTMOD = 0x0; // Configura las líneas como de tipo IRQ
 c101690:	e59f3028 	ldr	r3, [pc, #40]	; c1016c0 <ic_init+0x3c>
 c101694:	e3a02000 	mov	r2, #0
 c101698:	e5832000 	str	r2, [r3]
	rINTCON = 0x7; // IRQ y FIQ enmascaradas, IRQ en modo no vectorizado
 c10169c:	e3a0361e 	mov	r3, #31457280	; 0x1e00000
 c1016a0:	e3a02007 	mov	r2, #7
 c1016a4:	e5832000 	str	r2, [r3]
	rINTMSK = ~(0x0); // Enmascara todas las líneas
 c1016a8:	e59f3014 	ldr	r3, [pc, #20]	; c1016c4 <ic_init+0x40>
 c1016ac:	e3e02000 	mvn	r2, #0
 c1016b0:	e5832000 	str	r2, [r3]
}
 c1016b4:	e24bd00c 	sub	sp, fp, #12
 c1016b8:	e89d6800 	ldm	sp, {fp, sp, lr}
 c1016bc:	e12fff1e 	bx	lr
 c1016c0:	01e00008 	.word	0x01e00008
 c1016c4:	01e0000c 	.word	0x01e0000c

0c1016c8 <ic_conf_irq>:

int ic_conf_irq(enum enable st, enum int_vec vec)
{
 c1016c8:	e1a0c00d 	mov	ip, sp
 c1016cc:	e92dd800 	push	{fp, ip, lr, pc}
 c1016d0:	e24cb004 	sub	fp, ip, #4
 c1016d4:	e24dd008 	sub	sp, sp, #8
 c1016d8:	e1a02000 	mov	r2, r0
 c1016dc:	e1a03001 	mov	r3, r1
 c1016e0:	e54b200d 	strb	r2, [fp, #-13]
 c1016e4:	e54b300e 	strb	r3, [fp, #-14]
	//int conf = rINTCON;

	if (st != ENABLE && st != DISABLE)
 c1016e8:	e55b300d 	ldrb	r3, [fp, #-13]
 c1016ec:	e3530001 	cmp	r3, #1
 c1016f0:	0a000004 	beq	c101708 <ic_conf_irq+0x40>
 c1016f4:	e55b300d 	ldrb	r3, [fp, #-13]
 c1016f8:	e3530000 	cmp	r3, #0
 c1016fc:	0a000001 	beq	c101708 <ic_conf_irq+0x40>
		return -1;
 c101700:	e3e03000 	mvn	r3, #0
 c101704:	ea000021 	b	c101790 <ic_conf_irq+0xc8>

	if (vec == VEC){
 c101708:	e55b300e 	ldrb	r3, [fp, #-14]
 c10170c:	e3530000 	cmp	r3, #0
 c101710:	1a000005 	bne	c10172c <ic_conf_irq+0x64>
		//COMPLETAR: poner la línea IRQ en modo vectorizado
		rINTCON &=~ (0x1 << 2);
 c101714:	e3a0361e 	mov	r3, #31457280	; 0x1e00000
 c101718:	e3a0261e 	mov	r2, #31457280	; 0x1e00000
 c10171c:	e5922000 	ldr	r2, [r2]
 c101720:	e3c22004 	bic	r2, r2, #4
 c101724:	e5832000 	str	r2, [r3]
 c101728:	ea000009 	b	c101754 <ic_conf_irq+0x8c>
	}
	else{
		rINTCON &=~ (0x1 << 1);
 c10172c:	e3a0361e 	mov	r3, #31457280	; 0x1e00000
 c101730:	e3a0261e 	mov	r2, #31457280	; 0x1e00000
 c101734:	e5922000 	ldr	r2, [r2]
 c101738:	e3c22002 	bic	r2, r2, #2
 c10173c:	e5832000 	str	r2, [r3]
		rINTCON |= (0x1 << 2);
 c101740:	e3a0361e 	mov	r3, #31457280	; 0x1e00000
 c101744:	e3a0261e 	mov	r2, #31457280	; 0x1e00000
 c101748:	e5922000 	ldr	r2, [r2]
 c10174c:	e3822004 	orr	r2, r2, #4
 c101750:	e5832000 	str	r2, [r3]
		//COMPLETAR: poner la línea IRQ en modo no vectorizado

	}
	if (st == ENABLE){
 c101754:	e55b300d 	ldrb	r3, [fp, #-13]
 c101758:	e3530001 	cmp	r3, #1
 c10175c:	1a000005 	bne	c101778 <ic_conf_irq+0xb0>
		//COMPLETAR: habilitar la línea IRQ
		rINTCON &=~ (0x1 << 1);
 c101760:	e3a0361e 	mov	r3, #31457280	; 0x1e00000
 c101764:	e3a0261e 	mov	r2, #31457280	; 0x1e00000
 c101768:	e5922000 	ldr	r2, [r2]
 c10176c:	e3c22002 	bic	r2, r2, #2
 c101770:	e5832000 	str	r2, [r3]
 c101774:	ea000004 	b	c10178c <ic_conf_irq+0xc4>
	}
	else{
		//COMPLETAR: deshabilitar la línea IRQ
		rINTCON |= (0x1 << 1);
 c101778:	e3a0361e 	mov	r3, #31457280	; 0x1e00000
 c10177c:	e3a0261e 	mov	r2, #31457280	; 0x1e00000
 c101780:	e5922000 	ldr	r2, [r2]
 c101784:	e3822002 	orr	r2, r2, #2
 c101788:	e5832000 	str	r2, [r3]
	}
	//rINTCON = conf; //PREGUNTAR
	return 0;
 c10178c:	e3a03000 	mov	r3, #0
}
 c101790:	e1a00003 	mov	r0, r3
 c101794:	e24bd00c 	sub	sp, fp, #12
 c101798:	e89d6800 	ldm	sp, {fp, sp, lr}
 c10179c:	e12fff1e 	bx	lr

0c1017a0 <ic_conf_fiq>:

int ic_conf_fiq(enum enable st)
{
 c1017a0:	e1a0c00d 	mov	ip, sp
 c1017a4:	e92dd800 	push	{fp, ip, lr, pc}
 c1017a8:	e24cb004 	sub	fp, ip, #4
 c1017ac:	e24dd010 	sub	sp, sp, #16
 c1017b0:	e1a03000 	mov	r3, r0
 c1017b4:	e54b3015 	strb	r3, [fp, #-21]	; 0xffffffeb
	int ret = 0;
 c1017b8:	e3a03000 	mov	r3, #0
 c1017bc:	e50b3010 	str	r3, [fp, #-16]

	if (st == ENABLE){
 c1017c0:	e55b3015 	ldrb	r3, [fp, #-21]	; 0xffffffeb
 c1017c4:	e3530001 	cmp	r3, #1
 c1017c8:	1a000005 	bne	c1017e4 <ic_conf_fiq+0x44>
		rINTCON &=~ (0x1 << 0);
 c1017cc:	e3a0361e 	mov	r3, #31457280	; 0x1e00000
 c1017d0:	e3a0261e 	mov	r2, #31457280	; 0x1e00000
 c1017d4:	e5922000 	ldr	r2, [r2]
 c1017d8:	e3c22001 	bic	r2, r2, #1
 c1017dc:	e5832000 	str	r2, [r3]
 c1017e0:	ea00000a 	b	c101810 <ic_conf_fiq+0x70>
		//COMPLETAR: habilitar la línea FIQ
	}

	else if (st == DISABLE){
 c1017e4:	e55b3015 	ldrb	r3, [fp, #-21]	; 0xffffffeb
 c1017e8:	e3530000 	cmp	r3, #0
 c1017ec:	1a000005 	bne	c101808 <ic_conf_fiq+0x68>
		//COMPLETAR: deshabilitar la línea FIQ
		rINTCON |= (0x1 << 0);
 c1017f0:	e3a0361e 	mov	r3, #31457280	; 0x1e00000
 c1017f4:	e3a0261e 	mov	r2, #31457280	; 0x1e00000
 c1017f8:	e5922000 	ldr	r2, [r2]
 c1017fc:	e3822001 	orr	r2, r2, #1
 c101800:	e5832000 	str	r2, [r3]
 c101804:	ea000001 	b	c101810 <ic_conf_fiq+0x70>
	}
	else{
		ret = -1;
 c101808:	e3e03000 	mvn	r3, #0
 c10180c:	e50b3010 	str	r3, [fp, #-16]
	}
	return ret;
 c101810:	e51b3010 	ldr	r3, [fp, #-16]
}
 c101814:	e1a00003 	mov	r0, r3
 c101818:	e24bd00c 	sub	sp, fp, #12
 c10181c:	e89d6800 	ldm	sp, {fp, sp, lr}
 c101820:	e12fff1e 	bx	lr

0c101824 <ic_conf_line>:

int ic_conf_line(enum int_line line, enum int_mode mode)
{
 c101824:	e1a0c00d 	mov	ip, sp
 c101828:	e92dd800 	push	{fp, ip, lr, pc}
 c10182c:	e24cb004 	sub	fp, ip, #4
 c101830:	e24dd010 	sub	sp, sp, #16
 c101834:	e1a02000 	mov	r2, r0
 c101838:	e1a03001 	mov	r3, r1
 c10183c:	e54b2015 	strb	r2, [fp, #-21]	; 0xffffffeb
 c101840:	e54b3016 	strb	r3, [fp, #-22]	; 0xffffffea
	unsigned int bit = INT_BIT(line);
 c101844:	e55b3015 	ldrb	r3, [fp, #-21]	; 0xffffffeb
 c101848:	e3a02001 	mov	r2, #1
 c10184c:	e1a03312 	lsl	r3, r2, r3
 c101850:	e50b3010 	str	r3, [fp, #-16]

	if (line < 0 || line > 26)
 c101854:	e55b3015 	ldrb	r3, [fp, #-21]	; 0xffffffeb
 c101858:	e353001a 	cmp	r3, #26
 c10185c:	9a000001 	bls	c101868 <ic_conf_line+0x44>
		return -1;
 c101860:	e3e03000 	mvn	r3, #0
 c101864:	ea00001d 	b	c1018e0 <ic_conf_line+0xbc>

	if (mode != IRQ && mode != FIQ)
 c101868:	e55b3016 	ldrb	r3, [fp, #-22]	; 0xffffffea
 c10186c:	e3530000 	cmp	r3, #0
 c101870:	0a000004 	beq	c101888 <ic_conf_line+0x64>
 c101874:	e55b3016 	ldrb	r3, [fp, #-22]	; 0xffffffea
 c101878:	e3530001 	cmp	r3, #1
 c10187c:	0a000001 	beq	c101888 <ic_conf_line+0x64>
		return -1;
 c101880:	e3e03000 	mvn	r3, #0
 c101884:	ea000015 	b	c1018e0 <ic_conf_line+0xbc>

	if (mode == IRQ){
 c101888:	e55b3016 	ldrb	r3, [fp, #-22]	; 0xffffffea
 c10188c:	e3530000 	cmp	r3, #0
 c101890:	1a000009 	bne	c1018bc <ic_conf_line+0x98>
		//COMPLETAR: poner la línea line en modo IRQ

		rINTMOD &=~ (0x1 << line);
 c101894:	e59f3054 	ldr	r3, [pc, #84]	; c1018f0 <ic_conf_line+0xcc>
 c101898:	e59f2050 	ldr	r2, [pc, #80]	; c1018f0 <ic_conf_line+0xcc>
 c10189c:	e5921000 	ldr	r1, [r2]
 c1018a0:	e55b2015 	ldrb	r2, [fp, #-21]	; 0xffffffeb
 c1018a4:	e3a00001 	mov	r0, #1
 c1018a8:	e1a02210 	lsl	r2, r0, r2
 c1018ac:	e1e02002 	mvn	r2, r2
 c1018b0:	e0012002 	and	r2, r1, r2
 c1018b4:	e5832000 	str	r2, [r3]
 c1018b8:	ea000007 	b	c1018dc <ic_conf_line+0xb8>
	}
	else{
		//COMPLETAR: poner la línea line en modo FIQ
		rINTMOD |= (0x1 << line);
 c1018bc:	e59f302c 	ldr	r3, [pc, #44]	; c1018f0 <ic_conf_line+0xcc>
 c1018c0:	e59f2028 	ldr	r2, [pc, #40]	; c1018f0 <ic_conf_line+0xcc>
 c1018c4:	e5921000 	ldr	r1, [r2]
 c1018c8:	e55b2015 	ldrb	r2, [fp, #-21]	; 0xffffffeb
 c1018cc:	e3a00001 	mov	r0, #1
 c1018d0:	e1a02210 	lsl	r2, r0, r2
 c1018d4:	e1812002 	orr	r2, r1, r2
 c1018d8:	e5832000 	str	r2, [r3]
	}
	return 0;
 c1018dc:	e3a03000 	mov	r3, #0
}
 c1018e0:	e1a00003 	mov	r0, r3
 c1018e4:	e24bd00c 	sub	sp, fp, #12
 c1018e8:	e89d6800 	ldm	sp, {fp, sp, lr}
 c1018ec:	e12fff1e 	bx	lr
 c1018f0:	01e00008 	.word	0x01e00008

0c1018f4 <ic_enable>:

int ic_enable(enum int_line line)
{
 c1018f4:	e1a0c00d 	mov	ip, sp
 c1018f8:	e92dd800 	push	{fp, ip, lr, pc}
 c1018fc:	e24cb004 	sub	fp, ip, #4
 c101900:	e24dd008 	sub	sp, sp, #8
 c101904:	e1a03000 	mov	r3, r0
 c101908:	e54b300d 	strb	r3, [fp, #-13]
	if (line < 0 || line > 26)
 c10190c:	e55b300d 	ldrb	r3, [fp, #-13]
 c101910:	e353001a 	cmp	r3, #26
 c101914:	9a000001 	bls	c101920 <ic_enable+0x2c>
		return -1;
 c101918:	e3e03000 	mvn	r3, #0
 c10191c:	ea00000e 	b	c10195c <ic_enable+0x68>

	//COMPLETAR: habilitar las interrupciones por la línea line (INT_BIT(line))
	//habilitar también bit global
	rINTMSK &=~ (0x1 << line );
 c101920:	e59f3044 	ldr	r3, [pc, #68]	; c10196c <ic_enable+0x78>
 c101924:	e59f2040 	ldr	r2, [pc, #64]	; c10196c <ic_enable+0x78>
 c101928:	e5921000 	ldr	r1, [r2]
 c10192c:	e55b200d 	ldrb	r2, [fp, #-13]
 c101930:	e3a00001 	mov	r0, #1
 c101934:	e1a02210 	lsl	r2, r0, r2
 c101938:	e1e02002 	mvn	r2, r2
 c10193c:	e0012002 	and	r2, r1, r2
 c101940:	e5832000 	str	r2, [r3]
	rINTMSK &=~ (0x1<< 26 );
 c101944:	e59f3020 	ldr	r3, [pc, #32]	; c10196c <ic_enable+0x78>
 c101948:	e59f201c 	ldr	r2, [pc, #28]	; c10196c <ic_enable+0x78>
 c10194c:	e5922000 	ldr	r2, [r2]
 c101950:	e3c22301 	bic	r2, r2, #67108864	; 0x4000000
 c101954:	e5832000 	str	r2, [r3]

	return 0;
 c101958:	e3a03000 	mov	r3, #0
}
 c10195c:	e1a00003 	mov	r0, r3
 c101960:	e24bd00c 	sub	sp, fp, #12
 c101964:	e89d6800 	ldm	sp, {fp, sp, lr}
 c101968:	e12fff1e 	bx	lr
 c10196c:	01e0000c 	.word	0x01e0000c

0c101970 <ic_disable>:

int ic_disable(enum int_line line)
{
 c101970:	e1a0c00d 	mov	ip, sp
 c101974:	e92dd800 	push	{fp, ip, lr, pc}
 c101978:	e24cb004 	sub	fp, ip, #4
 c10197c:	e24dd008 	sub	sp, sp, #8
 c101980:	e1a03000 	mov	r3, r0
 c101984:	e54b300d 	strb	r3, [fp, #-13]
	if (line < 0 || line > 26)
 c101988:	e55b300d 	ldrb	r3, [fp, #-13]
 c10198c:	e353001a 	cmp	r3, #26
 c101990:	9a000001 	bls	c10199c <ic_disable+0x2c>
		return -1;
 c101994:	e3e03000 	mvn	r3, #0
 c101998:	ea000008 	b	c1019c0 <ic_disable+0x50>

	//COMPLETAR: enmascarar las interrupciones por la línea line (INT_BIT(line))
	rINTMSK |= (0x1 << line);
 c10199c:	e59f302c 	ldr	r3, [pc, #44]	; c1019d0 <ic_disable+0x60>
 c1019a0:	e59f2028 	ldr	r2, [pc, #40]	; c1019d0 <ic_disable+0x60>
 c1019a4:	e5921000 	ldr	r1, [r2]
 c1019a8:	e55b200d 	ldrb	r2, [fp, #-13]
 c1019ac:	e3a00001 	mov	r0, #1
 c1019b0:	e1a02210 	lsl	r2, r0, r2
 c1019b4:	e1812002 	orr	r2, r1, r2
 c1019b8:	e5832000 	str	r2, [r3]

	return 0;
 c1019bc:	e3a03000 	mov	r3, #0
}
 c1019c0:	e1a00003 	mov	r0, r3
 c1019c4:	e24bd00c 	sub	sp, fp, #12
 c1019c8:	e89d6800 	ldm	sp, {fp, sp, lr}
 c1019cc:	e12fff1e 	bx	lr
 c1019d0:	01e0000c 	.word	0x01e0000c

0c1019d4 <ic_cleanflag>:

int ic_cleanflag(enum int_line line)
{
 c1019d4:	e1a0c00d 	mov	ip, sp
 c1019d8:	e92dd800 	push	{fp, ip, lr, pc}
 c1019dc:	e24cb004 	sub	fp, ip, #4
 c1019e0:	e24dd010 	sub	sp, sp, #16
 c1019e4:	e1a03000 	mov	r3, r0
 c1019e8:	e54b3015 	strb	r3, [fp, #-21]	; 0xffffffeb
	int bit;

	if (line < 0 || line > 26)
 c1019ec:	e55b3015 	ldrb	r3, [fp, #-21]	; 0xffffffeb
 c1019f0:	e353001a 	cmp	r3, #26
 c1019f4:	9a000001 	bls	c101a00 <ic_cleanflag+0x2c>
		return -1;
 c1019f8:	e3e03000 	mvn	r3, #0
 c1019fc:	ea00001b 	b	c101a70 <ic_cleanflag+0x9c>

	bit = INT_BIT(line);
 c101a00:	e55b3015 	ldrb	r3, [fp, #-21]	; 0xffffffeb
 c101a04:	e3a02001 	mov	r2, #1
 c101a08:	e1a03312 	lsl	r3, r2, r3
 c101a0c:	e50b3010 	str	r3, [fp, #-16]

	if (rINTMOD & bit){
 c101a10:	e59f3068 	ldr	r3, [pc, #104]	; c101a80 <ic_cleanflag+0xac>
 c101a14:	e5932000 	ldr	r2, [r3]
 c101a18:	e51b3010 	ldr	r3, [fp, #-16]
 c101a1c:	e0023003 	and	r3, r2, r3
 c101a20:	e3530000 	cmp	r3, #0
 c101a24:	0a000008 	beq	c101a4c <ic_cleanflag+0x78>
		//COMPLETAR: borrar el flag de interrupción correspondiente a la línea line
		//con la línea configurada por FIQ
		rF_ISPC |= (0x1 << line);
 c101a28:	e59f3054 	ldr	r3, [pc, #84]	; c101a84 <ic_cleanflag+0xb0>
 c101a2c:	e59f2050 	ldr	r2, [pc, #80]	; c101a84 <ic_cleanflag+0xb0>
 c101a30:	e5921000 	ldr	r1, [r2]
 c101a34:	e55b2015 	ldrb	r2, [fp, #-21]	; 0xffffffeb
 c101a38:	e3a00001 	mov	r0, #1
 c101a3c:	e1a02210 	lsl	r2, r0, r2
 c101a40:	e1812002 	orr	r2, r1, r2
 c101a44:	e5832000 	str	r2, [r3]
 c101a48:	ea000007 	b	c101a6c <ic_cleanflag+0x98>
	}
	else{
		//COMPLETAR: borrar el flag de interrupción correspondiente a la línea line
		//con la línea configurada por IRQ
		rI_ISPC |= (0x1 << line);
 c101a4c:	e59f3034 	ldr	r3, [pc, #52]	; c101a88 <ic_cleanflag+0xb4>
 c101a50:	e59f2030 	ldr	r2, [pc, #48]	; c101a88 <ic_cleanflag+0xb4>
 c101a54:	e5921000 	ldr	r1, [r2]
 c101a58:	e55b2015 	ldrb	r2, [fp, #-21]	; 0xffffffeb
 c101a5c:	e3a00001 	mov	r0, #1
 c101a60:	e1a02210 	lsl	r2, r0, r2
 c101a64:	e1812002 	orr	r2, r1, r2
 c101a68:	e5832000 	str	r2, [r3]
	}
	return 0;
 c101a6c:	e3a03000 	mov	r3, #0
}
 c101a70:	e1a00003 	mov	r0, r3
 c101a74:	e24bd00c 	sub	sp, fp, #12
 c101a78:	e89d6800 	ldm	sp, {fp, sp, lr}
 c101a7c:	e12fff1e 	bx	lr
 c101a80:	01e00008 	.word	0x01e00008
 c101a84:	01e0003c 	.word	0x01e0003c
 c101a88:	01e00024 	.word	0x01e00024

0c101a8c <kb_scan>:
/*--- Variables globales ---*/
volatile static unsigned char *keyboard_base = (unsigned char *)0x06000000;


int kb_scan(void)
{
 c101a8c:	e1a0c00d 	mov	ip, sp
 c101a90:	e92dd810 	push	{r4, fp, ip, lr, pc}
 c101a94:	e24cb004 	sub	fp, ip, #4
 c101a98:	e24dd064 	sub	sp, sp, #100	; 0x64
	int value = -1;
 c101a9c:	e3e03000 	mvn	r3, #0
 c101aa0:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
	int i;
	char temp;
	int lines[4]  = {0xfd, 0xfb, 0xf7, 0xef};
 c101aa4:	e59f3184 	ldr	r3, [pc, #388]	; c101c30 <kb_scan+0x1a4>
 c101aa8:	e24bc030 	sub	ip, fp, #48	; 0x30
 c101aac:	e893000f 	ldm	r3, {r0, r1, r2, r3}
 c101ab0:	e88c000f 	stm	ip, {r0, r1, r2, r3}
	int map[4][4] = {{0, 1, 2, 3},
 c101ab4:	e59f3178 	ldr	r3, [pc, #376]	; c101c34 <kb_scan+0x1a8>
 c101ab8:	e24bc070 	sub	ip, fp, #112	; 0x70
 c101abc:	e1a04003 	mov	r4, r3
 c101ac0:	e8b4000f 	ldm	r4!, {r0, r1, r2, r3}
 c101ac4:	e8ac000f 	stmia	ip!, {r0, r1, r2, r3}
 c101ac8:	e8b4000f 	ldm	r4!, {r0, r1, r2, r3}
 c101acc:	e8ac000f 	stmia	ip!, {r0, r1, r2, r3}
 c101ad0:	e8b4000f 	ldm	r4!, {r0, r1, r2, r3}
 c101ad4:	e8ac000f 	stmia	ip!, {r0, r1, r2, r3}
 c101ad8:	e894000f 	ldm	r4, {r0, r1, r2, r3}
 c101adc:	e88c000f 	stm	ip, {r0, r1, r2, r3}
					{4, 5, 6, 7},
					{8, 9, 0xA, 0xB},
					{0xC, 0xD, 0xE, 0xF}};

	for (i = 0; (i < 4) && (value == -1); i++) {
 c101ae0:	e3a03000 	mov	r3, #0
 c101ae4:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
 c101ae8:	ea000045 	b	c101c04 <kb_scan+0x178>
		temp = *(keyboard_base+lines[i]);
 c101aec:	e59f3144 	ldr	r3, [pc, #324]	; c101c38 <kb_scan+0x1ac>
 c101af0:	e5932000 	ldr	r2, [r3]
 c101af4:	e51b101c 	ldr	r1, [fp, #-28]	; 0xffffffe4
 c101af8:	e3e0301b 	mvn	r3, #27
 c101afc:	e1a01101 	lsl	r1, r1, #2
 c101b00:	e24b0014 	sub	r0, fp, #20
 c101b04:	e0801001 	add	r1, r0, r1
 c101b08:	e0813003 	add	r3, r1, r3
 c101b0c:	e5933000 	ldr	r3, [r3]
 c101b10:	e0823003 	add	r3, r2, r3
 c101b14:	e5d33000 	ldrb	r3, [r3]
 c101b18:	e54b301d 	strb	r3, [fp, #-29]	; 0xffffffe3

		if(( temp & KEY_VALUE_MASK) != KEY_VALUE_MASK) {
 c101b1c:	e55b301d 	ldrb	r3, [fp, #-29]	; 0xffffffe3
 c101b20:	e203300f 	and	r3, r3, #15
 c101b24:	e353000f 	cmp	r3, #15
 c101b28:	0a000032 	beq	c101bf8 <kb_scan+0x16c>
			//COMPLETAR:
			if((temp &  0xE) == 0xE){	 //      si está el bit 1 a 0 la tecla es la map[i][3]
 c101b2c:	e55b301d 	ldrb	r3, [fp, #-29]	; 0xffffffe3
 c101b30:	e203300e 	and	r3, r3, #14
 c101b34:	e353000e 	cmp	r3, #14
 c101b38:	1a000008 	bne	c101b60 <kb_scan+0xd4>
				value =map[i][3];
 c101b3c:	e51b201c 	ldr	r2, [fp, #-28]	; 0xffffffe4
 c101b40:	e3e0304f 	mvn	r3, #79	; 0x4f
 c101b44:	e1a02202 	lsl	r2, r2, #4
 c101b48:	e24b1014 	sub	r1, fp, #20
 c101b4c:	e0812002 	add	r2, r1, r2
 c101b50:	e0823003 	add	r3, r2, r3
 c101b54:	e5933000 	ldr	r3, [r3]
 c101b58:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
 c101b5c:	ea000025 	b	c101bf8 <kb_scan+0x16c>
			}
			else if ((temp & 0xD) == 0xD )	{			//      si está el bit 2 a 0 la tecla es la map[i][2]
 c101b60:	e55b301d 	ldrb	r3, [fp, #-29]	; 0xffffffe3
 c101b64:	e203300d 	and	r3, r3, #13
 c101b68:	e353000d 	cmp	r3, #13
 c101b6c:	1a000008 	bne	c101b94 <kb_scan+0x108>
				value = map[i][2];
 c101b70:	e51b201c 	ldr	r2, [fp, #-28]	; 0xffffffe4
 c101b74:	e3e03053 	mvn	r3, #83	; 0x53
 c101b78:	e1a02202 	lsl	r2, r2, #4
 c101b7c:	e24b0014 	sub	r0, fp, #20
 c101b80:	e0802002 	add	r2, r0, r2
 c101b84:	e0823003 	add	r3, r2, r3
 c101b88:	e5933000 	ldr	r3, [r3]
 c101b8c:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
 c101b90:	ea000018 	b	c101bf8 <kb_scan+0x16c>
			}

			else if( (temp & 0xB) == 0xB ){//      si está el bit 3 a 0 la tecla es la map[i][1]
 c101b94:	e55b301d 	ldrb	r3, [fp, #-29]	; 0xffffffe3
 c101b98:	e203300b 	and	r3, r3, #11
 c101b9c:	e353000b 	cmp	r3, #11
 c101ba0:	1a000008 	bne	c101bc8 <kb_scan+0x13c>
				value = map[i][1];
 c101ba4:	e51b201c 	ldr	r2, [fp, #-28]	; 0xffffffe4
 c101ba8:	e3e03057 	mvn	r3, #87	; 0x57
 c101bac:	e1a02202 	lsl	r2, r2, #4
 c101bb0:	e24b1014 	sub	r1, fp, #20
 c101bb4:	e0812002 	add	r2, r1, r2
 c101bb8:	e0823003 	add	r3, r2, r3
 c101bbc:	e5933000 	ldr	r3, [r3]
 c101bc0:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
 c101bc4:	ea00000b 	b	c101bf8 <kb_scan+0x16c>
			}
			else if ((temp & 0x7) == 0x7)	{			//      si está el bit 4 a 0 la tecla es la map[i][0]
 c101bc8:	e55b301d 	ldrb	r3, [fp, #-29]	; 0xffffffe3
 c101bcc:	e2033007 	and	r3, r3, #7
 c101bd0:	e3530007 	cmp	r3, #7
 c101bd4:	1a000007 	bne	c101bf8 <kb_scan+0x16c>
				value = map[i][0];
 c101bd8:	e51b201c 	ldr	r2, [fp, #-28]	; 0xffffffe4
 c101bdc:	e3e0305b 	mvn	r3, #91	; 0x5b
 c101be0:	e1a02202 	lsl	r2, r2, #4
 c101be4:	e24b0014 	sub	r0, fp, #20
 c101be8:	e0802002 	add	r2, r0, r2
 c101bec:	e0823003 	add	r3, r2, r3
 c101bf0:	e5933000 	ldr	r3, [r3]
 c101bf4:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
	int map[4][4] = {{0, 1, 2, 3},
					{4, 5, 6, 7},
					{8, 9, 0xA, 0xB},
					{0xC, 0xD, 0xE, 0xF}};

	for (i = 0; (i < 4) && (value == -1); i++) {
 c101bf8:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
 c101bfc:	e2833001 	add	r3, r3, #1
 c101c00:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
 c101c04:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
 c101c08:	e3530003 	cmp	r3, #3
 c101c0c:	ca000002 	bgt	c101c1c <kb_scan+0x190>
 c101c10:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
 c101c14:	e3730001 	cmn	r3, #1
 c101c18:	0affffb3 	beq	c101aec <kb_scan+0x60>
				value = map[i][0];
			}
		}
	}

	return value;
 c101c1c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
}
 c101c20:	e1a00003 	mov	r0, r3
 c101c24:	e24bd010 	sub	sp, fp, #16
 c101c28:	e89d6810 	ldm	sp, {r4, fp, sp, lr}
 c101c2c:	e12fff1e 	bx	lr
 c101c30:	0c100934 	.word	0x0c100934
 c101c34:	0c100944 	.word	0x0c100944
 c101c38:	0c100060 	.word	0x0c100060

0c101c3c <leds_init>:
// significativos, cada uno para un led
// 1 encendido y 0 apagado
static unsigned int status = 0;

void leds_init( void )
{
 c101c3c:	e1a0c00d 	mov	ip, sp
 c101c40:	e92dd800 	push	{fp, ip, lr, pc}
 c101c44:	e24cb004 	sub	fp, ip, #4
	 portB_conf(9, OUTPUT);
 c101c48:	e3a00009 	mov	r0, #9
 c101c4c:	e3a01001 	mov	r1, #1
 c101c50:	ebfffc79 	bl	c100e3c <portB_conf>
	 portB_conf(10, OUTPUT);
 c101c54:	e3a0000a 	mov	r0, #10
 c101c58:	e3a01001 	mov	r1, #1
 c101c5c:	ebfffc76 	bl	c100e3c <portB_conf>
	//COMPLETAR usando el interfaz del puerto B definido en gpio.h
	//hay que configurar los pines 9 y 10 como pines de salida

	leds_display( status );
 c101c60:	e59f3014 	ldr	r3, [pc, #20]	; c101c7c <leds_init+0x40>
 c101c64:	e5933000 	ldr	r3, [r3]
 c101c68:	e1a00003 	mov	r0, r3
 c101c6c:	eb000073 	bl	c101e40 <leds_display>
}
 c101c70:	e24bd00c 	sub	sp, fp, #12
 c101c74:	e89d6800 	ldm	sp, {fp, sp, lr}
 c101c78:	e12fff1e 	bx	lr
 c101c7c:	0c100b80 	.word	0x0c100b80

0c101c80 <led1_on>:

void led1_on( void )
{
 c101c80:	e1a0c00d 	mov	ip, sp
 c101c84:	e92dd800 	push	{fp, ip, lr, pc}
 c101c88:	e24cb004 	sub	fp, ip, #4
	status |=  LED1;
 c101c8c:	e59f3028 	ldr	r3, [pc, #40]	; c101cbc <led1_on+0x3c>
 c101c90:	e5933000 	ldr	r3, [r3]
 c101c94:	e3832001 	orr	r2, r3, #1
 c101c98:	e59f301c 	ldr	r3, [pc, #28]	; c101cbc <led1_on+0x3c>
 c101c9c:	e5832000 	str	r2, [r3]
	leds_display( status );
 c101ca0:	e59f3014 	ldr	r3, [pc, #20]	; c101cbc <led1_on+0x3c>
 c101ca4:	e5933000 	ldr	r3, [r3]
 c101ca8:	e1a00003 	mov	r0, r3
 c101cac:	eb000063 	bl	c101e40 <leds_display>
}
 c101cb0:	e24bd00c 	sub	sp, fp, #12
 c101cb4:	e89d6800 	ldm	sp, {fp, sp, lr}
 c101cb8:	e12fff1e 	bx	lr
 c101cbc:	0c100b80 	.word	0x0c100b80

0c101cc0 <led1_off>:

void led1_off( void )
{
 c101cc0:	e1a0c00d 	mov	ip, sp
 c101cc4:	e92dd800 	push	{fp, ip, lr, pc}
 c101cc8:	e24cb004 	sub	fp, ip, #4
	status &=  ~LED1;
 c101ccc:	e59f3028 	ldr	r3, [pc, #40]	; c101cfc <led1_off+0x3c>
 c101cd0:	e5933000 	ldr	r3, [r3]
 c101cd4:	e3c32001 	bic	r2, r3, #1
 c101cd8:	e59f301c 	ldr	r3, [pc, #28]	; c101cfc <led1_off+0x3c>
 c101cdc:	e5832000 	str	r2, [r3]
	leds_display( status );
 c101ce0:	e59f3014 	ldr	r3, [pc, #20]	; c101cfc <led1_off+0x3c>
 c101ce4:	e5933000 	ldr	r3, [r3]
 c101ce8:	e1a00003 	mov	r0, r3
 c101cec:	eb000053 	bl	c101e40 <leds_display>
}
 c101cf0:	e24bd00c 	sub	sp, fp, #12
 c101cf4:	e89d6800 	ldm	sp, {fp, sp, lr}
 c101cf8:	e12fff1e 	bx	lr
 c101cfc:	0c100b80 	.word	0x0c100b80

0c101d00 <led2_on>:

void led2_on( void )
{
 c101d00:	e1a0c00d 	mov	ip, sp
 c101d04:	e92dd800 	push	{fp, ip, lr, pc}
 c101d08:	e24cb004 	sub	fp, ip, #4
	status |=  LED2;
 c101d0c:	e59f3028 	ldr	r3, [pc, #40]	; c101d3c <led2_on+0x3c>
 c101d10:	e5933000 	ldr	r3, [r3]
 c101d14:	e3832002 	orr	r2, r3, #2
 c101d18:	e59f301c 	ldr	r3, [pc, #28]	; c101d3c <led2_on+0x3c>
 c101d1c:	e5832000 	str	r2, [r3]
	leds_display( status );
 c101d20:	e59f3014 	ldr	r3, [pc, #20]	; c101d3c <led2_on+0x3c>
 c101d24:	e5933000 	ldr	r3, [r3]
 c101d28:	e1a00003 	mov	r0, r3
 c101d2c:	eb000043 	bl	c101e40 <leds_display>
}
 c101d30:	e24bd00c 	sub	sp, fp, #12
 c101d34:	e89d6800 	ldm	sp, {fp, sp, lr}
 c101d38:	e12fff1e 	bx	lr
 c101d3c:	0c100b80 	.word	0x0c100b80

0c101d40 <led2_off>:

void led2_off( void )
{
 c101d40:	e1a0c00d 	mov	ip, sp
 c101d44:	e92dd800 	push	{fp, ip, lr, pc}
 c101d48:	e24cb004 	sub	fp, ip, #4
	status &=  ~LED2;
 c101d4c:	e59f3028 	ldr	r3, [pc, #40]	; c101d7c <led2_off+0x3c>
 c101d50:	e5933000 	ldr	r3, [r3]
 c101d54:	e3c32002 	bic	r2, r3, #2
 c101d58:	e59f301c 	ldr	r3, [pc, #28]	; c101d7c <led2_off+0x3c>
 c101d5c:	e5832000 	str	r2, [r3]
	leds_display( status );
 c101d60:	e59f3014 	ldr	r3, [pc, #20]	; c101d7c <led2_off+0x3c>
 c101d64:	e5933000 	ldr	r3, [r3]
 c101d68:	e1a00003 	mov	r0, r3
 c101d6c:	eb000033 	bl	c101e40 <leds_display>
}
 c101d70:	e24bd00c 	sub	sp, fp, #12
 c101d74:	e89d6800 	ldm	sp, {fp, sp, lr}
 c101d78:	e12fff1e 	bx	lr
 c101d7c:	0c100b80 	.word	0x0c100b80

0c101d80 <led1_switch>:

void led1_switch( void )
{
 c101d80:	e1a0c00d 	mov	ip, sp
 c101d84:	e92dd800 	push	{fp, ip, lr, pc}
 c101d88:	e24cb004 	sub	fp, ip, #4
	status ^= LED1;
 c101d8c:	e59f3028 	ldr	r3, [pc, #40]	; c101dbc <led1_switch+0x3c>
 c101d90:	e5933000 	ldr	r3, [r3]
 c101d94:	e2232001 	eor	r2, r3, #1
 c101d98:	e59f301c 	ldr	r3, [pc, #28]	; c101dbc <led1_switch+0x3c>
 c101d9c:	e5832000 	str	r2, [r3]
	leds_display( status );
 c101da0:	e59f3014 	ldr	r3, [pc, #20]	; c101dbc <led1_switch+0x3c>
 c101da4:	e5933000 	ldr	r3, [r3]
 c101da8:	e1a00003 	mov	r0, r3
 c101dac:	eb000023 	bl	c101e40 <leds_display>
}
 c101db0:	e24bd00c 	sub	sp, fp, #12
 c101db4:	e89d6800 	ldm	sp, {fp, sp, lr}
 c101db8:	e12fff1e 	bx	lr
 c101dbc:	0c100b80 	.word	0x0c100b80

0c101dc0 <led2_switch>:

void led2_switch( void )
{
 c101dc0:	e1a0c00d 	mov	ip, sp
 c101dc4:	e92dd800 	push	{fp, ip, lr, pc}
 c101dc8:	e24cb004 	sub	fp, ip, #4
	status ^= LED2;
 c101dcc:	e59f3028 	ldr	r3, [pc, #40]	; c101dfc <led2_switch+0x3c>
 c101dd0:	e5933000 	ldr	r3, [r3]
 c101dd4:	e2232002 	eor	r2, r3, #2
 c101dd8:	e59f301c 	ldr	r3, [pc, #28]	; c101dfc <led2_switch+0x3c>
 c101ddc:	e5832000 	str	r2, [r3]
	leds_display( status );
 c101de0:	e59f3014 	ldr	r3, [pc, #20]	; c101dfc <led2_switch+0x3c>
 c101de4:	e5933000 	ldr	r3, [r3]
 c101de8:	e1a00003 	mov	r0, r3
 c101dec:	eb000013 	bl	c101e40 <leds_display>
}
 c101df0:	e24bd00c 	sub	sp, fp, #12
 c101df4:	e89d6800 	ldm	sp, {fp, sp, lr}
 c101df8:	e12fff1e 	bx	lr
 c101dfc:	0c100b80 	.word	0x0c100b80

0c101e00 <leds_switch>:

void leds_switch( void ){
 c101e00:	e1a0c00d 	mov	ip, sp
 c101e04:	e92dd800 	push	{fp, ip, lr, pc}
 c101e08:	e24cb004 	sub	fp, ip, #4
	status ^= (LED1 | LED2);
 c101e0c:	e59f3028 	ldr	r3, [pc, #40]	; c101e3c <leds_switch+0x3c>
 c101e10:	e5933000 	ldr	r3, [r3]
 c101e14:	e2232003 	eor	r2, r3, #3
 c101e18:	e59f301c 	ldr	r3, [pc, #28]	; c101e3c <leds_switch+0x3c>
 c101e1c:	e5832000 	str	r2, [r3]
	leds_display( status );
 c101e20:	e59f3014 	ldr	r3, [pc, #20]	; c101e3c <leds_switch+0x3c>
 c101e24:	e5933000 	ldr	r3, [r3]
 c101e28:	e1a00003 	mov	r0, r3
 c101e2c:	eb000003 	bl	c101e40 <leds_display>
}
 c101e30:	e24bd00c 	sub	sp, fp, #12
 c101e34:	e89d6800 	ldm	sp, {fp, sp, lr}
 c101e38:	e12fff1e 	bx	lr
 c101e3c:	0c100b80 	.word	0x0c100b80

0c101e40 <leds_display>:

void leds_display( unsigned int leds_status )
{
 c101e40:	e1a0c00d 	mov	ip, sp
 c101e44:	e92dd800 	push	{fp, ip, lr, pc}
 c101e48:	e24cb004 	sub	fp, ip, #4
 c101e4c:	e24dd008 	sub	sp, sp, #8
 c101e50:	e50b0010 	str	r0, [fp, #-16]
	status = leds_status;
 c101e54:	e59f3074 	ldr	r3, [pc, #116]	; c101ed0 <leds_display+0x90>
 c101e58:	e51b2010 	ldr	r2, [fp, #-16]
 c101e5c:	e5832000 	str	r2, [r3]

	// LED 1
	if( status & LED1 )
 c101e60:	e59f3068 	ldr	r3, [pc, #104]	; c101ed0 <leds_display+0x90>
 c101e64:	e5933000 	ldr	r3, [r3]
 c101e68:	e2033001 	and	r3, r3, #1
 c101e6c:	e20330ff 	and	r3, r3, #255	; 0xff
 c101e70:	e3530000 	cmp	r3, #0
 c101e74:	0a000003 	beq	c101e88 <leds_display+0x48>
		portB_write(9, LOW);
 c101e78:	e3a00009 	mov	r0, #9
 c101e7c:	e3a01000 	mov	r1, #0
 c101e80:	ebfffc1f 	bl	c100f04 <portB_write>
 c101e84:	ea000002 	b	c101e94 <leds_display+0x54>
		//COMPLETAR usando el interfaz del puerto B definido en gpio.h
		//hay que poner a nivel bajo el bit correspondiente al led 1


	else
		portB_write(9, HIGH);
 c101e88:	e3a00009 	mov	r0, #9
 c101e8c:	e3a01001 	mov	r1, #1
 c101e90:	ebfffc1b 	bl	c100f04 <portB_write>
		//COMPLETAR usando el interfaz del puerto B definido en gpio.h
		//hay que poner a nivel alto el bit correspondiente al led 1


	// LED 2
	if( status & LED2 )
 c101e94:	e59f3034 	ldr	r3, [pc, #52]	; c101ed0 <leds_display+0x90>
 c101e98:	e5933000 	ldr	r3, [r3]
 c101e9c:	e2033002 	and	r3, r3, #2
 c101ea0:	e3530000 	cmp	r3, #0
 c101ea4:	0a000003 	beq	c101eb8 <leds_display+0x78>
		portB_write(10, LOW);
 c101ea8:	e3a0000a 	mov	r0, #10
 c101eac:	e3a01000 	mov	r1, #0
 c101eb0:	ebfffc13 	bl	c100f04 <portB_write>
 c101eb4:	ea000002 	b	c101ec4 <leds_display+0x84>
		//COMPLETAR usando el interfaz del puerto B definido en gpio.h
		//hay que poner a nivel bajo el bit correspondiente al led 2

	else
		portB_write(10, HIGH);
 c101eb8:	e3a0000a 	mov	r0, #10
 c101ebc:	e3a01001 	mov	r1, #1
 c101ec0:	ebfffc0f 	bl	c100f04 <portB_write>
		//COMPLETAR usando el interfaz del puerto B definido en gpio.h
		//hay que poner a nivel alto el bit correspondiente al led 2

}
 c101ec4:	e24bd00c 	sub	sp, fp, #12
 c101ec8:	e89d6800 	ldm	sp, {fp, sp, lr}
 c101ecc:	e12fff1e 	bx	lr
 c101ed0:	0c100b80 	.word	0x0c100b80

0c101ed4 <push_buffer>:
void timer_ISR(void) __attribute__ ((interrupt ("IRQ")));
void keyboard_ISR(void) __attribute__ ((interrupt ("IRQ")));

// Función que va guardando las teclas pulsadas
static void push_buffer(char *buffer, int key)
{
 c101ed4:	e1a0c00d 	mov	ip, sp
 c101ed8:	e92dd800 	push	{fp, ip, lr, pc}
 c101edc:	e24cb004 	sub	fp, ip, #4
 c101ee0:	e24dd010 	sub	sp, sp, #16
 c101ee4:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
 c101ee8:	e50b101c 	str	r1, [fp, #-28]	; 0xffffffe4
	int i;
	for (i=0; i < N-1; i++)
 c101eec:	e3a03000 	mov	r3, #0
 c101ef0:	e50b3010 	str	r3, [fp, #-16]
 c101ef4:	ea00000b 	b	c101f28 <push_buffer+0x54>
		buffer[i] = buffer[i+1];
 c101ef8:	e51b3010 	ldr	r3, [fp, #-16]
 c101efc:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
 c101f00:	e0823003 	add	r3, r2, r3
 c101f04:	e51b2010 	ldr	r2, [fp, #-16]
 c101f08:	e2822001 	add	r2, r2, #1
 c101f0c:	e51b1018 	ldr	r1, [fp, #-24]	; 0xffffffe8
 c101f10:	e0812002 	add	r2, r1, r2
 c101f14:	e5d22000 	ldrb	r2, [r2]
 c101f18:	e5c32000 	strb	r2, [r3]

// Función que va guardando las teclas pulsadas
static void push_buffer(char *buffer, int key)
{
	int i;
	for (i=0; i < N-1; i++)
 c101f1c:	e51b3010 	ldr	r3, [fp, #-16]
 c101f20:	e2833001 	add	r3, r3, #1
 c101f24:	e50b3010 	str	r3, [fp, #-16]
 c101f28:	e51b3010 	ldr	r3, [fp, #-16]
 c101f2c:	e3530002 	cmp	r3, #2
 c101f30:	dafffff0 	ble	c101ef8 <push_buffer+0x24>
		buffer[i] = buffer[i+1];
	buffer[N-1] = (char) key;
 c101f34:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
 c101f38:	e2833003 	add	r3, r3, #3
 c101f3c:	e51b201c 	ldr	r2, [fp, #-28]	; 0xffffffe4
 c101f40:	e20220ff 	and	r2, r2, #255	; 0xff
 c101f44:	e5c32000 	strb	r2, [r3]
}
 c101f48:	e24bd00c 	sub	sp, fp, #12
 c101f4c:	e89d6800 	ldm	sp, {fp, sp, lr}
 c101f50:	e12fff1e 	bx	lr

0c101f54 <timer_ISR>:

void timer_ISR(void)
{
 c101f54:	e52dc004 	push	{ip}		; (str ip, [sp, #-4]!)
 c101f58:	e1a0c00d 	mov	ip, sp
 c101f5c:	e92dd80f 	push	{r0, r1, r2, r3, fp, ip, lr, pc}
 c101f60:	e24cb004 	sub	fp, ip, #4
	static int pos = 0; //contador para llevar la cuenta del dígito del buffer que toca mostrar

    //COMPLETAR: Visualizar el dígito en la posición pos del buffer tmrBuffer en el display
		D8Led_digit(tmrBuffer[pos]);
 c101f64:	e59f30b0 	ldr	r3, [pc, #176]	; c10201c <timer_ISR+0xc8>
 c101f68:	e5932000 	ldr	r2, [r3]
 c101f6c:	e59f30ac 	ldr	r3, [pc, #172]	; c102020 <timer_ISR+0xcc>
 c101f70:	e5933000 	ldr	r3, [r3]
 c101f74:	e0823003 	add	r3, r2, r3
 c101f78:	e5d33000 	ldrb	r3, [r3]
 c101f7c:	e20330ff 	and	r3, r3, #255	; 0xff
 c101f80:	e1a00003 	mov	r0, r3
 c101f84:	ebfffb95 	bl	c100de0 <D8Led_digit>

		// Si es el último dígito:
			//      Poner pos a cero,
			//      Parar timer
			//      Dar tmrBuffer valor NULL
		if(pos == tmrBuffSize -1){
 c101f88:	e59f3094 	ldr	r3, [pc, #148]	; c102024 <timer_ISR+0xd0>
 c101f8c:	e5933000 	ldr	r3, [r3]
 c101f90:	e2432001 	sub	r2, r3, #1
 c101f94:	e59f3084 	ldr	r3, [pc, #132]	; c102020 <timer_ISR+0xcc>
 c101f98:	e5933000 	ldr	r3, [r3]
 c101f9c:	e1520003 	cmp	r2, r3
 c101fa0:	1a000008 	bne	c101fc8 <timer_ISR+0x74>
			pos = 0;
 c101fa4:	e59f3074 	ldr	r3, [pc, #116]	; c102020 <timer_ISR+0xcc>
 c101fa8:	e3a02000 	mov	r2, #0
 c101fac:	e5832000 	str	r2, [r3]
			tmr_stop(0);
 c101fb0:	e3a00000 	mov	r0, #0
 c101fb4:	eb000355 	bl	c102d10 <tmr_stop>
			tmrBuffer = NULL;
 c101fb8:	e59f305c 	ldr	r3, [pc, #92]	; c10201c <timer_ISR+0xc8>
 c101fbc:	e3a02000 	mov	r2, #0
 c101fc0:	e5832000 	str	r2, [r3]
 c101fc4:	ea00000e 	b	c102004 <timer_ISR+0xb0>
		}
		// Si no, se apunta al siguiente dígito a visualizar (pos)
		else{
			pos++;
 c101fc8:	e59f3050 	ldr	r3, [pc, #80]	; c102020 <timer_ISR+0xcc>
 c101fcc:	e5933000 	ldr	r3, [r3]
 c101fd0:	e2832001 	add	r2, r3, #1
 c101fd4:	e59f3044 	ldr	r3, [pc, #68]	; c102020 <timer_ISR+0xcc>
 c101fd8:	e5832000 	str	r2, [r3]
			*tmrBuffer = tmrBuffer[pos];
 c101fdc:	e59f3038 	ldr	r3, [pc, #56]	; c10201c <timer_ISR+0xc8>
 c101fe0:	e5933000 	ldr	r3, [r3]
 c101fe4:	e59f2030 	ldr	r2, [pc, #48]	; c10201c <timer_ISR+0xc8>
 c101fe8:	e5921000 	ldr	r1, [r2]
 c101fec:	e59f202c 	ldr	r2, [pc, #44]	; c102020 <timer_ISR+0xcc>
 c101ff0:	e5922000 	ldr	r2, [r2]
 c101ff4:	e0812002 	add	r2, r1, r2
 c101ff8:	e5d22000 	ldrb	r2, [r2]
 c101ffc:	e20220ff 	and	r2, r2, #255	; 0xff
 c102000:	e5c32000 	strb	r2, [r3]
		}

		// COMPLETAR: Finalizar correctamente la ISR
		ic_cleanflag(13);
 c102004:	e3a0000d 	mov	r0, #13
 c102008:	ebfffe71 	bl	c1019d4 <ic_cleanflag>
}
 c10200c:	e24bd01c 	sub	sp, fp, #28
 c102010:	e89d680f 	ldm	sp, {r0, r1, r2, r3, fp, sp, lr}
 c102014:	e49dc004 	pop	{ip}		; (ldr ip, [sp], #4)
 c102018:	e25ef004 	subs	pc, lr, #4
 c10201c:	0c100b8c 	.word	0x0c100b8c
 c102020:	0c100b9c 	.word	0x0c100b9c
 c102024:	0c100b90 	.word	0x0c100b90

0c102028 <printD8Led>:

void printD8Led(char *buffer, int size)
{
 c102028:	e1a0c00d 	mov	ip, sp
 c10202c:	e92dd800 	push	{fp, ip, lr, pc}
 c102030:	e24cb004 	sub	fp, ip, #4
 c102034:	e24dd008 	sub	sp, sp, #8
 c102038:	e50b0010 	str	r0, [fp, #-16]
 c10203c:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
	//Esta rutina prepara el buffer que debe usar timer_ISR (tmrBuffer)
		tmrBuffer = buffer;
 c102040:	e51b2010 	ldr	r2, [fp, #-16]
 c102044:	e59f303c 	ldr	r3, [pc, #60]	; c102088 <printD8Led+0x60>
 c102048:	e5832000 	str	r2, [r3]
		tmrBuffSize = size;
 c10204c:	e59f3038 	ldr	r3, [pc, #56]	; c10208c <printD8Led+0x64>
 c102050:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
 c102054:	e5832000 	str	r2, [r3]

		//COMPLETAR: Arrancar el TIMER0 para que interrumpa SIEMPRE casa segundo
		tmr_update(0);
 c102058:	e3a00000 	mov	r0, #0
 c10205c:	eb0002a1 	bl	c102ae8 <tmr_update>
		tmr_start(0);
 c102060:	e3a00000 	mov	r0, #0
 c102064:	eb000307 	bl	c102c88 <tmr_start>
		//COMPLETAR: Esperar a que timer_ISR termine (tmrBuffer)
		while(tmrBuffer != NULL){
 c102068:	e1a00000 	nop			; (mov r0, r0)
 c10206c:	e59f3014 	ldr	r3, [pc, #20]	; c102088 <printD8Led+0x60>
 c102070:	e5933000 	ldr	r3, [r3]
 c102074:	e3530000 	cmp	r3, #0
 c102078:	1afffffb 	bne	c10206c <printD8Led+0x44>

		}

}
 c10207c:	e24bd00c 	sub	sp, fp, #12
 c102080:	e89d6800 	ldm	sp, {fp, sp, lr}
 c102084:	e12fff1e 	bx	lr
 c102088:	0c100b8c 	.word	0x0c100b8c
 c10208c:	0c100b90 	.word	0x0c100b90

0c102090 <keyboard_ISR>:

void keyboard_ISR(void)
{
 c102090:	e52dc004 	push	{ip}		; (str ip, [sp, #-4]!)
 c102094:	e1a0c00d 	mov	ip, sp
 c102098:	e92dd80f 	push	{r0, r1, r2, r3, fp, ip, lr, pc}
 c10209c:	e24cb004 	sub	fp, ip, #4
 c1020a0:	e24dd008 	sub	sp, sp, #8
	int key;

		/* Eliminar rebotes de presión */
		Delay(200);
 c1020a4:	e3a000c8 	mov	r0, #200	; 0xc8
 c1020a8:	eb00075a 	bl	c103e18 <Delay>

		/* Escaneo de tecla */
		// COMPLETAR
		key= kb_scan();
 c1020ac:	ebfffe76 	bl	c101a8c <kb_scan>
 c1020b0:	e50b0020 	str	r0, [fp, #-32]	; 0xffffffe0

		if (key != -1) {
 c1020b4:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
 c1020b8:	e3730001 	cmn	r3, #1
 c1020bc:	0a000018 	beq	c102124 <keyboard_ISR+0x94>
			//COMPLETAR:
			//Si la tecla pulsada es F deshabilitar interrupciones por teclado y
			//poner keyBuffer a NULL
			if(key == 0xF){
 c1020c0:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
 c1020c4:	e353000f 	cmp	r3, #15
 c1020c8:	1a000005 	bne	c1020e4 <keyboard_ISR+0x54>
				keyBuffer = NULL;
 c1020cc:	e59f3078 	ldr	r3, [pc, #120]	; c10214c <keyboard_ISR+0xbc>
 c1020d0:	e3a02000 	mov	r2, #0
 c1020d4:	e5832000 	str	r2, [r3]
				ic_disable(24);
 c1020d8:	e3a00018 	mov	r0, #24
 c1020dc:	ebfffe23 	bl	c101970 <ic_disable>
			}



			/* Esperar a que la tecla se suelte, consultando el registro de datos rPDATG */
			while (!(rPDATG & 0x02));
 c1020e0:	ea00000a 	b	c102110 <keyboard_ISR+0x80>
			}

			// Si la tecla no es F guardamos la tecla pulsada en el buffer apuntado
			// por keybuffer mediante la llamada a la rutina push_buffer
			else{
				push_buffer(keyBuffer, key);
 c1020e4:	e59f3060 	ldr	r3, [pc, #96]	; c10214c <keyboard_ISR+0xbc>
 c1020e8:	e5933000 	ldr	r3, [r3]
 c1020ec:	e1a00003 	mov	r0, r3
 c1020f0:	e51b1020 	ldr	r1, [fp, #-32]	; 0xffffffe0
 c1020f4:	ebffff76 	bl	c101ed4 <push_buffer>
				keyCount++;// Actualizamos la cuenta del número de teclas pulsadas
 c1020f8:	e59f3050 	ldr	r3, [pc, #80]	; c102150 <keyboard_ISR+0xc0>
 c1020fc:	e5933000 	ldr	r3, [r3]
 c102100:	e2832001 	add	r2, r3, #1
 c102104:	e59f3044 	ldr	r3, [pc, #68]	; c102150 <keyboard_ISR+0xc0>
 c102108:	e5832000 	str	r2, [r3]
			}



			/* Esperar a que la tecla se suelte, consultando el registro de datos rPDATG */
			while (!(rPDATG & 0x02));
 c10210c:	e1a00000 	nop			; (mov r0, r0)
 c102110:	e59f303c 	ldr	r3, [pc, #60]	; c102154 <keyboard_ISR+0xc4>
 c102114:	e5933000 	ldr	r3, [r3]
 c102118:	e2033002 	and	r3, r3, #2
 c10211c:	e3530000 	cmp	r3, #0
 c102120:	0afffffa 	beq	c102110 <keyboard_ISR+0x80>
		}

		/* Eliminar rebotes de depresiÃ³n */
		Delay(200);
 c102124:	e3a000c8 	mov	r0, #200	; 0xc8
 c102128:	eb00073a 	bl	c103e18 <Delay>

		//COMPLETAR: Finalizar correctamente la ISR
		ic_enable(24);
 c10212c:	e3a00018 	mov	r0, #24
 c102130:	ebfffdef 	bl	c1018f4 <ic_enable>
		ic_cleanflag(24);
 c102134:	e3a00018 	mov	r0, #24
 c102138:	ebfffe25 	bl	c1019d4 <ic_cleanflag>
}
 c10213c:	e24bd01c 	sub	sp, fp, #28
 c102140:	e89d680f 	ldm	sp, {r0, r1, r2, r3, fp, sp, lr}
 c102144:	e49dc004 	pop	{ip}		; (ldr ip, [sp], #4)
 c102148:	e25ef004 	subs	pc, lr, #4
 c10214c:	0c100b84 	.word	0x0c100b84
 c102150:	0c100b88 	.word	0x0c100b88
 c102154:	01d20044 	.word	0x01d20044

0c102158 <read_kbd>:

int read_kbd(char *buffer)
{
 c102158:	e1a0c00d 	mov	ip, sp
 c10215c:	e92dd800 	push	{fp, ip, lr, pc}
 c102160:	e24cb004 	sub	fp, ip, #4
 c102164:	e24dd008 	sub	sp, sp, #8
 c102168:	e50b0010 	str	r0, [fp, #-16]
	//Esta rutina prepara el buffer en el que keyboard_ISR almacenará las teclas 
		//pulsadas (keyBuffer) y pone a 0 el contador de teclas pulsadas
		keyBuffer = buffer;
 c10216c:	e51b2010 	ldr	r2, [fp, #-16]
 c102170:	e59f3040 	ldr	r3, [pc, #64]	; c1021b8 <read_kbd+0x60>
 c102174:	e5832000 	str	r2, [r3]
		keyCount = 0;
 c102178:	e59f303c 	ldr	r3, [pc, #60]	; c1021bc <read_kbd+0x64>
 c10217c:	e3a02000 	mov	r2, #0
 c102180:	e5832000 	str	r2, [r3]

		//COMPLETAR: Habilitar interrupciones por teclado
		ic_enable(24);
 c102184:	e3a00018 	mov	r0, #24
 c102188:	ebfffdd9 	bl	c1018f4 <ic_enable>
		//COMPLETAR: Esperar a que keyboard_ISR indique que se ha terminado de
		//introducir la clave (keyBuffer)
		while(keyBuffer != NULL){
 c10218c:	e1a00000 	nop			; (mov r0, r0)
 c102190:	e59f3020 	ldr	r3, [pc, #32]	; c1021b8 <read_kbd+0x60>
 c102194:	e5933000 	ldr	r3, [r3]
 c102198:	e3530000 	cmp	r3, #0
 c10219c:	1afffffb 	bne	c102190 <read_kbd+0x38>

		}
		//COMPLETAR: Devolver número de teclas pulsadas
		return keyCount;
 c1021a0:	e59f3014 	ldr	r3, [pc, #20]	; c1021bc <read_kbd+0x64>
 c1021a4:	e5933000 	ldr	r3, [r3]
}
 c1021a8:	e1a00003 	mov	r0, r3
 c1021ac:	e24bd00c 	sub	sp, fp, #12
 c1021b0:	e89d6800 	ldm	sp, {fp, sp, lr}
 c1021b4:	e12fff1e 	bx	lr
 c1021b8:	0c100b84 	.word	0x0c100b84
 c1021bc:	0c100b88 	.word	0x0c100b88

0c1021c0 <readline>:

int readline(char *buffer, int size)
{
 c1021c0:	e1a0c00d 	mov	ip, sp
 c1021c4:	e92dd800 	push	{fp, ip, lr, pc}
 c1021c8:	e24cb004 	sub	fp, ip, #4
 c1021cc:	e24dd010 	sub	sp, sp, #16
 c1021d0:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
 c1021d4:	e50b101c 	str	r1, [fp, #-28]	; 0xffffffe4
	int count = 0; //cuenta del número de bytes leidos
 c1021d8:	e3a03000 	mov	r3, #0
 c1021dc:	e50b3010 	str	r3, [fp, #-16]
	char c;        //variable para almacenar el carácter leído

	if (size == 0)
 c1021e0:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
 c1021e4:	e3530000 	cmp	r3, #0
 c1021e8:	1a000001 	bne	c1021f4 <readline+0x34>
		return 0;
 c1021ec:	e3a03000 	mov	r3, #0
 c1021f0:	ea000013 	b	c102244 <readline+0x84>
	// hasta que llenemos el buffer (size) o el carácter leído sea
	// un retorno de carro '\r'
	// Los caracteres se leen de uno en uno, utilizando la interfaz
	// del módulo uart, definida en el fichero uart.h
 	do{ 
 		uart_getch(0, &c);
 c1021f4:	e24b3011 	sub	r3, fp, #17
 c1021f8:	e3a00000 	mov	r0, #0
 c1021fc:	e1a01003 	mov	r1, r3
 c102200:	eb000623 	bl	c103a94 <uart_getch>
 		buffer[count] = c;
 c102204:	e51b3010 	ldr	r3, [fp, #-16]
 c102208:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
 c10220c:	e0823003 	add	r3, r2, r3
 c102210:	e55b2011 	ldrb	r2, [fp, #-17]	; 0xffffffef
 c102214:	e5c32000 	strb	r2, [r3]
		count++;
 c102218:	e51b3010 	ldr	r3, [fp, #-16]
 c10221c:	e2833001 	add	r3, r3, #1
 c102220:	e50b3010 	str	r3, [fp, #-16]
	}while(count <size && c != '\n');
 c102224:	e51b2010 	ldr	r2, [fp, #-16]
 c102228:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
 c10222c:	e1520003 	cmp	r2, r3
 c102230:	aa000002 	bge	c102240 <readline+0x80>
 c102234:	e55b3011 	ldrb	r3, [fp, #-17]	; 0xffffffef
 c102238:	e353000a 	cmp	r3, #10
 c10223c:	1affffec 	bne	c1021f4 <readline+0x34>

	return count;
 c102240:	e51b3010 	ldr	r3, [fp, #-16]
}
 c102244:	e1a00003 	mov	r0, r3
 c102248:	e24bd00c 	sub	sp, fp, #12
 c10224c:	e89d6800 	ldm	sp, {fp, sp, lr}
 c102250:	e12fff1e 	bx	lr

0c102254 <show_result>:

static int show_result()
{
 c102254:	e1a0c00d 	mov	ip, sp
 c102258:	e92dd800 	push	{fp, ip, lr, pc}
 c10225c:	e24cb004 	sub	fp, ip, #4
 c102260:	e24dd010 	sub	sp, sp, #16
	int error = 0;
 c102264:	e3a03000 	mov	r3, #0
 c102268:	e50b3010 	str	r3, [fp, #-16]
	int i = 0;
 c10226c:	e3a03000 	mov	r3, #0
 c102270:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
	char buffer[2] = {0};
 c102274:	e3a03000 	mov	r3, #0
 c102278:	e14b31bc 	strh	r3, [fp, #-28]	; 0xffffffe4
	int j;
	// COMPLETAR: poner error a 1 si las contraseñas son distintas
	for(j=0; j<4; j++){
 c10227c:	e3a03000 	mov	r3, #0
 c102280:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
 c102284:	ea00000f 	b	c1022c8 <show_result+0x74>
		if(passwd[j] == guess[j]){
 c102288:	e59f20d8 	ldr	r2, [pc, #216]	; c102368 <show_result+0x114>
 c10228c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
 c102290:	e0823003 	add	r3, r2, r3
 c102294:	e5d32000 	ldrb	r2, [r3]
 c102298:	e59f10cc 	ldr	r1, [pc, #204]	; c10236c <show_result+0x118>
 c10229c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
 c1022a0:	e0813003 	add	r3, r1, r3
 c1022a4:	e5d33000 	ldrb	r3, [r3]
 c1022a8:	e1520003 	cmp	r2, r3
 c1022ac:	1a000002 	bne	c1022bc <show_result+0x68>
			i++;
 c1022b0:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
 c1022b4:	e2833001 	add	r3, r3, #1
 c1022b8:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
	int error = 0;
	int i = 0;
	char buffer[2] = {0};
	int j;
	// COMPLETAR: poner error a 1 si las contraseñas son distintas
	for(j=0; j<4; j++){
 c1022bc:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
 c1022c0:	e2833001 	add	r3, r3, #1
 c1022c4:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
 c1022c8:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
 c1022cc:	e3530003 	cmp	r3, #3
 c1022d0:	daffffec 	ble	c102288 <show_result+0x34>
		if(passwd[j] == guess[j]){
			i++;
		}
	}
		if (i != 4){
 c1022d4:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
 c1022d8:	e3530004 	cmp	r3, #4
 c1022dc:	0a000001 	beq	c1022e8 <show_result+0x94>
			error = 1;
 c1022e0:	e3a03001 	mov	r3, #1
 c1022e4:	e50b3010 	str	r3, [fp, #-16]
		}
	// MODIFICAR el código de la parte1 para que además de mostrar A o E en el
	// display de 8 segmentos se envíe por el puerto serie uart0 la cadena "\nCorrecto\n"
	// o "\nError\n" utilizando el interfaz del puerto serie definido en uart.h
	if(error == 0){
 c1022e8:	e51b3010 	ldr	r3, [fp, #-16]
 c1022ec:	e3530000 	cmp	r3, #0
 c1022f0:	1a000007 	bne	c102314 <show_result+0xc0>
		buffer[0] = 0xA;
 c1022f4:	e3a0300a 	mov	r3, #10
 c1022f8:	e54b301c 	strb	r3, [fp, #-28]	; 0xffffffe4
		buffer[1] = 0xA;
 c1022fc:	e3a0300a 	mov	r3, #10
 c102300:	e54b301b 	strb	r3, [fp, #-27]	; 0xffffffe5
		uart_send_str(UART0, "\nCorrecto\n"); 
 c102304:	e3a00000 	mov	r0, #0
 c102308:	e59f1060 	ldr	r1, [pc, #96]	; c102370 <show_result+0x11c>
 c10230c:	eb00065d 	bl	c103c88 <uart_send_str>
 c102310:	ea000006 	b	c102330 <show_result+0xdc>
	}
	else{
		buffer[0] = 0xE;
 c102314:	e3a0300e 	mov	r3, #14
 c102318:	e54b301c 	strb	r3, [fp, #-28]	; 0xffffffe4
		buffer[1] = 0xE;
 c10231c:	e3a0300e 	mov	r3, #14
 c102320:	e54b301b 	strb	r3, [fp, #-27]	; 0xffffffe5
		uart_send_str(UART0, "\nError\n");
 c102324:	e3a00000 	mov	r0, #0
 c102328:	e59f1044 	ldr	r1, [pc, #68]	; c102374 <show_result+0x120>
 c10232c:	eb000655 	bl	c103c88 <uart_send_str>
	}

	printD8Led(buffer,2);
 c102330:	e24b301c 	sub	r3, fp, #28
 c102334:	e1a00003 	mov	r0, r3
 c102338:	e3a01002 	mov	r1, #2
 c10233c:	ebffff39 	bl	c102028 <printD8Led>
	// COMPLETAR: esperar a que la ISR del timer indique que se ha terminado
	while(tmrBuffer != NULL){
 c102340:	e1a00000 	nop			; (mov r0, r0)
 c102344:	e59f302c 	ldr	r3, [pc, #44]	; c102378 <show_result+0x124>
 c102348:	e5933000 	ldr	r3, [r3]
 c10234c:	e3530000 	cmp	r3, #0
 c102350:	1afffffb 	bne	c102344 <show_result+0xf0>

	}

	
	// COMPLETAR: Devolver el valor de error para indicar si se ha acertado o no
	return error;
 c102354:	e51b3010 	ldr	r3, [fp, #-16]
	
}
 c102358:	e1a00003 	mov	r0, r3
 c10235c:	e24bd00c 	sub	sp, fp, #12
 c102360:	e89d6800 	ldm	sp, {fp, sp, lr}
 c102364:	e12fff1e 	bx	lr
 c102368:	0c100b94 	.word	0x0c100b94
 c10236c:	0c100b98 	.word	0x0c100b98
 c102370:	0c100984 	.word	0x0c100984
 c102374:	0c100990 	.word	0x0c100990
 c102378:	0c100b8c 	.word	0x0c100b8c

0c10237c <setup>:

int setup(void)
{
 c10237c:	e1a0c00d 	mov	ip, sp
 c102380:	e92dd800 	push	{fp, ip, lr, pc}
 c102384:	e24cb004 	sub	fp, ip, #4

	D8Led_init();
 c102388:	ebfffa74 	bl	c100d60 <D8Led_init>

	/* COMPLETAR: Configuración del timer0 para interrumpir cada segundo */

	tmr_set_prescaler(0, 255);	//      valor de prescalado a 255
 c10238c:	e3a00000 	mov	r0, #0
 c102390:	e3a010ff 	mov	r1, #255	; 0xff
 c102394:	eb00010a 	bl	c1027c4 <tmr_set_prescaler>
	tmr_set_divider(0, 1);		//      valor del divisor 1/4
 c102398:	e3a00000 	mov	r0, #0
 c10239c:	e3a01001 	mov	r1, #1
 c1023a0:	eb00013e 	bl	c1028a0 <tmr_set_divider>
	tmr_set_count(0, 62500, 62495);	//      valor de cuenta 62500 y cualquier valor de comparacion entre 1 y 62499
 c1023a4:	e3a00000 	mov	r0, #0
 c1023a8:	e59f10d8 	ldr	r1, [pc, #216]	; c102488 <setup+0x10c>
 c1023ac:	e59f20d8 	ldr	r2, [pc, #216]	; c10248c <setup+0x110>
 c1023b0:	eb00017f 	bl	c1029b4 <tmr_set_count>
	tmr_update(0);				//      actualizar el contador con estos valores (update)
 c1023b4:	e3a00000 	mov	r0, #0
 c1023b8:	eb0001ca 	bl	c102ae8 <tmr_update>
	tmr_set_mode(0,1);			//      poner el contador en modo RELOAD
 c1023bc:	e3a00000 	mov	r0, #0
 c1023c0:	e3a01001 	mov	r1, #1
 c1023c4:	eb0001f4 	bl	c102b9c <tmr_set_mode>

	/********************************************************************/

	// COMPLETAR: Registramos las ISRs

	pISR_TIMER0    = (unsigned) timer_ISR;
 c1023c8:	e59f30c0 	ldr	r3, [pc, #192]	; c102490 <setup+0x114>
 c1023cc:	e59f20c0 	ldr	r2, [pc, #192]	; c102494 <setup+0x118>
 c1023d0:	e5832000 	str	r2, [r3]
	pISR_EINT1     = (unsigned) keyboard_ISR;
 c1023d4:	e59f30bc 	ldr	r3, [pc, #188]	; c102498 <setup+0x11c>
 c1023d8:	e59f20bc 	ldr	r2, [pc, #188]	; c10249c <setup+0x120>
 c1023dc:	e5832000 	str	r2, [r3]

	/* Configuración del controlador de interrupciones*/
	ic_init();
 c1023e0:	ebfffca7 	bl	c101684 <ic_init>

	ic_conf_irq(1, 0);			//		habilitar la línea IRQ en modo vectorizado
 c1023e4:	e3a00001 	mov	r0, #1
 c1023e8:	e3a01000 	mov	r1, #0
 c1023ec:	ebfffcb5 	bl	c1016c8 <ic_conf_irq>
	ic_conf_fiq(0);				//		deshabilitar la línea FIQ
 c1023f0:	e3a00000 	mov	r0, #0
 c1023f4:	ebfffce9 	bl	c1017a0 <ic_conf_fiq>
	ic_conf_line(13, 0);		//		configurar la línea INT_TIMER0 en modo IRQ
 c1023f8:	e3a0000d 	mov	r0, #13
 c1023fc:	e3a01000 	mov	r1, #0
 c102400:	ebfffd07 	bl	c101824 <ic_conf_line>
	ic_conf_line(24, 0);		//		configurar la línea INT_EINT1 en modo IRQ
 c102404:	e3a00018 	mov	r0, #24
 c102408:	e3a01000 	mov	r1, #0
 c10240c:	ebfffd04 	bl	c101824 <ic_conf_line>
	ic_enable(13);				//		habilitar la línea INT_TIMER0
 c102410:	e3a0000d 	mov	r0, #13
 c102414:	ebfffd36 	bl	c1018f4 <ic_enable>
	ic_enable(24);
 c102418:	e3a00018 	mov	r0, #24
 c10241c:	ebfffd34 	bl	c1018f4 <ic_enable>
	ic_enable(7);//Sabemos que estan hechos en uart.c
 c102420:	e3a00007 	mov	r0, #7
 c102424:	ebfffd32 	bl	c1018f4 <ic_enable>
	ic_enable(6);//
 c102428:	e3a00006 	mov	r0, #6
 c10242c:	ebfffd30 	bl	c1018f4 <ic_enable>
		 * 1. inicializar el módulo
		 * 2. Configurar el modo linea de la uart0 usando la variable global uconf
		 * 3. Configurar el modo de recepción (POLL o INT) de la uart0
		 * 4. Configurar el modo de transmisión (POLL o INT) de la uart0
		 */
	uart_init();
 c102430:	eb00027e 	bl	c102e30 <uart_init>
	uart_lconf(0 , &uconf);
 c102434:	e3a00000 	mov	r0, #0
 c102438:	e59f1060 	ldr	r1, [pc, #96]	; c1024a0 <setup+0x124>
 c10243c:	eb0002ef 	bl	c103000 <uart_lconf>
	uart_conf_rxmode(0 , INT);
 c102440:	e3a00000 	mov	r0, #0
 c102444:	e3a01002 	mov	r1, #2
 c102448:	eb0003d2 	bl	c103398 <uart_conf_rxmode>
	uart_conf_txmode(0 , INT);
 c10244c:	e3a00000 	mov	r0, #0
 c102450:	e3a01002 	mov	r1, #2
 c102454:	eb00036b 	bl	c103208 <uart_conf_txmode>

	/***************************************************/

	Delay(0);
 c102458:	e3a00000 	mov	r0, #0
 c10245c:	eb00066d 	bl	c103e18 <Delay>

	/* Inicio del juego */
	gstate = INIT;
 c102460:	e59f303c 	ldr	r3, [pc, #60]	; c1024a4 <setup+0x128>
 c102464:	e3a02000 	mov	r2, #0
 c102468:	e5c32000 	strb	r2, [r3]
	D8Led_digit(12);
 c10246c:	e3a0000c 	mov	r0, #12
 c102470:	ebfffa5a 	bl	c100de0 <D8Led_digit>

	return 0;
 c102474:	e3a03000 	mov	r3, #0
}
 c102478:	e1a00003 	mov	r0, r3
 c10247c:	e24bd00c 	sub	sp, fp, #12
 c102480:	e89d6800 	ldm	sp, {fp, sp, lr}
 c102484:	e12fff1e 	bx	lr
 c102488:	0000f424 	.word	0x0000f424
 c10248c:	0000f41f 	.word	0x0000f41f
 c102490:	0c7fff54 	.word	0x0c7fff54
 c102494:	0c101f54 	.word	0x0c101f54
 c102498:	0c7fff80 	.word	0x0c7fff80
 c10249c:	0c102090 	.word	0x0c102090
 c1024a0:	0c100064 	.word	0x0c100064
 c1024a4:	0c100d54 	.word	0x0c100d54

0c1024a8 <ascii2digit>:

static char ascii2digit(char c)
{
 c1024a8:	e1a0c00d 	mov	ip, sp
 c1024ac:	e92dd800 	push	{fp, ip, lr, pc}
 c1024b0:	e24cb004 	sub	fp, ip, #4
 c1024b4:	e24dd010 	sub	sp, sp, #16
 c1024b8:	e1a03000 	mov	r3, r0
 c1024bc:	e54b3015 	strb	r3, [fp, #-21]	; 0xffffffeb
	char d = -1;
 c1024c0:	e3e03000 	mvn	r3, #0
 c1024c4:	e54b300d 	strb	r3, [fp, #-13]

	if ((c >= '0') && (c <= '9'))
 c1024c8:	e55b3015 	ldrb	r3, [fp, #-21]	; 0xffffffeb
 c1024cc:	e353002f 	cmp	r3, #47	; 0x2f
 c1024d0:	9a000006 	bls	c1024f0 <ascii2digit+0x48>
 c1024d4:	e55b3015 	ldrb	r3, [fp, #-21]	; 0xffffffeb
 c1024d8:	e3530039 	cmp	r3, #57	; 0x39
 c1024dc:	8a000003 	bhi	c1024f0 <ascii2digit+0x48>
		d = c - '0';
 c1024e0:	e55b3015 	ldrb	r3, [fp, #-21]	; 0xffffffeb
 c1024e4:	e2433030 	sub	r3, r3, #48	; 0x30
 c1024e8:	e54b300d 	strb	r3, [fp, #-13]
 c1024ec:	ea000012 	b	c10253c <ascii2digit+0x94>
	else if ((c >= 'a') && (c <= 'f'))
 c1024f0:	e55b3015 	ldrb	r3, [fp, #-21]	; 0xffffffeb
 c1024f4:	e3530060 	cmp	r3, #96	; 0x60
 c1024f8:	9a000006 	bls	c102518 <ascii2digit+0x70>
 c1024fc:	e55b3015 	ldrb	r3, [fp, #-21]	; 0xffffffeb
 c102500:	e3530066 	cmp	r3, #102	; 0x66
 c102504:	8a000003 	bhi	c102518 <ascii2digit+0x70>
		d = c - 'a' + 10;
 c102508:	e55b3015 	ldrb	r3, [fp, #-21]	; 0xffffffeb
 c10250c:	e2433057 	sub	r3, r3, #87	; 0x57
 c102510:	e54b300d 	strb	r3, [fp, #-13]
 c102514:	ea000008 	b	c10253c <ascii2digit+0x94>
	else if ((c >= 'A') && (c <= 'F'))
 c102518:	e55b3015 	ldrb	r3, [fp, #-21]	; 0xffffffeb
 c10251c:	e3530040 	cmp	r3, #64	; 0x40
 c102520:	9a000005 	bls	c10253c <ascii2digit+0x94>
 c102524:	e55b3015 	ldrb	r3, [fp, #-21]	; 0xffffffeb
 c102528:	e3530046 	cmp	r3, #70	; 0x46
 c10252c:	8a000002 	bhi	c10253c <ascii2digit+0x94>
		d = c - 'A' + 10;
 c102530:	e55b3015 	ldrb	r3, [fp, #-21]	; 0xffffffeb
 c102534:	e2433037 	sub	r3, r3, #55	; 0x37
 c102538:	e54b300d 	strb	r3, [fp, #-13]

	return d;
 c10253c:	e55b300d 	ldrb	r3, [fp, #-13]
}
 c102540:	e1a00003 	mov	r0, r3
 c102544:	e24bd00c 	sub	sp, fp, #12
 c102548:	e89d6800 	ldm	sp, {fp, sp, lr}
 c10254c:	e12fff1e 	bx	lr

0c102550 <loop>:


int loop(void)
{
 c102550:	e1a0c00d 	mov	ip, sp
 c102554:	e92dd800 	push	{fp, ip, lr, pc}
 c102558:	e24cb004 	sub	fp, ip, #4
 c10255c:	e24dd008 	sub	sp, sp, #8
	int count; //número de teclas pulsadas
	int error;

	//Máquina de estados

	switch (gstate) {
 c102560:	e59f322c 	ldr	r3, [pc, #556]	; c102794 <loop+0x244>
 c102564:	e5d33000 	ldrb	r3, [r3]
 c102568:	e3530004 	cmp	r3, #4
 c10256c:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
 c102570:	ea000082 	b	c102780 <loop+0x230>
 c102574:	0c102588 	.word	0x0c102588
 c102578:	0c1025d4 	.word	0x0c1025d4
 c10257c:	0c1025f8 	.word	0x0c1025f8
 c102580:	0c102720 	.word	0x0c102720
 c102584:	0c102744 	.word	0x0c102744
		case INIT:
			do {
				D8Led_digit(12);		
 c102588:	e3a0000c 	mov	r0, #12
 c10258c:	ebfffa13 	bl	c100de0 <D8Led_digit>
				     //Llamar a la rutina read_kbd para guardar los 4 dígitos en el buffer passwd
					//Esta rutina devuelve el número de teclas pulsadas.
				count = read_kbd(passwd);
 c102590:	e59f0200 	ldr	r0, [pc, #512]	; c102798 <loop+0x248>
 c102594:	ebfffeef 	bl	c102158 <read_kbd>
 c102598:	e50b0010 	str	r0, [fp, #-16]
				//Dibujar una E en el display si el número de teclas pulsadas es menor que 4, en este caso hacer un Delay(10000)
				if(count < 4){
 c10259c:	e51b3010 	ldr	r3, [fp, #-16]
 c1025a0:	e3530003 	cmp	r3, #3
 c1025a4:	ca000003 	bgt	c1025b8 <loop+0x68>
					D8Led_digit(14);
 c1025a8:	e3a0000e 	mov	r0, #14
 c1025ac:	ebfffa0b 	bl	c100de0 <D8Led_digit>
					Delay(10000);
 c1025b0:	e59f01e4 	ldr	r0, [pc, #484]	; c10279c <loop+0x24c>
 c1025b4:	eb000617 	bl	c103e18 <Delay>
				}

			} while (count <4);/*permanecer en el while mientras se hayan pulsado menos de 4 teclas*/
 c1025b8:	e51b3010 	ldr	r3, [fp, #-16]
 c1025bc:	e3530003 	cmp	r3, #3
 c1025c0:	dafffff0 	ble	c102588 <loop+0x38>

			//COMPLETAR: Pasar al estado siguiente
			gstate = SPWD;
 c1025c4:	e59f31c8 	ldr	r3, [pc, #456]	; c102794 <loop+0x244>
 c1025c8:	e3a02001 	mov	r2, #1
 c1025cc:	e5c32000 	strb	r2, [r3]
			break;
 c1025d0:	ea00006a 	b	c102780 <loop+0x230>

		case SPWD:

			// COMPLETAR:
			printD8Led(passwd,4);
 c1025d4:	e59f01bc 	ldr	r0, [pc, #444]	; c102798 <loop+0x248>
 c1025d8:	e3a01004 	mov	r1, #4
 c1025dc:	ebfffe91 	bl	c102028 <printD8Led>
			
			Delay(10000);
 c1025e0:	e59f01b4 	ldr	r0, [pc, #436]	; c10279c <loop+0x24c>
 c1025e4:	eb00060b 	bl	c103e18 <Delay>
			//COMPLETAR
			gstate = 2;
 c1025e8:	e59f31a4 	ldr	r3, [pc, #420]	; c102794 <loop+0x244>
 c1025ec:	e3a02002 	mov	r2, #2
 c1025f0:	e5c32000 	strb	r2, [r3]

			break;
 c1025f4:	ea000061 	b	c102780 <loop+0x230>

		case DOGUESS:
 			Delay(10000);
 c1025f8:	e59f019c 	ldr	r0, [pc, #412]	; c10279c <loop+0x24c>
 c1025fc:	eb000605 	bl	c103e18 <Delay>
				 * 5. Si count es menor de 4 la clave no es válida, mostramos
				 *    una E (digito 14) en el display de 8 segmentos y esperamos
				 *    1 segundo con Delay.
				 */
				//1
				uart_printf(0, "Introduzca passwd: ");
 c102600:	e3a00000 	mov	r0, #0
 c102604:	e59f1194 	ldr	r1, [pc, #404]	; c1027a0 <loop+0x250>
 c102608:	eb0005ea 	bl	c103db8 <uart_printf>
				//2
				D8Led_digit(15);
 c10260c:	e3a0000f 	mov	r0, #15
 c102610:	ebfff9f2 	bl	c100de0 <D8Led_digit>
				//3
				count = readline(readlineBuf, M);
 c102614:	e59f0188 	ldr	r0, [pc, #392]	; c1027a4 <loop+0x254>
 c102618:	e3a01080 	mov	r1, #128	; 0x80
 c10261c:	ebfffee7 	bl	c1021c0 <readline>
 c102620:	e50b0010 	str	r0, [fp, #-16]
				//4

				if(readlineBuf[count-1] == '\n'){
 c102624:	e51b3010 	ldr	r3, [fp, #-16]
 c102628:	e2433001 	sub	r3, r3, #1
 c10262c:	e59f2170 	ldr	r2, [pc, #368]	; c1027a4 <loop+0x254>
 c102630:	e7d23003 	ldrb	r3, [r2, r3]
 c102634:	e353000a 	cmp	r3, #10
 c102638:	1a000002 	bne	c102648 <loop+0xf8>
					count--;
 c10263c:	e51b3010 	ldr	r3, [fp, #-16]
 c102640:	e2433001 	sub	r3, r3, #1
 c102644:	e50b3010 	str	r3, [fp, #-16]
				}
				//5
				if (count < 4){
 c102648:	e51b3010 	ldr	r3, [fp, #-16]
 c10264c:	e3530003 	cmp	r3, #3
 c102650:	ca000003 	bgt	c102664 <loop+0x114>
					D8Led_digit(14);
 c102654:	e3a0000e 	mov	r0, #14
 c102658:	ebfff9e0 	bl	c100de0 <D8Led_digit>
					Delay(10000);
 c10265c:	e59f0138 	ldr	r0, [pc, #312]	; c10279c <loop+0x24c>
 c102660:	eb0005ec 	bl	c103e18 <Delay>

				}



			} while (count < 4);
 c102664:	e51b3010 	ldr	r3, [fp, #-16]
 c102668:	e3530003 	cmp	r3, #3
 c10266c:	daffffe3 	ble	c102600 <loop+0xb0>
			/* COMPLETAR: debemos copiar los 4 últimos caracteres de readline en
			 * el buffer guess, haciendo la conversión de ascii-hexadecimal a valor 
			 * decimal. Para ello podemos utilizar la función ascii2digit
			 * definida más arriba.
			 */
			guess[0] = ascii2digit(readlineBuf[count-4]);
 c102670:	e51b3010 	ldr	r3, [fp, #-16]
 c102674:	e2433004 	sub	r3, r3, #4
 c102678:	e59f2124 	ldr	r2, [pc, #292]	; c1027a4 <loop+0x254>
 c10267c:	e7d23003 	ldrb	r3, [r2, r3]
 c102680:	e1a00003 	mov	r0, r3
 c102684:	ebffff87 	bl	c1024a8 <ascii2digit>
 c102688:	e1a03000 	mov	r3, r0
 c10268c:	e1a02003 	mov	r2, r3
 c102690:	e59f3110 	ldr	r3, [pc, #272]	; c1027a8 <loop+0x258>
 c102694:	e5c32000 	strb	r2, [r3]
			guess[1] = ascii2digit(readlineBuf[count-3]);
 c102698:	e51b3010 	ldr	r3, [fp, #-16]
 c10269c:	e2433003 	sub	r3, r3, #3
 c1026a0:	e59f20fc 	ldr	r2, [pc, #252]	; c1027a4 <loop+0x254>
 c1026a4:	e7d23003 	ldrb	r3, [r2, r3]
 c1026a8:	e1a00003 	mov	r0, r3
 c1026ac:	ebffff7d 	bl	c1024a8 <ascii2digit>
 c1026b0:	e1a03000 	mov	r3, r0
 c1026b4:	e1a02003 	mov	r2, r3
 c1026b8:	e59f30e8 	ldr	r3, [pc, #232]	; c1027a8 <loop+0x258>
 c1026bc:	e5c32001 	strb	r2, [r3, #1]
			guess[2] = ascii2digit(readlineBuf[count-2]);
 c1026c0:	e51b3010 	ldr	r3, [fp, #-16]
 c1026c4:	e2433002 	sub	r3, r3, #2
 c1026c8:	e59f20d4 	ldr	r2, [pc, #212]	; c1027a4 <loop+0x254>
 c1026cc:	e7d23003 	ldrb	r3, [r2, r3]
 c1026d0:	e1a00003 	mov	r0, r3
 c1026d4:	ebffff73 	bl	c1024a8 <ascii2digit>
 c1026d8:	e1a03000 	mov	r3, r0
 c1026dc:	e1a02003 	mov	r2, r3
 c1026e0:	e59f30c0 	ldr	r3, [pc, #192]	; c1027a8 <loop+0x258>
 c1026e4:	e5c32002 	strb	r2, [r3, #2]
			guess[3] = ascii2digit(readlineBuf[count-1]); // coje la f o la buena  PROBAR
 c1026e8:	e51b3010 	ldr	r3, [fp, #-16]
 c1026ec:	e2433001 	sub	r3, r3, #1
 c1026f0:	e59f20ac 	ldr	r2, [pc, #172]	; c1027a4 <loop+0x254>
 c1026f4:	e7d23003 	ldrb	r3, [r2, r3]
 c1026f8:	e1a00003 	mov	r0, r3
 c1026fc:	ebffff69 	bl	c1024a8 <ascii2digit>
 c102700:	e1a03000 	mov	r3, r0
 c102704:	e1a02003 	mov	r2, r3
 c102708:	e59f3098 	ldr	r3, [pc, #152]	; c1027a8 <loop+0x258>
 c10270c:	e5c32003 	strb	r2, [r3, #3]

			//COMPLETAR: Pasar al estado siguiente
			gstate = 3;
 c102710:	e59f307c 	ldr	r3, [pc, #124]	; c102794 <loop+0x244>
 c102714:	e3a02003 	mov	r2, #3
 c102718:	e5c32000 	strb	r2, [r3]

			break;
 c10271c:	ea000017 	b	c102780 <loop+0x230>

		case SGUESS:
			//COMPLETAR:
			printD8Led(guess, 4);
 c102720:	e59f0080 	ldr	r0, [pc, #128]	; c1027a8 <loop+0x258>
 c102724:	e3a01004 	mov	r1, #4
 c102728:	ebfffe3e 	bl	c102028 <printD8Led>
			Delay(10000);
 c10272c:	e59f0068 	ldr	r0, [pc, #104]	; c10279c <loop+0x24c>
 c102730:	eb0005b8 	bl	c103e18 <Delay>
			//COMPLETAR: Pasar al estado siguiente
			gstate = 4;
 c102734:	e59f3058 	ldr	r3, [pc, #88]	; c102794 <loop+0x244>
 c102738:	e3a02004 	mov	r2, #4
 c10273c:	e5c32000 	strb	r2, [r3]
			break;
 c102740:	ea00000e 	b	c102780 <loop+0x230>

		case GOVER:
			error = show_result();
 c102744:	ebfffec2 	bl	c102254 <show_result>
 c102748:	e50b0014 	str	r0, [fp, #-20]	; 0xffffffec
			Delay(10000);
 c10274c:	e59f0048 	ldr	r0, [pc, #72]	; c10279c <loop+0x24c>
 c102750:	eb0005b0 	bl	c103e18 <Delay>
			//Si he acertado el estado siguiente es INIT sino DOGUESS
			if(error == 0){
 c102754:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
 c102758:	e3530000 	cmp	r3, #0
 c10275c:	1a000003 	bne	c102770 <loop+0x220>
				gstate = 0;
 c102760:	e59f302c 	ldr	r3, [pc, #44]	; c102794 <loop+0x244>
 c102764:	e3a02000 	mov	r2, #0
 c102768:	e5c32000 	strb	r2, [r3]

			}
			else{
				gstate = 2;
			}
			break;
 c10276c:	ea000003 	b	c102780 <loop+0x230>
			if(error == 0){
				gstate = 0;

			}
			else{
				gstate = 2;
 c102770:	e59f301c 	ldr	r3, [pc, #28]	; c102794 <loop+0x244>
 c102774:	e3a02002 	mov	r2, #2
 c102778:	e5c32000 	strb	r2, [r3]
			}
			break;
 c10277c:	e1a00000 	nop			; (mov r0, r0)
	}
	return 0;
 c102780:	e3a03000 	mov	r3, #0
}
 c102784:	e1a00003 	mov	r0, r3
 c102788:	e24bd00c 	sub	sp, fp, #12
 c10278c:	e89d6800 	ldm	sp, {fp, sp, lr}
 c102790:	e12fff1e 	bx	lr
 c102794:	0c100d54 	.word	0x0c100d54
 c102798:	0c100b94 	.word	0x0c100b94
 c10279c:	00002710 	.word	0x00002710
 c1027a0:	0c100998 	.word	0x0c100998
 c1027a4:	0c100cd4 	.word	0x0c100cd4
 c1027a8:	0c100b98 	.word	0x0c100b98

0c1027ac <main>:

int main(void)
{
 c1027ac:	e1a0c00d 	mov	ip, sp
 c1027b0:	e92dd800 	push	{fp, ip, lr, pc}
 c1027b4:	e24cb004 	sub	fp, ip, #4
	setup();
 c1027b8:	ebfffeef 	bl	c10237c <setup>

	while (1) {
		loop();
 c1027bc:	ebffff63 	bl	c102550 <loop>
	}
 c1027c0:	eafffffd 	b	c1027bc <main+0x10>

0c1027c4 <tmr_set_prescaler>:
/*--- ficheros de cabecera ---*/
#include "44b.h"
#include "timer.h"

int tmr_set_prescaler(int p, int  value)
{
 c1027c4:	e1a0c00d 	mov	ip, sp
 c1027c8:	e92dd800 	push	{fp, ip, lr, pc}
 c1027cc:	e24cb004 	sub	fp, ip, #4
 c1027d0:	e24dd010 	sub	sp, sp, #16
 c1027d4:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
 c1027d8:	e50b101c 	str	r1, [fp, #-28]	; 0xffffffe4
	int offset = p*4;
 c1027dc:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
 c1027e0:	e1a03103 	lsl	r3, r3, #2
 c1027e4:	e50b3010 	str	r3, [fp, #-16]
		if (p==1 || p==3 || p==5)
 c1027e8:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
 c1027ec:	e3530001 	cmp	r3, #1
 c1027f0:	0a000005 	beq	c10280c <tmr_set_prescaler+0x48>
 c1027f4:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
 c1027f8:	e3530003 	cmp	r3, #3
 c1027fc:	0a000002 	beq	c10280c <tmr_set_prescaler+0x48>
 c102800:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
 c102804:	e3530005 	cmp	r3, #5
 c102808:	1a000002 	bne	c102818 <tmr_set_prescaler+0x54>
			offset=offset-4;
 c10280c:	e51b3010 	ldr	r3, [fp, #-16]
 c102810:	e2433004 	sub	r3, r3, #4
 c102814:	e50b3010 	str	r3, [fp, #-16]

	value &= 0xFF;
 c102818:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
 c10281c:	e20330ff 	and	r3, r3, #255	; 0xff
 c102820:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4

	if (p < 0 || p > 5)
 c102824:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
 c102828:	e3530000 	cmp	r3, #0
 c10282c:	ba000002 	blt	c10283c <tmr_set_prescaler+0x78>
 c102830:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
 c102834:	e3530005 	cmp	r3, #5
 c102838:	da000001 	ble	c102844 <tmr_set_prescaler+0x80>
		return -1;
 c10283c:	e3e03000 	mvn	r3, #0
 c102840:	ea000011 	b	c10288c <tmr_set_prescaler+0xc8>

	rTCFG0 &=~ (value << offset);
 c102844:	e59f3050 	ldr	r3, [pc, #80]	; c10289c <tmr_set_prescaler+0xd8>
 c102848:	e59f204c 	ldr	r2, [pc, #76]	; c10289c <tmr_set_prescaler+0xd8>
 c10284c:	e5921000 	ldr	r1, [r2]
 c102850:	e51b001c 	ldr	r0, [fp, #-28]	; 0xffffffe4
 c102854:	e51b2010 	ldr	r2, [fp, #-16]
 c102858:	e1a02210 	lsl	r2, r0, r2
 c10285c:	e1e02002 	mvn	r2, r2
 c102860:	e0012002 	and	r2, r1, r2
 c102864:	e5832000 	str	r2, [r3]
	rTCFG0 |= (value << offset);
 c102868:	e59f302c 	ldr	r3, [pc, #44]	; c10289c <tmr_set_prescaler+0xd8>
 c10286c:	e59f2028 	ldr	r2, [pc, #40]	; c10289c <tmr_set_prescaler+0xd8>
 c102870:	e5921000 	ldr	r1, [r2]
 c102874:	e51b001c 	ldr	r0, [fp, #-28]	; 0xffffffe4
 c102878:	e51b2010 	ldr	r2, [fp, #-16]
 c10287c:	e1a02210 	lsl	r2, r0, r2
 c102880:	e1812002 	orr	r2, r1, r2
 c102884:	e5832000 	str	r2, [r3]
	//COMPLETAR: escribir el valor value a partir de la posición offset en el
	//registro rTCFG0, para establecer el valor de pre-escalado del módulo p
	//value es el valor de prescalado y p es el número del TIMER


	return 0;
 c102888:	e3a03000 	mov	r3, #0
}
 c10288c:	e1a00003 	mov	r0, r3
 c102890:	e24bd00c 	sub	sp, fp, #12
 c102894:	e89d6800 	ldm	sp, {fp, sp, lr}
 c102898:	e12fff1e 	bx	lr
 c10289c:	01d50000 	.word	0x01d50000

0c1028a0 <tmr_set_divider>:

int tmr_set_divider(int d, enum tmr_div div)
{
 c1028a0:	e1a0c00d 	mov	ip, sp
 c1028a4:	e92dd800 	push	{fp, ip, lr, pc}
 c1028a8:	e24cb004 	sub	fp, ip, #4
 c1028ac:	e24dd010 	sub	sp, sp, #16
 c1028b0:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
 c1028b4:	e1a03001 	mov	r3, r1
 c1028b8:	e54b3019 	strb	r3, [fp, #-25]	; 0xffffffe7
	int ret = 0;
 c1028bc:	e3a03000 	mov	r3, #0
 c1028c0:	e50b3010 	str	r3, [fp, #-16]
	int pos = d*4;
 c1028c4:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
 c1028c8:	e1a03103 	lsl	r3, r3, #2
 c1028cc:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec

	if ((d < 0 || d > 5) ||
 c1028d0:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
 c1028d4:	e3530000 	cmp	r3, #0
 c1028d8:	ba000014 	blt	c102930 <tmr_set_divider+0x90>
 c1028dc:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
 c1028e0:	e3530005 	cmp	r3, #5
 c1028e4:	ca000011 	bgt	c102930 <tmr_set_divider+0x90>
 c1028e8:	e55b3019 	ldrb	r3, [fp, #-25]	; 0xffffffe7
 c1028ec:	e3530004 	cmp	r3, #4
 c1028f0:	1a000002 	bne	c102900 <tmr_set_divider+0x60>
			(div == D1_32 && d > 3) ||
 c1028f4:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
 c1028f8:	e3530003 	cmp	r3, #3
 c1028fc:	ca00000b 	bgt	c102930 <tmr_set_divider+0x90>
 c102900:	e55b3019 	ldrb	r3, [fp, #-25]	; 0xffffffe7
 c102904:	e3530005 	cmp	r3, #5
 c102908:	1a000002 	bne	c102918 <tmr_set_divider+0x78>
			(div == EXTCLK && d != 5) ||
 c10290c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
 c102910:	e3530005 	cmp	r3, #5
 c102914:	1a000005 	bne	c102930 <tmr_set_divider+0x90>
 c102918:	e55b3019 	ldrb	r3, [fp, #-25]	; 0xffffffe7
 c10291c:	e3530006 	cmp	r3, #6
 c102920:	1a000004 	bne	c102938 <tmr_set_divider+0x98>
			(div == TCLK && d != 4))
 c102924:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
 c102928:	e3530004 	cmp	r3, #4
 c10292c:	0a000001 	beq	c102938 <tmr_set_divider+0x98>
		return -1;
 c102930:	e3e03000 	mvn	r3, #0
 c102934:	ea000019 	b	c1029a0 <tmr_set_divider+0x100>

	if (div == EXTCLK || div == TCLK)
 c102938:	e55b3019 	ldrb	r3, [fp, #-25]	; 0xffffffe7
 c10293c:	e3530005 	cmp	r3, #5
 c102940:	0a000002 	beq	c102950 <tmr_set_divider+0xb0>
 c102944:	e55b3019 	ldrb	r3, [fp, #-25]	; 0xffffffe7
 c102948:	e3530006 	cmp	r3, #6
 c10294c:	1a000001 	bne	c102958 <tmr_set_divider+0xb8>
		div = 4;
 c102950:	e3a03004 	mov	r3, #4
 c102954:	e54b3019 	strb	r3, [fp, #-25]	; 0xffffffe7

	//COMPLETAR: escribir el valor div a partir de la posición pos en el
	//registro rTCFG1 para establecer el valor para el divisor d
	rTCFG1 &=~(0x7 << pos);
 c102958:	e59f3050 	ldr	r3, [pc, #80]	; c1029b0 <tmr_set_divider+0x110>
 c10295c:	e59f204c 	ldr	r2, [pc, #76]	; c1029b0 <tmr_set_divider+0x110>
 c102960:	e5921000 	ldr	r1, [r2]
 c102964:	e3a00007 	mov	r0, #7
 c102968:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
 c10296c:	e1a02210 	lsl	r2, r0, r2
 c102970:	e1e02002 	mvn	r2, r2
 c102974:	e0012002 	and	r2, r1, r2
 c102978:	e5832000 	str	r2, [r3]
	rTCFG1 |= (div << pos);
 c10297c:	e59f302c 	ldr	r3, [pc, #44]	; c1029b0 <tmr_set_divider+0x110>
 c102980:	e59f2028 	ldr	r2, [pc, #40]	; c1029b0 <tmr_set_divider+0x110>
 c102984:	e5921000 	ldr	r1, [r2]
 c102988:	e55b0019 	ldrb	r0, [fp, #-25]	; 0xffffffe7
 c10298c:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
 c102990:	e1a02210 	lsl	r2, r0, r2
 c102994:	e1812002 	orr	r2, r1, r2
 c102998:	e5832000 	str	r2, [r3]

	return 0;
 c10299c:	e3a03000 	mov	r3, #0
}
 c1029a0:	e1a00003 	mov	r0, r3
 c1029a4:	e24bd00c 	sub	sp, fp, #12
 c1029a8:	e89d6800 	ldm	sp, {fp, sp, lr}
 c1029ac:	e12fff1e 	bx	lr
 c1029b0:	01d50004 	.word	0x01d50004

0c1029b4 <tmr_set_count>:

int tmr_set_count(enum tmr_timer t, int count, int cmp)
{
 c1029b4:	e1a0c00d 	mov	ip, sp
 c1029b8:	e92dd800 	push	{fp, ip, lr, pc}
 c1029bc:	e24cb004 	sub	fp, ip, #4
 c1029c0:	e24dd018 	sub	sp, sp, #24
 c1029c4:	e1a03000 	mov	r3, r0
 c1029c8:	e50b101c 	str	r1, [fp, #-28]	; 0xffffffe4
 c1029cc:	e50b2020 	str	r2, [fp, #-32]	; 0xffffffe0
 c1029d0:	e54b3015 	strb	r3, [fp, #-21]	; 0xffffffeb
	int err = 0;
 c1029d4:	e3a03000 	mov	r3, #0
 c1029d8:	e50b3010 	str	r3, [fp, #-16]
	switch (t) {
 c1029dc:	e55b3015 	ldrb	r3, [fp, #-21]	; 0xffffffeb
 c1029e0:	e3530005 	cmp	r3, #5
 c1029e4:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
 c1029e8:	ea00002c 	b	c102aa0 <tmr_set_count+0xec>
 c1029ec:	0c102a04 	.word	0x0c102a04
 c1029f0:	0c102a20 	.word	0x0c102a20
 c1029f4:	0c102a3c 	.word	0x0c102a3c
 c1029f8:	0c102a58 	.word	0x0c102a58
 c1029fc:	0c102a74 	.word	0x0c102a74
 c102a00:	0c102a90 	.word	0x0c102a90
		case TIMER0:
			//COMPLETAR: establecer el valor de cuenta count y el valor de
			//comparación cmp en los registros de buffer del timer0 (rTCNTB0 y
			//rTCMPB0)
			rTCNTB0 = count;
 c102a04:	e59f30b0 	ldr	r3, [pc, #176]	; c102abc <tmr_set_count+0x108>
 c102a08:	e51b201c 	ldr	r2, [fp, #-28]	; 0xffffffe4
 c102a0c:	e5832000 	str	r2, [r3]
			rTCMPB0 = cmp;
 c102a10:	e59f30a8 	ldr	r3, [pc, #168]	; c102ac0 <tmr_set_count+0x10c>
 c102a14:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
 c102a18:	e5832000 	str	r2, [r3]

			 break;
 c102a1c:	ea000021 	b	c102aa8 <tmr_set_count+0xf4>
		case TIMER1:
			//COMPLETAR: establecer el valor de cuenta count y el valor de
			//comparación cmp en los registros de buffer del timer1 (rTCNTB1 y
			//rTCMPB1)
			rTCNTB1 = count;
 c102a20:	e59f309c 	ldr	r3, [pc, #156]	; c102ac4 <tmr_set_count+0x110>
 c102a24:	e51b201c 	ldr	r2, [fp, #-28]	; 0xffffffe4
 c102a28:	e5832000 	str	r2, [r3]
			rTCMPB1 = cmp;
 c102a2c:	e59f3094 	ldr	r3, [pc, #148]	; c102ac8 <tmr_set_count+0x114>
 c102a30:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
 c102a34:	e5832000 	str	r2, [r3]
			 break;
 c102a38:	ea00001a 	b	c102aa8 <tmr_set_count+0xf4>
		case TIMER2:
			//COMPLETAR: establecer el valor de cuenta count y el valor de
			//comparación cmp en los registros de buffer del timer2 (rTCNTB2 y
			//rTCMPB2)
			rTCNTB2 = count;
 c102a3c:	e59f3088 	ldr	r3, [pc, #136]	; c102acc <tmr_set_count+0x118>
 c102a40:	e51b201c 	ldr	r2, [fp, #-28]	; 0xffffffe4
 c102a44:	e5832000 	str	r2, [r3]
			rTCMPB2 = cmp;
 c102a48:	e59f3080 	ldr	r3, [pc, #128]	; c102ad0 <tmr_set_count+0x11c>
 c102a4c:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
 c102a50:	e5832000 	str	r2, [r3]
			 break;
 c102a54:	ea000013 	b	c102aa8 <tmr_set_count+0xf4>
		case TIMER3:
			//COMPLETAR: establecer el valor de cuenta count y el valor de
			//comparaciónn cmp en los registros de buffer del timer3 (rTCNTB3 y
			//rTCMPB3)
			rTCNTB3 = count;
 c102a58:	e59f3074 	ldr	r3, [pc, #116]	; c102ad4 <tmr_set_count+0x120>
 c102a5c:	e51b201c 	ldr	r2, [fp, #-28]	; 0xffffffe4
 c102a60:	e5832000 	str	r2, [r3]
			rTCMPB3 = cmp;
 c102a64:	e59f306c 	ldr	r3, [pc, #108]	; c102ad8 <tmr_set_count+0x124>
 c102a68:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
 c102a6c:	e5832000 	str	r2, [r3]
			 break;
 c102a70:	ea00000c 	b	c102aa8 <tmr_set_count+0xf4>
		case TIMER4:
			//COMPLETAR: establecer el valor de cuenta count y el valor de
			//comparación cmp en los registros de buffer del timer4 (rTCNTB4 y
			//rTCMPB4)
			rTCNTB4 = count;
 c102a74:	e59f3060 	ldr	r3, [pc, #96]	; c102adc <tmr_set_count+0x128>
 c102a78:	e51b201c 	ldr	r2, [fp, #-28]	; 0xffffffe4
 c102a7c:	e5832000 	str	r2, [r3]
			rTCMPB4 = cmp;
 c102a80:	e59f3058 	ldr	r3, [pc, #88]	; c102ae0 <tmr_set_count+0x12c>
 c102a84:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
 c102a88:	e5832000 	str	r2, [r3]
			 break;
 c102a8c:	ea000005 	b	c102aa8 <tmr_set_count+0xf4>
		case TIMER5:
			//COMPLETAR: establecer el valor de cuenta count
			//en el registro de buffer del timer5 (rTCNTB5)
			rTCNTB5 = count;
 c102a90:	e59f304c 	ldr	r3, [pc, #76]	; c102ae4 <tmr_set_count+0x130>
 c102a94:	e51b201c 	ldr	r2, [fp, #-28]	; 0xffffffe4
 c102a98:	e5832000 	str	r2, [r3]

			 break;
 c102a9c:	ea000001 	b	c102aa8 <tmr_set_count+0xf4>
		default:
			err = -1;
 c102aa0:	e3e03000 	mvn	r3, #0
 c102aa4:	e50b3010 	str	r3, [fp, #-16]
	}

	return err;
 c102aa8:	e51b3010 	ldr	r3, [fp, #-16]
}
 c102aac:	e1a00003 	mov	r0, r3
 c102ab0:	e24bd00c 	sub	sp, fp, #12
 c102ab4:	e89d6800 	ldm	sp, {fp, sp, lr}
 c102ab8:	e12fff1e 	bx	lr
 c102abc:	01d5000c 	.word	0x01d5000c
 c102ac0:	01d50010 	.word	0x01d50010
 c102ac4:	01d50018 	.word	0x01d50018
 c102ac8:	01d5001c 	.word	0x01d5001c
 c102acc:	01d50024 	.word	0x01d50024
 c102ad0:	01d50028 	.word	0x01d50028
 c102ad4:	01d50030 	.word	0x01d50030
 c102ad8:	01d50034 	.word	0x01d50034
 c102adc:	01d5003c 	.word	0x01d5003c
 c102ae0:	01d50040 	.word	0x01d50040
 c102ae4:	01d50048 	.word	0x01d50048

0c102ae8 <tmr_update>:

int tmr_update(enum tmr_timer t)
{
 c102ae8:	e1a0c00d 	mov	ip, sp
 c102aec:	e92dd800 	push	{fp, ip, lr, pc}
 c102af0:	e24cb004 	sub	fp, ip, #4
 c102af4:	e24dd010 	sub	sp, sp, #16
 c102af8:	e1a03000 	mov	r3, r0
 c102afc:	e54b3015 	strb	r3, [fp, #-21]	; 0xffffffeb
	int pos = t*4;
 c102b00:	e55b3015 	ldrb	r3, [fp, #-21]	; 0xffffffeb
 c102b04:	e1a03103 	lsl	r3, r3, #2
 c102b08:	e50b3010 	str	r3, [fp, #-16]
	if (t > 0)
 c102b0c:	e55b3015 	ldrb	r3, [fp, #-21]	; 0xffffffeb
 c102b10:	e3530000 	cmp	r3, #0
 c102b14:	0a000002 	beq	c102b24 <tmr_update+0x3c>
		pos += 4;
 c102b18:	e51b3010 	ldr	r3, [fp, #-16]
 c102b1c:	e2833004 	add	r3, r3, #4
 c102b20:	e50b3010 	str	r3, [fp, #-16]

	if (t < 0 || t > 5)
 c102b24:	e55b3015 	ldrb	r3, [fp, #-21]	; 0xffffffeb
 c102b28:	e3530005 	cmp	r3, #5
 c102b2c:	9a000001 	bls	c102b38 <tmr_update+0x50>
		return -1;
 c102b30:	e3e03000 	mvn	r3, #0
 c102b34:	ea000013 	b	c102b88 <tmr_update+0xa0>
	// primero para actualizar los registros rTCNTBn y rTCMPBn
	//después para ponerlo en modo no operación
	//deben ser stores distintos, lo hacemos con sentencias C distintas


	rTCON |= (0x1 << pos+1);
 c102b38:	e59f3058 	ldr	r3, [pc, #88]	; c102b98 <tmr_update+0xb0>
 c102b3c:	e59f2054 	ldr	r2, [pc, #84]	; c102b98 <tmr_update+0xb0>
 c102b40:	e5921000 	ldr	r1, [r2]
 c102b44:	e51b2010 	ldr	r2, [fp, #-16]
 c102b48:	e2822001 	add	r2, r2, #1
 c102b4c:	e3a00001 	mov	r0, #1
 c102b50:	e1a02210 	lsl	r2, r0, r2
 c102b54:	e1812002 	orr	r2, r1, r2
 c102b58:	e5832000 	str	r2, [r3]
	rTCON &=~( 0x1 << pos+1);
 c102b5c:	e59f3034 	ldr	r3, [pc, #52]	; c102b98 <tmr_update+0xb0>
 c102b60:	e59f2030 	ldr	r2, [pc, #48]	; c102b98 <tmr_update+0xb0>
 c102b64:	e5921000 	ldr	r1, [r2]
 c102b68:	e51b2010 	ldr	r2, [fp, #-16]
 c102b6c:	e2822001 	add	r2, r2, #1
 c102b70:	e3a00001 	mov	r0, #1
 c102b74:	e1a02210 	lsl	r2, r0, r2
 c102b78:	e1e02002 	mvn	r2, r2
 c102b7c:	e0012002 	and	r2, r1, r2
 c102b80:	e5832000 	str	r2, [r3]

	return 0;
 c102b84:	e3a03000 	mov	r3, #0
}
 c102b88:	e1a00003 	mov	r0, r3
 c102b8c:	e24bd00c 	sub	sp, fp, #12
 c102b90:	e89d6800 	ldm	sp, {fp, sp, lr}
 c102b94:	e12fff1e 	bx	lr
 c102b98:	01d50008 	.word	0x01d50008

0c102b9c <tmr_set_mode>:

int tmr_set_mode(enum tmr_timer t, enum tmr_mode mode)
{
 c102b9c:	e1a0c00d 	mov	ip, sp
 c102ba0:	e92dd800 	push	{fp, ip, lr, pc}
 c102ba4:	e24cb004 	sub	fp, ip, #4
 c102ba8:	e24dd010 	sub	sp, sp, #16
 c102bac:	e1a02000 	mov	r2, r0
 c102bb0:	e1a03001 	mov	r3, r1
 c102bb4:	e54b2015 	strb	r2, [fp, #-21]	; 0xffffffeb
 c102bb8:	e54b3016 	strb	r3, [fp, #-22]	; 0xffffffea
	int err = 0;
 c102bbc:	e3a03000 	mov	r3, #0
 c102bc0:	e50b3010 	str	r3, [fp, #-16]
	int pos = t*4;
 c102bc4:	e55b3015 	ldrb	r3, [fp, #-21]	; 0xffffffeb
 c102bc8:	e1a03103 	lsl	r3, r3, #2
 c102bcc:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
	if (t > 0)
 c102bd0:	e55b3015 	ldrb	r3, [fp, #-21]	; 0xffffffeb
 c102bd4:	e3530000 	cmp	r3, #0
 c102bd8:	0a000002 	beq	c102be8 <tmr_set_mode+0x4c>
		pos += 4;
 c102bdc:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
 c102be0:	e2833004 	add	r3, r3, #4
 c102be4:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec

	if (t < 0 || t > 5)
 c102be8:	e55b3015 	ldrb	r3, [fp, #-21]	; 0xffffffeb
 c102bec:	e3530005 	cmp	r3, #5
 c102bf0:	9a000001 	bls	c102bfc <tmr_set_mode+0x60>
		return -1;
 c102bf4:	e3e03000 	mvn	r3, #0
 c102bf8:	ea00001d 	b	c102c74 <tmr_set_mode+0xd8>

	if (mode == ONE_SHOT)
 c102bfc:	e55b3016 	ldrb	r3, [fp, #-22]	; 0xffffffea
 c102c00:	e3530000 	cmp	r3, #0
 c102c04:	1a00000a 	bne	c102c34 <tmr_set_mode+0x98>
		//COMPLETAR: poner a 0 el bit autoreload de rTCON a partir de la posición pos (es
		//el cuarto bit a partir de esa posición)
		rTCON &=~ (0x1 << pos+3);
 c102c08:	e59f3074 	ldr	r3, [pc, #116]	; c102c84 <tmr_set_mode+0xe8>
 c102c0c:	e59f2070 	ldr	r2, [pc, #112]	; c102c84 <tmr_set_mode+0xe8>
 c102c10:	e5921000 	ldr	r1, [r2]
 c102c14:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
 c102c18:	e2822003 	add	r2, r2, #3
 c102c1c:	e3a00001 	mov	r0, #1
 c102c20:	e1a02210 	lsl	r2, r0, r2
 c102c24:	e1e02002 	mvn	r2, r2
 c102c28:	e0012002 	and	r2, r1, r2
 c102c2c:	e5832000 	str	r2, [r3]
 c102c30:	ea00000e 	b	c102c70 <tmr_set_mode+0xd4>


	else if (mode == RELOAD){
 c102c34:	e55b3016 	ldrb	r3, [fp, #-22]	; 0xffffffea
 c102c38:	e3530001 	cmp	r3, #1
 c102c3c:	1a000009 	bne	c102c68 <tmr_set_mode+0xcc>
		//COMPLETAR: poner a 1 el bit autoreload a partir de la posición pos (es
		//el cuarto bit a partir de esa posición)
		rTCON |= (0x1 << pos +3);
 c102c40:	e59f303c 	ldr	r3, [pc, #60]	; c102c84 <tmr_set_mode+0xe8>
 c102c44:	e59f2038 	ldr	r2, [pc, #56]	; c102c84 <tmr_set_mode+0xe8>
 c102c48:	e5921000 	ldr	r1, [r2]
 c102c4c:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
 c102c50:	e2822003 	add	r2, r2, #3
 c102c54:	e3a00001 	mov	r0, #1
 c102c58:	e1a02210 	lsl	r2, r0, r2
 c102c5c:	e1812002 	orr	r2, r1, r2
 c102c60:	e5832000 	str	r2, [r3]
 c102c64:	ea000001 	b	c102c70 <tmr_set_mode+0xd4>
	}
	else
		err = -1;
 c102c68:	e3e03000 	mvn	r3, #0
 c102c6c:	e50b3010 	str	r3, [fp, #-16]

	return err;
 c102c70:	e51b3010 	ldr	r3, [fp, #-16]
}
 c102c74:	e1a00003 	mov	r0, r3
 c102c78:	e24bd00c 	sub	sp, fp, #12
 c102c7c:	e89d6800 	ldm	sp, {fp, sp, lr}
 c102c80:	e12fff1e 	bx	lr
 c102c84:	01d50008 	.word	0x01d50008

0c102c88 <tmr_start>:

int tmr_start(enum tmr_timer t)
{
 c102c88:	e1a0c00d 	mov	ip, sp
 c102c8c:	e92dd800 	push	{fp, ip, lr, pc}
 c102c90:	e24cb004 	sub	fp, ip, #4
 c102c94:	e24dd010 	sub	sp, sp, #16
 c102c98:	e1a03000 	mov	r3, r0
 c102c9c:	e54b3015 	strb	r3, [fp, #-21]	; 0xffffffeb
	int pos = t*4;
 c102ca0:	e55b3015 	ldrb	r3, [fp, #-21]	; 0xffffffeb
 c102ca4:	e1a03103 	lsl	r3, r3, #2
 c102ca8:	e50b3010 	str	r3, [fp, #-16]
	if (t > 0)
 c102cac:	e55b3015 	ldrb	r3, [fp, #-21]	; 0xffffffeb
 c102cb0:	e3530000 	cmp	r3, #0
 c102cb4:	0a000002 	beq	c102cc4 <tmr_start+0x3c>
		pos += 4;
 c102cb8:	e51b3010 	ldr	r3, [fp, #-16]
 c102cbc:	e2833004 	add	r3, r3, #4
 c102cc0:	e50b3010 	str	r3, [fp, #-16]

	if (t < 0 || t > 5)
 c102cc4:	e55b3015 	ldrb	r3, [fp, #-21]	; 0xffffffeb
 c102cc8:	e3530005 	cmp	r3, #5
 c102ccc:	9a000001 	bls	c102cd8 <tmr_start+0x50>
		return -1;
 c102cd0:	e3e03000 	mvn	r3, #0
 c102cd4:	ea000008 	b	c102cfc <tmr_start+0x74>

	//COMPLETAR: Dar el valor adecuado al bit de start para arrancar el TIMER a partir de la posición pos en el
	//registro rTCON (es el primer bit del grupo)
	rTCON |= (0x1 << pos);
 c102cd8:	e59f302c 	ldr	r3, [pc, #44]	; c102d0c <tmr_start+0x84>
 c102cdc:	e59f2028 	ldr	r2, [pc, #40]	; c102d0c <tmr_start+0x84>
 c102ce0:	e5921000 	ldr	r1, [r2]
 c102ce4:	e3a00001 	mov	r0, #1
 c102ce8:	e51b2010 	ldr	r2, [fp, #-16]
 c102cec:	e1a02210 	lsl	r2, r0, r2
 c102cf0:	e1812002 	orr	r2, r1, r2
 c102cf4:	e5832000 	str	r2, [r3]

	return 0;
 c102cf8:	e3a03000 	mov	r3, #0
}
 c102cfc:	e1a00003 	mov	r0, r3
 c102d00:	e24bd00c 	sub	sp, fp, #12
 c102d04:	e89d6800 	ldm	sp, {fp, sp, lr}
 c102d08:	e12fff1e 	bx	lr
 c102d0c:	01d50008 	.word	0x01d50008

0c102d10 <tmr_stop>:

int tmr_stop(enum tmr_timer t)
{
 c102d10:	e1a0c00d 	mov	ip, sp
 c102d14:	e92dd800 	push	{fp, ip, lr, pc}
 c102d18:	e24cb004 	sub	fp, ip, #4
 c102d1c:	e24dd010 	sub	sp, sp, #16
 c102d20:	e1a03000 	mov	r3, r0
 c102d24:	e54b3015 	strb	r3, [fp, #-21]	; 0xffffffeb
	int pos = t*4;
 c102d28:	e55b3015 	ldrb	r3, [fp, #-21]	; 0xffffffeb
 c102d2c:	e1a03103 	lsl	r3, r3, #2
 c102d30:	e50b3010 	str	r3, [fp, #-16]
	if (t > 0)
 c102d34:	e55b3015 	ldrb	r3, [fp, #-21]	; 0xffffffeb
 c102d38:	e3530000 	cmp	r3, #0
 c102d3c:	0a000002 	beq	c102d4c <tmr_stop+0x3c>
		pos += 4;
 c102d40:	e51b3010 	ldr	r3, [fp, #-16]
 c102d44:	e2833004 	add	r3, r3, #4
 c102d48:	e50b3010 	str	r3, [fp, #-16]

	if (t < 0 || t > 5)
 c102d4c:	e55b3015 	ldrb	r3, [fp, #-21]	; 0xffffffeb
 c102d50:	e3530005 	cmp	r3, #5
 c102d54:	9a000001 	bls	c102d60 <tmr_stop+0x50>
		return -1;
 c102d58:	e3e03000 	mvn	r3, #0
 c102d5c:	ea000009 	b	c102d88 <tmr_stop+0x78>

	//COMPLETAR:  Dar el valor adecuado al bit de start para parar el TIMER a partir de la posición pos en el
	//registro rTCON (es el primer bit del grupo)
	rTCON &=~ (0x1 << pos);
 c102d60:	e59f3030 	ldr	r3, [pc, #48]	; c102d98 <tmr_stop+0x88>
 c102d64:	e59f202c 	ldr	r2, [pc, #44]	; c102d98 <tmr_stop+0x88>
 c102d68:	e5921000 	ldr	r1, [r2]
 c102d6c:	e3a00001 	mov	r0, #1
 c102d70:	e51b2010 	ldr	r2, [fp, #-16]
 c102d74:	e1a02210 	lsl	r2, r0, r2
 c102d78:	e1e02002 	mvn	r2, r2
 c102d7c:	e0012002 	and	r2, r1, r2
 c102d80:	e5832000 	str	r2, [r3]

	return 0;
 c102d84:	e3a03000 	mov	r3, #0
}
 c102d88:	e1a00003 	mov	r0, r3
 c102d8c:	e24bd00c 	sub	sp, fp, #12
 c102d90:	e89d6800 	ldm	sp, {fp, sp, lr}
 c102d94:	e12fff1e 	bx	lr
 c102d98:	01d50008 	.word	0x01d50008

0c102d9c <tmr_isrunning>:

int tmr_isrunning(enum tmr_timer t)
{
 c102d9c:	e1a0c00d 	mov	ip, sp
 c102da0:	e92dd800 	push	{fp, ip, lr, pc}
 c102da4:	e24cb004 	sub	fp, ip, #4
 c102da8:	e24dd010 	sub	sp, sp, #16
 c102dac:	e1a03000 	mov	r3, r0
 c102db0:	e54b3015 	strb	r3, [fp, #-21]	; 0xffffffeb
	int ret = 0;
 c102db4:	e3a03000 	mov	r3, #0
 c102db8:	e50b3010 	str	r3, [fp, #-16]
	int pos = t*4;
 c102dbc:	e55b3015 	ldrb	r3, [fp, #-21]	; 0xffffffeb
 c102dc0:	e1a03103 	lsl	r3, r3, #2
 c102dc4:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
	if (t > 0)
 c102dc8:	e55b3015 	ldrb	r3, [fp, #-21]	; 0xffffffeb
 c102dcc:	e3530000 	cmp	r3, #0
 c102dd0:	0a000002 	beq	c102de0 <tmr_isrunning+0x44>
		pos += 4;
 c102dd4:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
 c102dd8:	e2833004 	add	r3, r3, #4
 c102ddc:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec

	if ((t >= 0) && (t <= 5)
 c102de0:	e55b3015 	ldrb	r3, [fp, #-21]	; 0xffffffeb
 c102de4:	e3530005 	cmp	r3, #5
 c102de8:	8a000009 	bhi	c102e14 <tmr_isrunning+0x78>
			&& (rTCON & (0x1 << pos)))
 c102dec:	e59f3034 	ldr	r3, [pc, #52]	; c102e28 <tmr_isrunning+0x8c>
 c102df0:	e5932000 	ldr	r2, [r3]
 c102df4:	e3a01001 	mov	r1, #1
 c102df8:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
 c102dfc:	e1a03311 	lsl	r3, r1, r3
 c102e00:	e0023003 	and	r3, r2, r3
 c102e04:	e3530000 	cmp	r3, #0
 c102e08:	0a000001 	beq	c102e14 <tmr_isrunning+0x78>
		ret = 1;
 c102e0c:	e3a03001 	mov	r3, #1
 c102e10:	e50b3010 	str	r3, [fp, #-16]

	return ret;
 c102e14:	e51b3010 	ldr	r3, [fp, #-16]
}
 c102e18:	e1a00003 	mov	r0, r3
 c102e1c:	e24bd00c 	sub	sp, fp, #12
 c102e20:	e89d6800 	ldm	sp, {fp, sp, lr}
 c102e24:	e12fff1e 	bx	lr
 c102e28:	01d50008 	.word	0x01d50008
 c102e2c:	00000000 	.word	0x00000000

0c102e30 <uart_init>:
void Uart0_TxInt(void)__attribute__ ((interrupt ("IRQ")));
void Uart1_RxInt(void)__attribute__ ((interrupt ("IRQ")));
void Uart1_TxInt(void)__attribute__ ((interrupt ("IRQ")));

void uart_init(void)
{
 c102e30:	e1a0c00d 	mov	ip, sp
 c102e34:	e92dd800 	push	{fp, ip, lr, pc}
 c102e38:	e24cb004 	sub	fp, ip, #4
 c102e3c:	e24dd008 	sub	sp, sp, #8
	int i;

	// Inicialización de las estructuras de estado de los puertos
	for (i=0; i < 2; i++) {
 c102e40:	e3a03000 	mov	r3, #0
 c102e44:	e50b3010 	str	r3, [fp, #-16]
 c102e48:	ea000040 	b	c102f50 <uart_init+0x120>
		uport[i].rxmode = DIS;
 c102e4c:	e59f1188 	ldr	r1, [pc, #392]	; c102fdc <uart_init+0x1ac>
 c102e50:	e51b2010 	ldr	r2, [fp, #-16]
 c102e54:	e1a03002 	mov	r3, r2
 c102e58:	e1a03203 	lsl	r3, r3, #4
 c102e5c:	e0623003 	rsb	r3, r2, r3
 c102e60:	e1a03183 	lsl	r3, r3, #3
 c102e64:	e0813003 	add	r3, r1, r3
 c102e68:	e3a02000 	mov	r2, #0
 c102e6c:	e5c32000 	strb	r2, [r3]
		uport[i].txmode = DIS;
 c102e70:	e59f1164 	ldr	r1, [pc, #356]	; c102fdc <uart_init+0x1ac>
 c102e74:	e51b2010 	ldr	r2, [fp, #-16]
 c102e78:	e1a03002 	mov	r3, r2
 c102e7c:	e1a03203 	lsl	r3, r3, #4
 c102e80:	e0623003 	rsb	r3, r2, r3
 c102e84:	e1a03183 	lsl	r3, r3, #3
 c102e88:	e0813003 	add	r3, r1, r3
 c102e8c:	e3a02000 	mov	r2, #0
 c102e90:	e5c32001 	strb	r2, [r3, #1]
		uport[i].rP = 0;
 c102e94:	e59f0140 	ldr	r0, [pc, #320]	; c102fdc <uart_init+0x1ac>
 c102e98:	e51b2010 	ldr	r2, [fp, #-16]
 c102e9c:	e3a01068 	mov	r1, #104	; 0x68
 c102ea0:	e1a03002 	mov	r3, r2
 c102ea4:	e1a03203 	lsl	r3, r3, #4
 c102ea8:	e0623003 	rsb	r3, r2, r3
 c102eac:	e1a03183 	lsl	r3, r3, #3
 c102eb0:	e0803003 	add	r3, r0, r3
 c102eb4:	e0833001 	add	r3, r3, r1
 c102eb8:	e3a02000 	mov	r2, #0
 c102ebc:	e5832000 	str	r2, [r3]
		uport[i].wP = 0;
 c102ec0:	e59f0114 	ldr	r0, [pc, #276]	; c102fdc <uart_init+0x1ac>
 c102ec4:	e51b2010 	ldr	r2, [fp, #-16]
 c102ec8:	e3a0106c 	mov	r1, #108	; 0x6c
 c102ecc:	e1a03002 	mov	r3, r2
 c102ed0:	e1a03203 	lsl	r3, r3, #4
 c102ed4:	e0623003 	rsb	r3, r2, r3
 c102ed8:	e1a03183 	lsl	r3, r3, #3
 c102edc:	e0803003 	add	r3, r0, r3
 c102ee0:	e0833001 	add	r3, r3, r1
 c102ee4:	e3a02000 	mov	r2, #0
 c102ee8:	e5832000 	str	r2, [r3]
		uport[i].sendP = NULL;
 c102eec:	e59f00e8 	ldr	r0, [pc, #232]	; c102fdc <uart_init+0x1ac>
 c102ef0:	e51b2010 	ldr	r2, [fp, #-16]
 c102ef4:	e3a01070 	mov	r1, #112	; 0x70
 c102ef8:	e1a03002 	mov	r3, r2
 c102efc:	e1a03203 	lsl	r3, r3, #4
 c102f00:	e0623003 	rsb	r3, r2, r3
 c102f04:	e1a03183 	lsl	r3, r3, #3
 c102f08:	e0803003 	add	r3, r0, r3
 c102f0c:	e0833001 	add	r3, r3, r1
 c102f10:	e3a02000 	mov	r2, #0
 c102f14:	e5832000 	str	r2, [r3]
		uport[i].echo = OFF;
 c102f18:	e59f00bc 	ldr	r0, [pc, #188]	; c102fdc <uart_init+0x1ac>
 c102f1c:	e51b2010 	ldr	r2, [fp, #-16]
 c102f20:	e3a01070 	mov	r1, #112	; 0x70
 c102f24:	e1a03002 	mov	r3, r2
 c102f28:	e1a03203 	lsl	r3, r3, #4
 c102f2c:	e0623003 	rsb	r3, r2, r3
 c102f30:	e1a03183 	lsl	r3, r3, #3
 c102f34:	e0803003 	add	r3, r0, r3
 c102f38:	e0833001 	add	r3, r3, r1
 c102f3c:	e3a02000 	mov	r2, #0
 c102f40:	e5c32004 	strb	r2, [r3, #4]
void uart_init(void)
{
	int i;

	// Inicialización de las estructuras de estado de los puertos
	for (i=0; i < 2; i++) {
 c102f44:	e51b3010 	ldr	r3, [fp, #-16]
 c102f48:	e2833001 	add	r3, r3, #1
 c102f4c:	e50b3010 	str	r3, [fp, #-16]
 c102f50:	e51b3010 	ldr	r3, [fp, #-16]
 c102f54:	e3530001 	cmp	r3, #1
 c102f58:	daffffbb 	ble	c102e4c <uart_init+0x1c>

	//COMPLETAR: Registrar adecuadamente las rutinas de tratamiento de
	//interrupción de la uart


	pISR_URXD0=(unsigned) Uart0_RxInt;
 c102f5c:	e59f307c 	ldr	r3, [pc, #124]	; c102fe0 <uart_init+0x1b0>
 c102f60:	e59f207c 	ldr	r2, [pc, #124]	; c102fe4 <uart_init+0x1b4>
 c102f64:	e5832000 	str	r2, [r3]
	pISR_UTXD0 =(unsigned) Uart0_TxInt;
 c102f68:	e59f3078 	ldr	r3, [pc, #120]	; c102fe8 <uart_init+0x1b8>
 c102f6c:	e59f2078 	ldr	r2, [pc, #120]	; c102fec <uart_init+0x1bc>
 c102f70:	e5832000 	str	r2, [r3]
	pISR_URXD1 =(unsigned) Uart1_RxInt;//MIRAR
 c102f74:	e59f3074 	ldr	r3, [pc, #116]	; c102ff0 <uart_init+0x1c0>
 c102f78:	e59f2074 	ldr	r2, [pc, #116]	; c102ff4 <uart_init+0x1c4>
 c102f7c:	e5832000 	str	r2, [r3]
	pISR_UTXD1 =(unsigned) Uart1_TxInt;
 c102f80:	e59f3070 	ldr	r3, [pc, #112]	; c102ff8 <uart_init+0x1c8>
 c102f84:	e59f2070 	ldr	r2, [pc, #112]	; c102ffc <uart_init+0x1cc>
 c102f88:	e5832000 	str	r2, [r3]

	//COMPLETAR: Configurar las líneas de interrupción de la uart en modo IRQ
	ic_conf_irq(1, 0);			//		habilitar la línea IRQ en modo vectorizado
 c102f8c:	e3a00001 	mov	r0, #1
 c102f90:	e3a01000 	mov	r1, #0
 c102f94:	ebfff9cb 	bl	c1016c8 <ic_conf_irq>
	ic_conf_fiq(0);				//		deshabilitar la línea FIQ
 c102f98:	e3a00000 	mov	r0, #0
 c102f9c:	ebfff9ff 	bl	c1017a0 <ic_conf_fiq>
	ic_conf_line(7, 0);		//		configurar la línea URXD0 en modo IRQ
 c102fa0:	e3a00007 	mov	r0, #7
 c102fa4:	e3a01000 	mov	r1, #0
 c102fa8:	ebfffa1d 	bl	c101824 <ic_conf_line>
	ic_conf_line(6, 0);		//		configurar la línea URXD1 en modo IRQ
 c102fac:	e3a00006 	mov	r0, #6
 c102fb0:	e3a01000 	mov	r1, #0
 c102fb4:	ebfffa1a 	bl	c101824 <ic_conf_line>
	ic_conf_line(3, 0);		//		configurar la línea UTXD0 en modo IRQ
 c102fb8:	e3a00003 	mov	r0, #3
 c102fbc:	e3a01000 	mov	r1, #0
 c102fc0:	ebfffa17 	bl	c101824 <ic_conf_line>
	ic_conf_line(2, 0);		//		configurar la línea UTXD1 en modo IRQ
 c102fc4:	e3a00002 	mov	r0, #2
 c102fc8:	e3a01000 	mov	r1, #0
 c102fcc:	ebfffa14 	bl	c101824 <ic_conf_line>

}
 c102fd0:	e24bd00c 	sub	sp, fp, #12
 c102fd4:	e89d6800 	ldm	sp, {fp, sp, lr}
 c102fd8:	e12fff1e 	bx	lr
 c102fdc:	0c100ba0 	.word	0x0c100ba0
 c102fe0:	0c7fff3c 	.word	0x0c7fff3c
 c102fe4:	0c1038d4 	.word	0x0c1038d4
 c102fe8:	0c7fff2c 	.word	0x0c7fff2c
 c102fec:	0c103a34 	.word	0x0c103a34
 c102ff0:	0c7fff38 	.word	0x0c7fff38
 c102ff4:	0c103904 	.word	0x0c103904
 c102ff8:	0c7fff28 	.word	0x0c7fff28
 c102ffc:	0c103a64 	.word	0x0c103a64

0c103000 <uart_lconf>:
 *       Baudios
 * y configura los pines adecuados para que las líneas Rx y Tx de los puertos
 * salgan fuera del chip, hacia los conectores DB9 de la placa
 */
int uart_lconf(enum UART port, struct ulconf *lconf)
{
 c103000:	e1a0c00d 	mov	ip, sp
 c103004:	e92dd810 	push	{r4, fp, ip, lr, pc}
 c103008:	e24cb004 	sub	fp, ip, #4
 c10300c:	e24dd014 	sub	sp, sp, #20
 c103010:	e1a03000 	mov	r3, r0
 c103014:	e50b1024 	str	r1, [fp, #-36]	; 0xffffffdc
 c103018:	e54b301d 	strb	r3, [fp, #-29]	; 0xffffffe3
	unsigned int confvalue = 0; // valor de configuración del registro ULCON
 c10301c:	e3a03000 	mov	r3, #0
 c103020:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
		.par  = NONE,
		.stopb = 1,
		.wordlen = EIGHT,
		.echo = ON,
		.baud    = 115200,*/
	confvalue |= ((lconf -> ired & 0x1) << 6);
 c103024:	e51b3024 	ldr	r3, [fp, #-36]	; 0xffffffdc
 c103028:	e5d33000 	ldrb	r3, [r3]
 c10302c:	e2033001 	and	r3, r3, #1
 c103030:	e1a03303 	lsl	r3, r3, #6
 c103034:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
 c103038:	e1823003 	orr	r3, r2, r3
 c10303c:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
	confvalue |= ((lconf -> par & 0x7) << 3);
 c103040:	e51b3024 	ldr	r3, [fp, #-36]	; 0xffffffdc
 c103044:	e5d33001 	ldrb	r3, [r3, #1]
 c103048:	e2033007 	and	r3, r3, #7
 c10304c:	e1a03183 	lsl	r3, r3, #3
 c103050:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
 c103054:	e1823003 	orr	r3, r2, r3
 c103058:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
	confvalue |= ((lconf -> stopb & 0x1) << 2);
 c10305c:	e51b3024 	ldr	r3, [fp, #-36]	; 0xffffffdc
 c103060:	e5d33002 	ldrb	r3, [r3, #2]
 c103064:	e2033001 	and	r3, r3, #1
 c103068:	e1a03103 	lsl	r3, r3, #2
 c10306c:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
 c103070:	e1823003 	orr	r3, r2, r3
 c103074:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
	confvalue |= ((lconf -> wordlen & 0x3) << 0);
 c103078:	e51b3024 	ldr	r3, [fp, #-36]	; 0xffffffdc
 c10307c:	e5d33003 	ldrb	r3, [r3, #3]
 c103080:	e2033003 	and	r3, r3, #3
 c103084:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
 c103088:	e1823003 	orr	r3, r2, r3
 c10308c:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8

	baud = (int)( MCLK /(16.0 * lconf->baud) + 0.5) - 1;
 c103090:	e51b3024 	ldr	r3, [fp, #-36]	; 0xffffffdc
 c103094:	e5933008 	ldr	r3, [r3, #8]
 c103098:	e1a00003 	mov	r0, r3
 c10309c:	eb0004ce 	bl	c1043dc <__aeabi_i2d>
 c1030a0:	e1a03000 	mov	r3, r0
 c1030a4:	e1a04001 	mov	r4, r1
 c1030a8:	e1a00003 	mov	r0, r3
 c1030ac:	e1a01004 	mov	r1, r4
 c1030b0:	e3a02000 	mov	r2, #0
 c1030b4:	e3a03101 	mov	r3, #1073741824	; 0x40000000
 c1030b8:	e2833603 	add	r3, r3, #3145728	; 0x300000
 c1030bc:	eb0004fd 	bl	c1044b8 <__aeabi_dmul>
 c1030c0:	e1a03000 	mov	r3, r0
 c1030c4:	e1a04001 	mov	r4, r1
 c1030c8:	e28f1f46 	add	r1, pc, #280	; 0x118
 c1030cc:	e8910003 	ldm	r1, {r0, r1}
 c1030d0:	e1a02003 	mov	r2, r3
 c1030d4:	e1a03004 	mov	r3, r4
 c1030d8:	eb00059a 	bl	c104748 <__aeabi_ddiv>
 c1030dc:	e1a03000 	mov	r3, r0
 c1030e0:	e1a04001 	mov	r4, r1
 c1030e4:	e1a00003 	mov	r0, r3
 c1030e8:	e1a01004 	mov	r1, r4
 c1030ec:	e3a02000 	mov	r2, #0
 c1030f0:	e3a035ff 	mov	r3, #1069547520	; 0x3fc00000
 c1030f4:	e2833602 	add	r3, r3, #2097152	; 0x200000
 c1030f8:	eb0003ea 	bl	c1040a8 <__adddf3>
 c1030fc:	e1a03000 	mov	r3, r0
 c103100:	e1a04001 	mov	r4, r1
 c103104:	e1a00003 	mov	r0, r3
 c103108:	e1a01004 	mov	r1, r4
 c10310c:	eb000610 	bl	c104954 <__aeabi_d2iz>
 c103110:	e1a03000 	mov	r3, r0
 c103114:	e2433001 	sub	r3, r3, #1
 c103118:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4

	switch (port) {
 c10311c:	e55b301d 	ldrb	r3, [fp, #-29]	; 0xffffffe3
 c103120:	e3530000 	cmp	r3, #0
 c103124:	0a000002 	beq	c103134 <uart_lconf+0x134>
 c103128:	e3530001 	cmp	r3, #1
 c10312c:	0a00000d 	beq	c103168 <uart_lconf+0x168>
 c103130:	ea000018 	b	c103198 <uart_lconf+0x198>
		case UART0:
			rULCON0 = confvalue;
 c103134:	e3a0361d 	mov	r3, #30408704	; 0x1d00000
 c103138:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
 c10313c:	e5832000 	str	r2, [r3]
			rUBRDIV0 = baud;
 c103140:	e59f30a8 	ldr	r3, [pc, #168]	; c1031f0 <uart_lconf+0x1f0>
 c103144:	e51b201c 	ldr	r2, [fp, #-28]	; 0xffffffe4
 c103148:	e5832000 	str	r2, [r3]
			// habilitamos la salida fuera del chip de las señales RxD0 y TxD0
			rPCONE = (rPCONE & ~(0xF << 2)) | (0x2 << 2) | (0x2 << 4);
 c10314c:	e59f30a0 	ldr	r3, [pc, #160]	; c1031f4 <uart_lconf+0x1f4>
 c103150:	e59f209c 	ldr	r2, [pc, #156]	; c1031f4 <uart_lconf+0x1f4>
 c103154:	e5922000 	ldr	r2, [r2]
 c103158:	e3c2203c 	bic	r2, r2, #60	; 0x3c
 c10315c:	e3822028 	orr	r2, r2, #40	; 0x28
 c103160:	e5832000 	str	r2, [r3]
			break;
 c103164:	ea00000d 	b	c1031a0 <uart_lconf+0x1a0>

		case UART1:
			rULCON1 = confvalue;
 c103168:	e59f3088 	ldr	r3, [pc, #136]	; c1031f8 <uart_lconf+0x1f8>
 c10316c:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
 c103170:	e5832000 	str	r2, [r3]
			rUBRDIV1 = baud;
 c103174:	e59f3080 	ldr	r3, [pc, #128]	; c1031fc <uart_lconf+0x1fc>
 c103178:	e51b201c 	ldr	r2, [fp, #-28]	; 0xffffffe4
 c10317c:	e5832000 	str	r2, [r3]
			// habilitamos la salida fuera del chip de las señales RxD1 y TxD1
			rPCONC = rPCONC  | (0xF << 24);
 c103180:	e59f3078 	ldr	r3, [pc, #120]	; c103200 <uart_lconf+0x200>
 c103184:	e59f2074 	ldr	r2, [pc, #116]	; c103200 <uart_lconf+0x200>
 c103188:	e5922000 	ldr	r2, [r2]
 c10318c:	e382240f 	orr	r2, r2, #251658240	; 0xf000000
 c103190:	e5832000 	str	r2, [r3]
			break;
 c103194:	ea000001 	b	c1031a0 <uart_lconf+0x1a0>

		default:
			return -1;
 c103198:	e3e03000 	mvn	r3, #0
 c10319c:	ea00000d 	b	c1031d8 <uart_lconf+0x1d8>
	}

	uport[port].echo = lconf->echo;
 c1031a0:	e55b201d 	ldrb	r2, [fp, #-29]	; 0xffffffe3
 c1031a4:	e51b3024 	ldr	r3, [fp, #-36]	; 0xffffffdc
 c1031a8:	e5d31004 	ldrb	r1, [r3, #4]
 c1031ac:	e59fc050 	ldr	ip, [pc, #80]	; c103204 <uart_lconf+0x204>
 c1031b0:	e3a00070 	mov	r0, #112	; 0x70
 c1031b4:	e1a03002 	mov	r3, r2
 c1031b8:	e1a03203 	lsl	r3, r3, #4
 c1031bc:	e0623003 	rsb	r3, r2, r3
 c1031c0:	e1a03183 	lsl	r3, r3, #3
 c1031c4:	e08c3003 	add	r3, ip, r3
 c1031c8:	e0833000 	add	r3, r3, r0
 c1031cc:	e1a02001 	mov	r2, r1
 c1031d0:	e5c32004 	strb	r2, [r3, #4]

	return 0;
 c1031d4:	e3a03000 	mov	r3, #0
}
 c1031d8:	e1a00003 	mov	r0, r3
 c1031dc:	e24bd010 	sub	sp, fp, #16
 c1031e0:	e89d6810 	ldm	sp, {r4, fp, sp, lr}
 c1031e4:	e12fff1e 	bx	lr
 c1031e8:	00000000 	.word	0x00000000
 c1031ec:	418e8480 	.word	0x418e8480
 c1031f0:	01d00028 	.word	0x01d00028
 c1031f4:	01d20028 	.word	0x01d20028
 c1031f8:	01d04000 	.word	0x01d04000
 c1031fc:	01d04028 	.word	0x01d04028
 c103200:	01d20010 	.word	0x01d20010
 c103204:	0c100ba0 	.word	0x0c100ba0

0c103208 <uart_conf_txmode>:

/* uart_conf_txmode: función que configura el modo de transmisión del puerto
 */
int uart_conf_txmode(enum UART port, enum URxTxMode mode)
{
 c103208:	e1a0c00d 	mov	ip, sp
 c10320c:	e92dd800 	push	{fp, ip, lr, pc}
 c103210:	e24cb004 	sub	fp, ip, #4
 c103214:	e24dd010 	sub	sp, sp, #16
 c103218:	e1a02000 	mov	r2, r0
 c10321c:	e1a03001 	mov	r3, r1
 c103220:	e54b2015 	strb	r2, [fp, #-21]	; 0xffffffeb
 c103224:	e54b3016 	strb	r3, [fp, #-22]	; 0xffffffea
	int conf = 0; //variable para modo POLL/INT o DMA
 c103228:	e3a03000 	mov	r3, #0
 c10322c:	e50b3010 	str	r3, [fp, #-16]

	if (mode < 0 || mode > 3)
 c103230:	e55b3016 	ldrb	r3, [fp, #-22]	; 0xffffffea
 c103234:	e3530003 	cmp	r3, #3
 c103238:	9a000001 	bls	c103244 <uart_conf_txmode+0x3c>
		return -1;
 c10323c:	e3e03000 	mvn	r3, #0
 c103240:	ea00004d 	b	c10337c <uart_conf_txmode+0x174>

	if (port < 0 || port > 1)
 c103244:	e55b3015 	ldrb	r3, [fp, #-21]	; 0xffffffeb
 c103248:	e3530001 	cmp	r3, #1
 c10324c:	9a000001 	bls	c103258 <uart_conf_txmode+0x50>
		return -1;
 c103250:	e3e03000 	mvn	r3, #0
 c103254:	ea000048 	b	c10337c <uart_conf_txmode+0x174>

	switch (mode) {
 c103258:	e55b3016 	ldrb	r3, [fp, #-22]	; 0xffffffea
 c10325c:	e3530001 	cmp	r3, #1
 c103260:	ba00000f 	blt	c1032a4 <uart_conf_txmode+0x9c>
 c103264:	e3530002 	cmp	r3, #2
 c103268:	da000002 	ble	c103278 <uart_conf_txmode+0x70>
 c10326c:	e3530003 	cmp	r3, #3
 c103270:	0a000003 	beq	c103284 <uart_conf_txmode+0x7c>
 c103274:	ea00000a 	b	c1032a4 <uart_conf_txmode+0x9c>
		case POLL:
		case INT:
			conf = 1;
 c103278:	e3a03001 	mov	r3, #1
 c10327c:	e50b3010 	str	r3, [fp, #-16]
			break;
 c103280:	ea000009 	b	c1032ac <uart_conf_txmode+0xa4>
		case DMA:
			conf = (port == UART0) ? 2 : 3;
 c103284:	e55b3015 	ldrb	r3, [fp, #-21]	; 0xffffffeb
 c103288:	e3530000 	cmp	r3, #0
 c10328c:	1a000001 	bne	c103298 <uart_conf_txmode+0x90>
 c103290:	e3a03002 	mov	r3, #2
 c103294:	ea000000 	b	c10329c <uart_conf_txmode+0x94>
 c103298:	e3a03003 	mov	r3, #3
 c10329c:	e50b3010 	str	r3, [fp, #-16]
			break;
 c1032a0:	ea000001 	b	c1032ac <uart_conf_txmode+0xa4>
		default:
			conf = 0;
 c1032a4:	e3a03000 	mov	r3, #0
 c1032a8:	e50b3010 	str	r3, [fp, #-16]
	}
		

	switch (port) {
 c1032ac:	e55b3015 	ldrb	r3, [fp, #-21]	; 0xffffffeb
 c1032b0:	e3530000 	cmp	r3, #0
 c1032b4:	0a000002 	beq	c1032c4 <uart_conf_txmode+0xbc>
 c1032b8:	e3530001 	cmp	r3, #1
 c1032bc:	0a000012 	beq	c10330c <uart_conf_txmode+0x104>
 c1032c0:	ea000023 	b	c103354 <uart_conf_txmode+0x14c>
		case UART0:
			rUCON0 &=~( 0x3 << 2);
 c1032c4:	e59f30c0 	ldr	r3, [pc, #192]	; c10338c <uart_conf_txmode+0x184>
 c1032c8:	e59f20bc 	ldr	r2, [pc, #188]	; c10338c <uart_conf_txmode+0x184>
 c1032cc:	e5922000 	ldr	r2, [r2]
 c1032d0:	e3c2200c 	bic	r2, r2, #12
 c1032d4:	e5832000 	str	r2, [r3]
			rUCON0 |= (conf << 2);
 c1032d8:	e59f30ac 	ldr	r3, [pc, #172]	; c10338c <uart_conf_txmode+0x184>
 c1032dc:	e59f20a8 	ldr	r2, [pc, #168]	; c10338c <uart_conf_txmode+0x184>
 c1032e0:	e5921000 	ldr	r1, [r2]
 c1032e4:	e51b2010 	ldr	r2, [fp, #-16]
 c1032e8:	e1a02102 	lsl	r2, r2, #2
 c1032ec:	e1812002 	orr	r2, r1, r2
 c1032f0:	e5832000 	str	r2, [r3]
			rUCON0 |= (0x1 << 9); //COMPLETAR: modo indicado por conf, Tx interrupt por nivel
 c1032f4:	e59f3090 	ldr	r3, [pc, #144]	; c10338c <uart_conf_txmode+0x184>
 c1032f8:	e59f208c 	ldr	r2, [pc, #140]	; c10338c <uart_conf_txmode+0x184>
 c1032fc:	e5922000 	ldr	r2, [r2]
 c103300:	e3822c02 	orr	r2, r2, #512	; 0x200
 c103304:	e5832000 	str	r2, [r3]
			break;
 c103308:	ea000011 	b	c103354 <uart_conf_txmode+0x14c>

		case UART1:
			rUCON0 &=~( 0x3 << 2);
 c10330c:	e59f3078 	ldr	r3, [pc, #120]	; c10338c <uart_conf_txmode+0x184>
 c103310:	e59f2074 	ldr	r2, [pc, #116]	; c10338c <uart_conf_txmode+0x184>
 c103314:	e5922000 	ldr	r2, [r2]
 c103318:	e3c2200c 	bic	r2, r2, #12
 c10331c:	e5832000 	str	r2, [r3]
			rUCON1 |= (conf << 2);
 c103320:	e59f3068 	ldr	r3, [pc, #104]	; c103390 <uart_conf_txmode+0x188>
 c103324:	e59f2064 	ldr	r2, [pc, #100]	; c103390 <uart_conf_txmode+0x188>
 c103328:	e5921000 	ldr	r1, [r2]
 c10332c:	e51b2010 	ldr	r2, [fp, #-16]
 c103330:	e1a02102 	lsl	r2, r2, #2
 c103334:	e1812002 	orr	r2, r1, r2
 c103338:	e5832000 	str	r2, [r3]
			rUCON1 |= ( 0x1 << 9); //COMPLETAR: modo indicado por conf, Tx interrupt por nivel
 c10333c:	e59f304c 	ldr	r3, [pc, #76]	; c103390 <uart_conf_txmode+0x188>
 c103340:	e59f2048 	ldr	r2, [pc, #72]	; c103390 <uart_conf_txmode+0x188>
 c103344:	e5922000 	ldr	r2, [r2]
 c103348:	e3822c02 	orr	r2, r2, #512	; 0x200
 c10334c:	e5832000 	str	r2, [r3]
			break;
 c103350:	e1a00000 	nop			; (mov r0, r0)
	}

	uport[port].txmode = mode;
 c103354:	e55b2015 	ldrb	r2, [fp, #-21]	; 0xffffffeb
 c103358:	e59f1034 	ldr	r1, [pc, #52]	; c103394 <uart_conf_txmode+0x18c>
 c10335c:	e1a03002 	mov	r3, r2
 c103360:	e1a03203 	lsl	r3, r3, #4
 c103364:	e0623003 	rsb	r3, r2, r3
 c103368:	e1a03183 	lsl	r3, r3, #3
 c10336c:	e0813003 	add	r3, r1, r3
 c103370:	e55b2016 	ldrb	r2, [fp, #-22]	; 0xffffffea
 c103374:	e5c32001 	strb	r2, [r3, #1]

	return 0;
 c103378:	e3a03000 	mov	r3, #0
}
 c10337c:	e1a00003 	mov	r0, r3
 c103380:	e24bd00c 	sub	sp, fp, #12
 c103384:	e89d6800 	ldm	sp, {fp, sp, lr}
 c103388:	e12fff1e 	bx	lr
 c10338c:	01d00004 	.word	0x01d00004
 c103390:	01d04004 	.word	0x01d04004
 c103394:	0c100ba0 	.word	0x0c100ba0

0c103398 <uart_conf_rxmode>:

/* uart_conf_rxmode: función que configura el modo de recepción del puerto
 */
int uart_conf_rxmode(enum UART port, enum URxTxMode mode)
{
 c103398:	e1a0c00d 	mov	ip, sp
 c10339c:	e92dd800 	push	{fp, ip, lr, pc}
 c1033a0:	e24cb004 	sub	fp, ip, #4
 c1033a4:	e24dd010 	sub	sp, sp, #16
 c1033a8:	e1a02000 	mov	r2, r0
 c1033ac:	e1a03001 	mov	r3, r1
 c1033b0:	e54b2015 	strb	r2, [fp, #-21]	; 0xffffffeb
 c1033b4:	e54b3016 	strb	r3, [fp, #-22]	; 0xffffffea
	int conf = 0; //variable para modo POLL/INT o DMA
 c1033b8:	e3a03000 	mov	r3, #0
 c1033bc:	e50b3010 	str	r3, [fp, #-16]

	if (mode < 0 || mode > 3)
 c1033c0:	e55b3016 	ldrb	r3, [fp, #-22]	; 0xffffffea
 c1033c4:	e3530003 	cmp	r3, #3
 c1033c8:	9a000001 	bls	c1033d4 <uart_conf_rxmode+0x3c>
		return -1;
 c1033cc:	e3e03000 	mvn	r3, #0
 c1033d0:	ea00005a 	b	c103540 <uart_conf_rxmode+0x1a8>

	if (port < 0 || port > 1)
 c1033d4:	e55b3015 	ldrb	r3, [fp, #-21]	; 0xffffffeb
 c1033d8:	e3530001 	cmp	r3, #1
 c1033dc:	9a000001 	bls	c1033e8 <uart_conf_rxmode+0x50>
		return -1;
 c1033e0:	e3e03000 	mvn	r3, #0
 c1033e4:	ea000055 	b	c103540 <uart_conf_rxmode+0x1a8>

	switch (mode) {
 c1033e8:	e55b3016 	ldrb	r3, [fp, #-22]	; 0xffffffea
 c1033ec:	e3530001 	cmp	r3, #1
 c1033f0:	ba00000f 	blt	c103434 <uart_conf_rxmode+0x9c>
 c1033f4:	e3530002 	cmp	r3, #2
 c1033f8:	da000002 	ble	c103408 <uart_conf_rxmode+0x70>
 c1033fc:	e3530003 	cmp	r3, #3
 c103400:	0a000003 	beq	c103414 <uart_conf_rxmode+0x7c>
 c103404:	ea00000a 	b	c103434 <uart_conf_rxmode+0x9c>
		case POLL:
		case INT:
			conf = 1;
 c103408:	e3a03001 	mov	r3, #1
 c10340c:	e50b3010 	str	r3, [fp, #-16]
			break;
 c103410:	ea000009 	b	c10343c <uart_conf_rxmode+0xa4>
		case DMA:
			conf = (port == UART0) ? 2 : 3;
 c103414:	e55b3015 	ldrb	r3, [fp, #-21]	; 0xffffffeb
 c103418:	e3530000 	cmp	r3, #0
 c10341c:	1a000001 	bne	c103428 <uart_conf_rxmode+0x90>
 c103420:	e3a03002 	mov	r3, #2
 c103424:	ea000000 	b	c10342c <uart_conf_rxmode+0x94>
 c103428:	e3a03003 	mov	r3, #3
 c10342c:	e50b3010 	str	r3, [fp, #-16]
			break;
 c103430:	ea000001 	b	c10343c <uart_conf_rxmode+0xa4>
		default:
			conf = 0;
 c103434:	e3a03000 	mov	r3, #0
 c103438:	e50b3010 	str	r3, [fp, #-16]
	}

	switch (port) {
 c10343c:	e55b3015 	ldrb	r3, [fp, #-21]	; 0xffffffeb
 c103440:	e3530000 	cmp	r3, #0
 c103444:	0a000002 	beq	c103454 <uart_conf_rxmode+0xbc>
 c103448:	e3530001 	cmp	r3, #1
 c10344c:	0a000016 	beq	c1034ac <uart_conf_rxmode+0x114>
 c103450:	ea000030 	b	c103518 <uart_conf_rxmode+0x180>
		case UART0:
				//COMPLETAR: modo indicado por conf,
			rUCON0 &=~( 0x3 << 0);// and negada y luego or // seguro es necesario??
 c103454:	e59f30f4 	ldr	r3, [pc, #244]	; c103550 <uart_conf_rxmode+0x1b8>
 c103458:	e59f20f0 	ldr	r2, [pc, #240]	; c103550 <uart_conf_rxmode+0x1b8>
 c10345c:	e5922000 	ldr	r2, [r2]
 c103460:	e3c22003 	bic	r2, r2, #3
 c103464:	e5832000 	str	r2, [r3]
			rUCON0 |= (conf << 0);// con conf en el bit 0 del registro
 c103468:	e59f30e0 	ldr	r3, [pc, #224]	; c103550 <uart_conf_rxmode+0x1b8>
 c10346c:	e59f20dc 	ldr	r2, [pc, #220]	; c103550 <uart_conf_rxmode+0x1b8>
 c103470:	e5921000 	ldr	r1, [r2]
 c103474:	e51b2010 	ldr	r2, [fp, #-16]
 c103478:	e1812002 	orr	r2, r1, r2
 c10347c:	e5832000 	str	r2, [r3]
			rUCON0 &=~ (0x1 << 8); // Rx interrupt por pulso
 c103480:	e59f30c8 	ldr	r3, [pc, #200]	; c103550 <uart_conf_rxmode+0x1b8>
 c103484:	e59f20c4 	ldr	r2, [pc, #196]	; c103550 <uart_conf_rxmode+0x1b8>
 c103488:	e5922000 	ldr	r2, [r2]
 c10348c:	e3c22c01 	bic	r2, r2, #256	; 0x100
 c103490:	e5832000 	str	r2, [r3]
			//COMPLETAR: si se el modo es por interrupciones habilitar la línea de interrupción por recepción en el puerto
			if(mode ==2){
 c103494:	e55b3016 	ldrb	r3, [fp, #-22]	; 0xffffffea
 c103498:	e3530002 	cmp	r3, #2
 c10349c:	1a00001a 	bne	c10350c <uart_conf_rxmode+0x174>
				ic_enable(7);
 c1034a0:	e3a00007 	mov	r0, #7
 c1034a4:	ebfff912 	bl	c1018f4 <ic_enable>
			}


			break;
 c1034a8:	ea00001a 	b	c103518 <uart_conf_rxmode+0x180>

		case UART1:
			mode = conf;
 c1034ac:	e51b3010 	ldr	r3, [fp, #-16]
 c1034b0:	e54b3016 	strb	r3, [fp, #-22]	; 0xffffffea
			rUCON1 &=~( 0x3 << 0);
 c1034b4:	e59f3098 	ldr	r3, [pc, #152]	; c103554 <uart_conf_rxmode+0x1bc>
 c1034b8:	e59f2094 	ldr	r2, [pc, #148]	; c103554 <uart_conf_rxmode+0x1bc>
 c1034bc:	e5922000 	ldr	r2, [r2]
 c1034c0:	e3c22003 	bic	r2, r2, #3
 c1034c4:	e5832000 	str	r2, [r3]
			rUCON1 |= (conf << 0);
 c1034c8:	e59f3084 	ldr	r3, [pc, #132]	; c103554 <uart_conf_rxmode+0x1bc>
 c1034cc:	e59f2080 	ldr	r2, [pc, #128]	; c103554 <uart_conf_rxmode+0x1bc>
 c1034d0:	e5921000 	ldr	r1, [r2]
 c1034d4:	e51b2010 	ldr	r2, [fp, #-16]
 c1034d8:	e1812002 	orr	r2, r1, r2
 c1034dc:	e5832000 	str	r2, [r3]
			rUCON1 |= (0x1 << 8);//COMPLETAR: modo indicado por conf, Rx interrupt por pulso
 c1034e0:	e59f306c 	ldr	r3, [pc, #108]	; c103554 <uart_conf_rxmode+0x1bc>
 c1034e4:	e59f2068 	ldr	r2, [pc, #104]	; c103554 <uart_conf_rxmode+0x1bc>
 c1034e8:	e5922000 	ldr	r2, [r2]
 c1034ec:	e3822c01 	orr	r2, r2, #256	; 0x100
 c1034f0:	e5832000 	str	r2, [r3]
			//COMPLETAR: si se el modo es por interrupciones habilitar la línea
			//de interrupción por recepción en el puerto 1
			if(mode ==2){
 c1034f4:	e55b3016 	ldrb	r3, [fp, #-22]	; 0xffffffea
 c1034f8:	e3530002 	cmp	r3, #2
 c1034fc:	1a000004 	bne	c103514 <uart_conf_rxmode+0x17c>
				ic_enable(6);
 c103500:	e3a00006 	mov	r0, #6
 c103504:	ebfff8fa 	bl	c1018f4 <ic_enable>
			}

			break;
 c103508:	ea000002 	b	c103518 <uart_conf_rxmode+0x180>
			if(mode ==2){
				ic_enable(7);
			}


			break;
 c10350c:	e1a00000 	nop			; (mov r0, r0)
 c103510:	ea000000 	b	c103518 <uart_conf_rxmode+0x180>
			//de interrupción por recepción en el puerto 1
			if(mode ==2){
				ic_enable(6);
			}

			break;
 c103514:	e1a00000 	nop			; (mov r0, r0)
	}

	uport[port].rxmode = mode;
 c103518:	e55b2015 	ldrb	r2, [fp, #-21]	; 0xffffffeb
 c10351c:	e59f1034 	ldr	r1, [pc, #52]	; c103558 <uart_conf_rxmode+0x1c0>
 c103520:	e1a03002 	mov	r3, r2
 c103524:	e1a03203 	lsl	r3, r3, #4
 c103528:	e0623003 	rsb	r3, r2, r3
 c10352c:	e1a03183 	lsl	r3, r3, #3
 c103530:	e0813003 	add	r3, r1, r3
 c103534:	e55b2016 	ldrb	r2, [fp, #-22]	; 0xffffffea
 c103538:	e5c32000 	strb	r2, [r3]

	return 0;
 c10353c:	e3a03000 	mov	r3, #0
}
 c103540:	e1a00003 	mov	r0, r3
 c103544:	e24bd00c 	sub	sp, fp, #12
 c103548:	e89d6800 	ldm	sp, {fp, sp, lr}
 c10354c:	e12fff1e 	bx	lr
 c103550:	01d00004 	.word	0x01d00004
 c103554:	01d04004 	.word	0x01d04004
 c103558:	0c100ba0 	.word	0x0c100ba0

0c10355c <uart_rx_ready>:

/* uart_rx_ready: función que realiza un espera activa hasta que el puerto haya
 * recibido un byte
 */
static void uart_rx_ready(enum UART port)
{
 c10355c:	e1a0c00d 	mov	ip, sp
 c103560:	e92dd800 	push	{fp, ip, lr, pc}
 c103564:	e24cb004 	sub	fp, ip, #4
 c103568:	e24dd008 	sub	sp, sp, #8
 c10356c:	e1a03000 	mov	r3, r0
 c103570:	e54b300d 	strb	r3, [fp, #-13]
	switch (port) {
 c103574:	e55b300d 	ldrb	r3, [fp, #-13]
 c103578:	e3530000 	cmp	r3, #0
 c10357c:	0a000002 	beq	c10358c <uart_rx_ready+0x30>
 c103580:	e3530001 	cmp	r3, #1
 c103584:	0a000007 	beq	c1035a8 <uart_rx_ready+0x4c>
 c103588:	ea00000d 	b	c1035c4 <uart_rx_ready+0x68>
		case UART0:
			//COMPLETAR: esperar a que la uart0 haya recibido un dato (UTRSTAT0,
			//Receive Buffer Data Ready)
			//rUTRSTAT0 &=~(0x1 <<0);
			while(!(rUTRSTAT0 & ( 0x1 << 0))){//sino negar el regustro y hacer and con 1
 c10358c:	e1a00000 	nop			; (mov r0, r0)
 c103590:	e59f3038 	ldr	r3, [pc, #56]	; c1035d0 <uart_rx_ready+0x74>
 c103594:	e5933000 	ldr	r3, [r3]
 c103598:	e2033001 	and	r3, r3, #1
 c10359c:	e3530000 	cmp	r3, #0
 c1035a0:	0afffffa 	beq	c103590 <uart_rx_ready+0x34>
			}
			break;
 c1035a4:	ea000006 	b	c1035c4 <uart_rx_ready+0x68>

		case UART1:
			//COMPLETAR: esperar a que la uart1 haya recibido un dato (UTRSTAT1,
			//Receive Buffer Data Ready)
			while(!(rUTRSTAT1 & ( 0x1 << 0 ))){
 c1035a8:	e1a00000 	nop			; (mov r0, r0)
 c1035ac:	e59f3020 	ldr	r3, [pc, #32]	; c1035d4 <uart_rx_ready+0x78>
 c1035b0:	e5933000 	ldr	r3, [r3]
 c1035b4:	e2033001 	and	r3, r3, #1
 c1035b8:	e3530000 	cmp	r3, #0
 c1035bc:	0afffffa 	beq	c1035ac <uart_rx_ready+0x50>
			}
			break;
 c1035c0:	e1a00000 	nop			; (mov r0, r0)
	}
}
 c1035c4:	e24bd00c 	sub	sp, fp, #12
 c1035c8:	e89d6800 	ldm	sp, {fp, sp, lr}
 c1035cc:	e12fff1e 	bx	lr
 c1035d0:	01d00010 	.word	0x01d00010
 c1035d4:	01d04010 	.word	0x01d04010

0c1035d8 <uart_tx_ready>:

/* uart_tx_ready: función que realiza un espera activa hasta que se vacíe el
 * buffer de transmisión del puerto
 */
static void uart_tx_ready(enum UART port)
{
 c1035d8:	e1a0c00d 	mov	ip, sp
 c1035dc:	e92dd800 	push	{fp, ip, lr, pc}
 c1035e0:	e24cb004 	sub	fp, ip, #4
 c1035e4:	e24dd008 	sub	sp, sp, #8
 c1035e8:	e1a03000 	mov	r3, r0
 c1035ec:	e54b300d 	strb	r3, [fp, #-13]
	switch (port) {
 c1035f0:	e55b300d 	ldrb	r3, [fp, #-13]
 c1035f4:	e3530000 	cmp	r3, #0
 c1035f8:	0a000002 	beq	c103608 <uart_tx_ready+0x30>
 c1035fc:	e3530001 	cmp	r3, #1
 c103600:	0a000007 	beq	c103624 <uart_tx_ready+0x4c>
 c103604:	ea00000d 	b	c103640 <uart_tx_ready+0x68>
		case UART0:
			//COMPLETAR: esperar a que se vacíe el buffer de transmisión de la
			//uart0 (UTRSTAT0, Transmit Buffer Empty)
			while(!(rUTRSTAT0 & ( 0x1 << 1 ))){
 c103608:	e1a00000 	nop			; (mov r0, r0)
 c10360c:	e59f3038 	ldr	r3, [pc, #56]	; c10364c <uart_tx_ready+0x74>
 c103610:	e5933000 	ldr	r3, [r3]
 c103614:	e2033002 	and	r3, r3, #2
 c103618:	e3530000 	cmp	r3, #0
 c10361c:	0afffffa 	beq	c10360c <uart_tx_ready+0x34>
			}
			break;
 c103620:	ea000006 	b	c103640 <uart_tx_ready+0x68>

		case UART1:
			//COMPLETAR: esperar a que se vacíe el buffer de transmisión de la
			//uart1 (UTRSTAT1, Transmit Buffer Empty)
			while(!(rUTRSTAT1 & ( 0x1 << 1 ))){
 c103624:	e1a00000 	nop			; (mov r0, r0)
 c103628:	e59f3020 	ldr	r3, [pc, #32]	; c103650 <uart_tx_ready+0x78>
 c10362c:	e5933000 	ldr	r3, [r3]
 c103630:	e2033002 	and	r3, r3, #2
 c103634:	e3530000 	cmp	r3, #0
 c103638:	0afffffa 	beq	c103628 <uart_tx_ready+0x50>
			}
			break;
 c10363c:	e1a00000 	nop			; (mov r0, r0)
	}
}
 c103640:	e24bd00c 	sub	sp, fp, #12
 c103644:	e89d6800 	ldm	sp, {fp, sp, lr}
 c103648:	e12fff1e 	bx	lr
 c10364c:	01d00010 	.word	0x01d00010
 c103650:	01d04010 	.word	0x01d04010

0c103654 <uart_write>:

/* uart_write: función que escribe un byte en el buffer de transmisión del
 * puerto
 */
static void uart_write(enum UART port, char c)
{
 c103654:	e1a0c00d 	mov	ip, sp
 c103658:	e92dd800 	push	{fp, ip, lr, pc}
 c10365c:	e24cb004 	sub	fp, ip, #4
 c103660:	e24dd008 	sub	sp, sp, #8
 c103664:	e1a02000 	mov	r2, r0
 c103668:	e1a03001 	mov	r3, r1
 c10366c:	e54b200d 	strb	r2, [fp, #-13]
 c103670:	e54b300e 	strb	r3, [fp, #-14]
	if (port == UART0){
 c103674:	e55b300d 	ldrb	r3, [fp, #-13]
 c103678:	e3530000 	cmp	r3, #0
 c10367c:	1a000003 	bne	c103690 <uart_write+0x3c>
		//COMPLETAR: Escribir el carácter c en el puerto 0, usar la macro WrUTXH0 ?¿¿?¿?¿?¿??¿?¿
		WrUTXH0(c);
 c103680:	e59f3020 	ldr	r3, [pc, #32]	; c1036a8 <uart_write+0x54>
 c103684:	e55b200e 	ldrb	r2, [fp, #-14]
 c103688:	e5c32000 	strb	r2, [r3]
 c10368c:	ea000002 	b	c10369c <uart_write+0x48>
	}
	else{
		//COMPLETAR: Escribir el carácter c en el puerto 1, usar la macro WrUTXH1 ¿??¿?¿?¿?¿?¿¿??¿
		WrUTXH1(c);
 c103690:	e59f3014 	ldr	r3, [pc, #20]	; c1036ac <uart_write+0x58>
 c103694:	e55b200e 	ldrb	r2, [fp, #-14]
 c103698:	e5c32000 	strb	r2, [r3]
	}
}
 c10369c:	e24bd00c 	sub	sp, fp, #12
 c1036a0:	e89d6800 	ldm	sp, {fp, sp, lr}
 c1036a4:	e12fff1e 	bx	lr
 c1036a8:	01d00020 	.word	0x01d00020
 c1036ac:	01d04020 	.word	0x01d04020

0c1036b0 <uart_read>:
 
/* uart_read: función que lee un byte del buffer (registro) de recepción del
 * puerto, y hace el eco del carácter si el puerto tiene el eco activado
 */
static char uart_read(enum UART port)
{
 c1036b0:	e1a0c00d 	mov	ip, sp
 c1036b4:	e92dd800 	push	{fp, ip, lr, pc}
 c1036b8:	e24cb004 	sub	fp, ip, #4
 c1036bc:	e24dd010 	sub	sp, sp, #16
 c1036c0:	e1a03000 	mov	r3, r0
 c1036c4:	e54b3015 	strb	r3, [fp, #-21]	; 0xffffffeb
	char c;

	if (port == UART0)
 c1036c8:	e55b3015 	ldrb	r3, [fp, #-21]	; 0xffffffeb
 c1036cc:	e3530000 	cmp	r3, #0
 c1036d0:	1a000003 	bne	c1036e4 <uart_read+0x34>
		c = RdURXH0();	//COMPLETAR: Leer un byte del puerto 0, usar la macro RdUTXH0
 c1036d4:	e59f3078 	ldr	r3, [pc, #120]	; c103754 <uart_read+0xa4>
 c1036d8:	e5d33000 	ldrb	r3, [r3]
 c1036dc:	e54b300d 	strb	r3, [fp, #-13]
 c1036e0:	ea000002 	b	c1036f0 <uart_read+0x40>
	else
		c = RdURXH1();	//COMPLETAR: Leer un byte del puerto 1, usar la macro RdUTXH1
 c1036e4:	e59f306c 	ldr	r3, [pc, #108]	; c103758 <uart_read+0xa8>
 c1036e8:	e5d33000 	ldrb	r3, [r3]
 c1036ec:	e54b300d 	strb	r3, [fp, #-13]

	if (uport[port].echo == ON) {
 c1036f0:	e55b2015 	ldrb	r2, [fp, #-21]	; 0xffffffeb
 c1036f4:	e59f0060 	ldr	r0, [pc, #96]	; c10375c <uart_read+0xac>
 c1036f8:	e3a01070 	mov	r1, #112	; 0x70
 c1036fc:	e1a03002 	mov	r3, r2
 c103700:	e1a03203 	lsl	r3, r3, #4
 c103704:	e0623003 	rsb	r3, r2, r3
 c103708:	e1a03183 	lsl	r3, r3, #3
 c10370c:	e0803003 	add	r3, r0, r3
 c103710:	e0833001 	add	r3, r3, r1
 c103714:	e5d33004 	ldrb	r3, [r3, #4]
 c103718:	e3530001 	cmp	r3, #1
 c10371c:	1a000007 	bne	c103740 <uart_read+0x90>
		//COMPLETAR: Esperar a que el puerto está listo para transmitir
		uart_tx_ready(port); ///ESPERO A QUE SE VACIE SERA ASII¿?¿¿¿??
 c103720:	e55b3015 	ldrb	r3, [fp, #-21]	; 0xffffffeb
 c103724:	e1a00003 	mov	r0, r3
 c103728:	ebffffaa 	bl	c1035d8 <uart_tx_ready>

		//COMPLETAR: Escribir el carácter leído (c) en el puerto port
		uart_write(port, c);
 c10372c:	e55b2015 	ldrb	r2, [fp, #-21]	; 0xffffffeb
 c103730:	e55b300d 	ldrb	r3, [fp, #-13]
 c103734:	e1a00002 	mov	r0, r2
 c103738:	e1a01003 	mov	r1, r3
 c10373c:	ebffffc4 	bl	c103654 <uart_write>
	}
	return c;
 c103740:	e55b300d 	ldrb	r3, [fp, #-13]
}
 c103744:	e1a00003 	mov	r0, r3
 c103748:	e24bd00c 	sub	sp, fp, #12
 c10374c:	e89d6800 	ldm	sp, {fp, sp, lr}
 c103750:	e12fff1e 	bx	lr
 c103754:	01d00024 	.word	0x01d00024
 c103758:	01d04024 	.word	0x01d04024
 c10375c:	0c100ba0 	.word	0x0c100ba0

0c103760 <uart_readtobuf>:
/* uart_readtobuf: función invocada por la ISR de recepción. Su misión es
 * escribir el carácter recibido en el buffer de reccepción del puerto (campo
 * ibuf de la estructura port_stat correspondiente)
 */
static void uart_readtobuf(enum UART port)
{
 c103760:	e1a0c00d 	mov	ip, sp
 c103764:	e92dd800 	push	{fp, ip, lr, pc}
 c103768:	e24cb004 	sub	fp, ip, #4
 c10376c:	e24dd010 	sub	sp, sp, #16
 c103770:	e1a03000 	mov	r3, r0
 c103774:	e54b3015 	strb	r3, [fp, #-21]	; 0xffffffeb
	char c;
	struct port_stat *pst = &uport[port];
 c103778:	e55b2015 	ldrb	r2, [fp, #-21]	; 0xffffffeb
 c10377c:	e1a03002 	mov	r3, r2
 c103780:	e1a03203 	lsl	r3, r3, #4
 c103784:	e0623003 	rsb	r3, r2, r3
 c103788:	e1a03183 	lsl	r3, r3, #3
 c10378c:	e1a02003 	mov	r2, r3
 c103790:	e59f3074 	ldr	r3, [pc, #116]	; c10380c <uart_readtobuf+0xac>
 c103794:	e0823003 	add	r3, r2, r3
 c103798:	e50b3010 	str	r3, [fp, #-16]
	 * 2. Incrementar el puntero de escritura y si es necesario corregir su
	 *    valor para que está siempre en el rango 0 - BUFLEN-1 (gestionado de
	 *    forma circular)
	 */
	//1
	c= uart_read(port);
 c10379c:	e55b3015 	ldrb	r3, [fp, #-21]	; 0xffffffeb
 c1037a0:	e1a00003 	mov	r0, r3
 c1037a4:	ebffffc1 	bl	c1036b0 <uart_read>
 c1037a8:	e1a03000 	mov	r3, r0
 c1037ac:	e54b3011 	strb	r3, [fp, #-17]	; 0xffffffef
	pst->ibuf[pst -> wP] = c;
 c1037b0:	e51b3010 	ldr	r3, [fp, #-16]
 c1037b4:	e593206c 	ldr	r2, [r3, #108]	; 0x6c
 c1037b8:	e51b1010 	ldr	r1, [fp, #-16]
 c1037bc:	e3a03002 	mov	r3, #2
 c1037c0:	e0812002 	add	r2, r1, r2
 c1037c4:	e0823003 	add	r3, r2, r3
 c1037c8:	e55b2011 	ldrb	r2, [fp, #-17]	; 0xffffffef
 c1037cc:	e5c32000 	strb	r2, [r3]
	pst->wP++;		
 c1037d0:	e51b3010 	ldr	r3, [fp, #-16]
 c1037d4:	e593306c 	ldr	r3, [r3, #108]	; 0x6c
 c1037d8:	e2832001 	add	r2, r3, #1
 c1037dc:	e51b3010 	ldr	r3, [fp, #-16]
 c1037e0:	e583206c 	str	r2, [r3, #108]	; 0x6c
	//2
	if(pst-> wP == BUFLEN){
 c1037e4:	e51b3010 	ldr	r3, [fp, #-16]
 c1037e8:	e593306c 	ldr	r3, [r3, #108]	; 0x6c
 c1037ec:	e3530064 	cmp	r3, #100	; 0x64
 c1037f0:	1a000002 	bne	c103800 <uart_readtobuf+0xa0>
	 pst-> wP = 0;
 c1037f4:	e51b3010 	ldr	r3, [fp, #-16]
 c1037f8:	e3a02000 	mov	r2, #0
 c1037fc:	e583206c 	str	r2, [r3, #108]	; 0x6c
	}
}
 c103800:	e24bd00c 	sub	sp, fp, #12
 c103804:	e89d6800 	ldm	sp, {fp, sp, lr}
 c103808:	e12fff1e 	bx	lr
 c10380c:	0c100ba0 	.word	0x0c100ba0

0c103810 <uart_readfrombuf>:
 * está configurado por interrupciones para la recepción. Su misión es esperar a
 * que al menos haya un byte en el buffer de recepción, y entonces sacarlo del
 * buffer y devolverlo como byte leído.
 */
static char uart_readfrombuf(enum UART port)
{
 c103810:	e1a0c00d 	mov	ip, sp
 c103814:	e92dd800 	push	{fp, ip, lr, pc}
 c103818:	e24cb004 	sub	fp, ip, #4
 c10381c:	e24dd010 	sub	sp, sp, #16
 c103820:	e1a03000 	mov	r3, r0
 c103824:	e54b3015 	strb	r3, [fp, #-21]	; 0xffffffeb
	struct port_stat *pst = &uport[port];
 c103828:	e55b2015 	ldrb	r2, [fp, #-21]	; 0xffffffeb
 c10382c:	e1a03002 	mov	r3, r2
 c103830:	e1a03203 	lsl	r3, r3, #4
 c103834:	e0623003 	rsb	r3, r2, r3
 c103838:	e1a03183 	lsl	r3, r3, #3
 c10383c:	e1a02003 	mov	r2, r3
 c103840:	e59f3088 	ldr	r3, [pc, #136]	; c1038d0 <uart_readfrombuf+0xc0>
 c103844:	e0823003 	add	r3, r2, r3
 c103848:	e50b3010 	str	r3, [fp, #-16]
	 * 3. Extraer el primer byte y devolverlo (el byte se devuelve y el puntero
	 *    de lectura se deja incrementado, con lo que el byte queda fuera del
	 *    buffer)
	 */
	//1
		if(pst->rP ==BUFLEN){
 c10384c:	e51b3010 	ldr	r3, [fp, #-16]
 c103850:	e5933068 	ldr	r3, [r3, #104]	; 0x68
 c103854:	e3530064 	cmp	r3, #100	; 0x64
 c103858:	1a000003 	bne	c10386c <uart_readfrombuf+0x5c>
		 pst-> rP = 0;
 c10385c:	e51b3010 	ldr	r3, [fp, #-16]
 c103860:	e3a02000 	mov	r2, #0
 c103864:	e5832068 	str	r2, [r3, #104]	; 0x68
		}
	//2
		char c;
		while(pst->rP == pst->wP){
 c103868:	ea000000 	b	c103870 <uart_readfrombuf+0x60>
 c10386c:	e1a00000 	nop			; (mov r0, r0)
 c103870:	e51b3010 	ldr	r3, [fp, #-16]
 c103874:	e5932068 	ldr	r2, [r3, #104]	; 0x68
 c103878:	e51b3010 	ldr	r3, [fp, #-16]
 c10387c:	e593306c 	ldr	r3, [r3, #108]	; 0x6c
 c103880:	e1520003 	cmp	r2, r3
 c103884:	0afffff9 	beq	c103870 <uart_readfrombuf+0x60>

		}
	//3

		c= pst-> ibuf[pst->rP];
 c103888:	e51b3010 	ldr	r3, [fp, #-16]
 c10388c:	e5932068 	ldr	r2, [r3, #104]	; 0x68
 c103890:	e51b1010 	ldr	r1, [fp, #-16]
 c103894:	e3a03002 	mov	r3, #2
 c103898:	e0812002 	add	r2, r1, r2
 c10389c:	e0823003 	add	r3, r2, r3
 c1038a0:	e5d33000 	ldrb	r3, [r3]
 c1038a4:	e54b3011 	strb	r3, [fp, #-17]	; 0xffffffef
		pst->rP++;
 c1038a8:	e51b3010 	ldr	r3, [fp, #-16]
 c1038ac:	e5933068 	ldr	r3, [r3, #104]	; 0x68
 c1038b0:	e2832001 	add	r2, r3, #1
 c1038b4:	e51b3010 	ldr	r3, [fp, #-16]
 c1038b8:	e5832068 	str	r2, [r3, #104]	; 0x68

	return c;
 c1038bc:	e55b3011 	ldrb	r3, [fp, #-17]	; 0xffffffef
}
 c1038c0:	e1a00003 	mov	r0, r3
 c1038c4:	e24bd00c 	sub	sp, fp, #12
 c1038c8:	e89d6800 	ldm	sp, {fp, sp, lr}
 c1038cc:	e12fff1e 	bx	lr
 c1038d0:	0c100ba0 	.word	0x0c100ba0

0c1038d4 <Uart0_RxInt>:

/* ISR de recepción por el puerto 0 */
void Uart0_RxInt(void)
{
 c1038d4:	e52dc004 	push	{ip}		; (str ip, [sp, #-4]!)
 c1038d8:	e1a0c00d 	mov	ip, sp
 c1038dc:	e92dd80f 	push	{r0, r1, r2, r3, fp, ip, lr, pc}
 c1038e0:	e24cb004 	sub	fp, ip, #4
	uart_readtobuf(UART0);
 c1038e4:	e3a00000 	mov	r0, #0
 c1038e8:	ebffff9c 	bl	c103760 <uart_readtobuf>
	
	//COMPLETAR: borrar el flag de interrupción por recepción en el puerto 0
	ic_cleanflag(7);
 c1038ec:	e3a00007 	mov	r0, #7
 c1038f0:	ebfff837 	bl	c1019d4 <ic_cleanflag>
}
 c1038f4:	e24bd01c 	sub	sp, fp, #28
 c1038f8:	e89d680f 	ldm	sp, {r0, r1, r2, r3, fp, sp, lr}
 c1038fc:	e49dc004 	pop	{ip}		; (ldr ip, [sp], #4)
 c103900:	e25ef004 	subs	pc, lr, #4

0c103904 <Uart1_RxInt>:

/* ISR de recepción por el puerto 1 */
void Uart1_RxInt(void)
{
 c103904:	e52dc004 	push	{ip}		; (str ip, [sp, #-4]!)
 c103908:	e1a0c00d 	mov	ip, sp
 c10390c:	e92dd80f 	push	{r0, r1, r2, r3, fp, ip, lr, pc}
 c103910:	e24cb004 	sub	fp, ip, #4
	uart_readtobuf(UART1);
 c103914:	e3a00001 	mov	r0, #1
 c103918:	ebffff90 	bl	c103760 <uart_readtobuf>
	
	//COMPLETAR: borrar el flag de interrupción por recepción en el puerto 1
	ic_cleanflag(6);
 c10391c:	e3a00006 	mov	r0, #6
 c103920:	ebfff82b 	bl	c1019d4 <ic_cleanflag>
}
 c103924:	e24bd01c 	sub	sp, fp, #28
 c103928:	e89d680f 	ldm	sp, {r0, r1, r2, r3, fp, sp, lr}
 c10392c:	e49dc004 	pop	{ip}		; (ldr ip, [sp], #4)
 c103930:	e25ef004 	subs	pc, lr, #4

0c103934 <uart_dotxint>:
 * la estructura port_stat asociada al puerto, y si la transmisión ha finalizado
 * desactivar las interrupciones de envío y señalizar el final del envío
 * poniendo el puntero sendP a NULL.
 */
static void uart_dotxint(enum UART port)
{
 c103934:	e1a0c00d 	mov	ip, sp
 c103938:	e92dd800 	push	{fp, ip, lr, pc}
 c10393c:	e24cb004 	sub	fp, ip, #4
 c103940:	e24dd010 	sub	sp, sp, #16
 c103944:	e1a03000 	mov	r3, r0
 c103948:	e54b3015 	strb	r3, [fp, #-21]	; 0xffffffeb
	struct port_stat *pst = &uport[port];
 c10394c:	e55b2015 	ldrb	r2, [fp, #-21]	; 0xffffffeb
 c103950:	e1a03002 	mov	r3, r2
 c103954:	e1a03203 	lsl	r3, r3, #4
 c103958:	e0623003 	rsb	r3, r2, r3
 c10395c:	e1a03183 	lsl	r3, r3, #3
 c103960:	e1a02003 	mov	r2, r3
 c103964:	e59f30c4 	ldr	r3, [pc, #196]	; c103a30 <uart_dotxint+0xfc>
 c103968:	e0823003 	add	r3, r2, r3
 c10396c:	e50b3010 	str	r3, [fp, #-16]

	if (*pst->sendP != '\0' ) {
 c103970:	e51b3010 	ldr	r3, [fp, #-16]
 c103974:	e5933070 	ldr	r3, [r3, #112]	; 0x70
 c103978:	e5d33000 	ldrb	r3, [r3]
 c10397c:	e3530000 	cmp	r3, #0
 c103980:	0a000017 	beq	c1039e4 <uart_dotxint+0xb0>
		if (*pst->sendP == '\n') {
 c103984:	e51b3010 	ldr	r3, [fp, #-16]
 c103988:	e5933070 	ldr	r3, [r3, #112]	; 0x70
 c10398c:	e5d33000 	ldrb	r3, [r3]
 c103990:	e353000a 	cmp	r3, #10
 c103994:	1a000006 	bne	c1039b4 <uart_dotxint+0x80>
			 * extra en este caso
			 */
			//COMPLETAR: enviar \r y esperar a que el puerto quede libre para
			//enviar

			uart_write(port, '\r');	
 c103998:	e55b3015 	ldrb	r3, [fp, #-21]	; 0xffffffeb
 c10399c:	e1a00003 	mov	r0, r3
 c1039a0:	e3a0100d 	mov	r1, #13
 c1039a4:	ebffff2a 	bl	c103654 <uart_write>
			uart_tx_ready(port);
 c1039a8:	e55b3015 	ldrb	r3, [fp, #-21]	; 0xffffffeb
 c1039ac:	e1a00003 	mov	r0, r3
 c1039b0:	ebffff08 	bl	c1035d8 <uart_tx_ready>
		}
		uart_write(port, *pst->sendP);
 c1039b4:	e51b3010 	ldr	r3, [fp, #-16]
 c1039b8:	e5933070 	ldr	r3, [r3, #112]	; 0x70
 c1039bc:	e5d33000 	ldrb	r3, [r3]
 c1039c0:	e55b2015 	ldrb	r2, [fp, #-21]	; 0xffffffeb
 c1039c4:	e1a00002 	mov	r0, r2
 c1039c8:	e1a01003 	mov	r1, r3
 c1039cc:	ebffff20 	bl	c103654 <uart_write>
		//COMPLETAR: enviar el carácter apuntado por sendP e incrementar dicho
		//puntero
		pst -> sendP++;
 c1039d0:	e51b3010 	ldr	r3, [fp, #-16]
 c1039d4:	e5933070 	ldr	r3, [r3, #112]	; 0x70
 c1039d8:	e2832001 	add	r2, r3, #1
 c1039dc:	e51b3010 	ldr	r3, [fp, #-16]
 c1039e0:	e5832070 	str	r2, [r3, #112]	; 0x70
	}

	if (*pst->sendP == '\0') {
 c1039e4:	e51b3010 	ldr	r3, [fp, #-16]
 c1039e8:	e5933070 	ldr	r3, [r3, #112]	; 0x70
 c1039ec:	e5d33000 	ldrb	r3, [r3]
 c1039f0:	e3530000 	cmp	r3, #0
 c1039f4:	1a00000a 	bne	c103a24 <uart_dotxint+0xf0>
		//COMPLETAR: si hemos llegado al final de la cadena de caracteres
		// deshabilitamos la línea de interrupción por transmisión del puerto
		// y ponemos el puntero sendP a NULL
		if(port == 0){
 c1039f8:	e55b3015 	ldrb	r3, [fp, #-21]	; 0xffffffeb
 c1039fc:	e3530000 	cmp	r3, #0
 c103a00:	1a000002 	bne	c103a10 <uart_dotxint+0xdc>
		ic_disable(3);
 c103a04:	e3a00003 	mov	r0, #3
 c103a08:	ebfff7d8 	bl	c101970 <ic_disable>
 c103a0c:	ea000001 	b	c103a18 <uart_dotxint+0xe4>
		}
		else{
		ic_disable(2);
 c103a10:	e3a00002 	mov	r0, #2
 c103a14:	ebfff7d5 	bl	c101970 <ic_disable>
		}
		pst->sendP = NULL;
 c103a18:	e51b3010 	ldr	r3, [fp, #-16]
 c103a1c:	e3a02000 	mov	r2, #0
 c103a20:	e5832070 	str	r2, [r3, #112]	; 0x70
	}
}
 c103a24:	e24bd00c 	sub	sp, fp, #12
 c103a28:	e89d6800 	ldm	sp, {fp, sp, lr}
 c103a2c:	e12fff1e 	bx	lr
 c103a30:	0c100ba0 	.word	0x0c100ba0

0c103a34 <Uart0_TxInt>:

/* ISR de transmisión por el puerto 0 */
void Uart0_TxInt(void)
{
 c103a34:	e52dc004 	push	{ip}		; (str ip, [sp, #-4]!)
 c103a38:	e1a0c00d 	mov	ip, sp
 c103a3c:	e92dd80f 	push	{r0, r1, r2, r3, fp, ip, lr, pc}
 c103a40:	e24cb004 	sub	fp, ip, #4
	uart_dotxint(UART0);
 c103a44:	e3a00000 	mov	r0, #0
 c103a48:	ebffffb9 	bl	c103934 <uart_dotxint>
	
	ic_cleanflag(3);//COMPLETAR: borrar el flag de interrupción por transmisión en el puerto 0
 c103a4c:	e3a00003 	mov	r0, #3
 c103a50:	ebfff7df 	bl	c1019d4 <ic_cleanflag>
}
 c103a54:	e24bd01c 	sub	sp, fp, #28
 c103a58:	e89d680f 	ldm	sp, {r0, r1, r2, r3, fp, sp, lr}
 c103a5c:	e49dc004 	pop	{ip}		; (ldr ip, [sp], #4)
 c103a60:	e25ef004 	subs	pc, lr, #4

0c103a64 <Uart1_TxInt>:

/* ISR de transmisión por el puerto 1 */
void Uart1_TxInt(void)
{
 c103a64:	e52dc004 	push	{ip}		; (str ip, [sp, #-4]!)
 c103a68:	e1a0c00d 	mov	ip, sp
 c103a6c:	e92dd80f 	push	{r0, r1, r2, r3, fp, ip, lr, pc}
 c103a70:	e24cb004 	sub	fp, ip, #4
	uart_dotxint(UART1);
 c103a74:	e3a00001 	mov	r0, #1
 c103a78:	ebffffad 	bl	c103934 <uart_dotxint>
	
	//COMPLETAR: borrar el flag de interrupción por transmisión en el puerto 1
	ic_cleanflag(2);
 c103a7c:	e3a00002 	mov	r0, #2
 c103a80:	ebfff7d3 	bl	c1019d4 <ic_cleanflag>
}
 c103a84:	e24bd01c 	sub	sp, fp, #28
 c103a88:	e89d680f 	ldm	sp, {r0, r1, r2, r3, fp, sp, lr}
 c103a8c:	e49dc004 	pop	{ip}		; (ldr ip, [sp], #4)
 c103a90:	e25ef004 	subs	pc, lr, #4

0c103a94 <uart_getch>:

/* uart_getch: función bloqueante (síncrona) para la recepción de un byte por el
 * puerto serie
 */
int uart_getch(enum UART port, char *c)
{
 c103a94:	e1a0c00d 	mov	ip, sp
 c103a98:	e92dd800 	push	{fp, ip, lr, pc}
 c103a9c:	e24cb004 	sub	fp, ip, #4
 c103aa0:	e24dd008 	sub	sp, sp, #8
 c103aa4:	e1a03000 	mov	r3, r0
 c103aa8:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
 c103aac:	e54b300d 	strb	r3, [fp, #-13]
	if (port < 0 || port > 1)
 c103ab0:	e55b300d 	ldrb	r3, [fp, #-13]
 c103ab4:	e3530001 	cmp	r3, #1
 c103ab8:	9a000001 	bls	c103ac4 <uart_getch+0x30>
		return -1;
 c103abc:	e3e03000 	mvn	r3, #0
 c103ac0:	ea000029 	b	c103b6c <uart_getch+0xd8>

	switch (uport[port].rxmode) {
 c103ac4:	e55b200d 	ldrb	r2, [fp, #-13]
 c103ac8:	e59f10ac 	ldr	r1, [pc, #172]	; c103b7c <uart_getch+0xe8>
 c103acc:	e1a03002 	mov	r3, r2
 c103ad0:	e1a03203 	lsl	r3, r3, #4
 c103ad4:	e0623003 	rsb	r3, r2, r3
 c103ad8:	e1a03183 	lsl	r3, r3, #3
 c103adc:	e0813003 	add	r3, r1, r3
 c103ae0:	e5d33000 	ldrb	r3, [r3]
 c103ae4:	e3530002 	cmp	r3, #2
 c103ae8:	0a000012 	beq	c103b38 <uart_getch+0xa4>
 c103aec:	e3530003 	cmp	r3, #3
 c103af0:	0a000018 	beq	c103b58 <uart_getch+0xc4>
 c103af4:	e3530001 	cmp	r3, #1
 c103af8:	1a000018 	bne	c103b60 <uart_getch+0xcc>
		case POLL:
			// COMPLETAR: Esperar a que el puerto port haya recibido un byte
			uart_rx_ready(port);
 c103afc:	e55b300d 	ldrb	r3, [fp, #-13]
 c103b00:	e1a00003 	mov	r0, r3
 c103b04:	ebfffe94 	bl	c10355c <uart_rx_ready>
			// Leer dicho byte y escribirlo en la dirección apuntada por c
			c = uart_read(port);	
 c103b08:	e55b300d 	ldrb	r3, [fp, #-13]
 c103b0c:	e1a00003 	mov	r0, r3
 c103b10:	ebfffee6 	bl	c1036b0 <uart_read>
 c103b14:	e1a03000 	mov	r3, r0
 c103b18:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
			uart_write(port,*c);
 c103b1c:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
 c103b20:	e5d33000 	ldrb	r3, [r3]
 c103b24:	e55b200d 	ldrb	r2, [fp, #-13]
 c103b28:	e1a00002 	mov	r0, r2
 c103b2c:	e1a01003 	mov	r1, r3
 c103b30:	ebfffec7 	bl	c103654 <uart_write>

			break;
 c103b34:	ea00000b 	b	c103b68 <uart_getch+0xd4>

		case INT:
			// COMPLETAR: Leer el primer byte del buffer de recepción del puerto
			// y copiarlo en la dirección apuntada por c
			*c = uart_readfrombuf(port);
 c103b38:	e55b300d 	ldrb	r3, [fp, #-13]
 c103b3c:	e1a00003 	mov	r0, r3
 c103b40:	ebffff32 	bl	c103810 <uart_readfrombuf>
 c103b44:	e1a03000 	mov	r3, r0
 c103b48:	e1a02003 	mov	r2, r3
 c103b4c:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
 c103b50:	e5c32000 	strb	r2, [r3]
			break;
 c103b54:	ea000003 	b	c103b68 <uart_getch+0xd4>

		case DMA:
			//NO HACER
			return -1;
 c103b58:	e3e03000 	mvn	r3, #0
 c103b5c:	ea000002 	b	c103b6c <uart_getch+0xd8>
			break;

		default:
			return -1;
 c103b60:	e3e03000 	mvn	r3, #0
 c103b64:	ea000000 	b	c103b6c <uart_getch+0xd8>
	}

	return 0;
 c103b68:	e3a03000 	mov	r3, #0
}
 c103b6c:	e1a00003 	mov	r0, r3
 c103b70:	e24bd00c 	sub	sp, fp, #12
 c103b74:	e89d6800 	ldm	sp, {fp, sp, lr}
 c103b78:	e12fff1e 	bx	lr
 c103b7c:	0c100ba0 	.word	0x0c100ba0

0c103b80 <uart_sendch>:

/* uart_sendch: función bloqueante (síncrona) para la transmisión de un byte por el
 * puerto serie
 */
int uart_sendch(enum UART port, char c)
{
 c103b80:	e1a0c00d 	mov	ip, sp
 c103b84:	e92dd800 	push	{fp, ip, lr, pc}
 c103b88:	e24cb004 	sub	fp, ip, #4
 c103b8c:	e24dd010 	sub	sp, sp, #16
 c103b90:	e1a02000 	mov	r2, r0
 c103b94:	e1a03001 	mov	r3, r1
 c103b98:	e54b2015 	strb	r2, [fp, #-21]	; 0xffffffeb
 c103b9c:	e54b3016 	strb	r3, [fp, #-22]	; 0xffffffea
	char localB[2] = {0};
 c103ba0:	e3a03000 	mov	r3, #0
 c103ba4:	e14b31b0 	strh	r3, [fp, #-16]

	if (port < 0 || port > 1)
 c103ba8:	e55b3015 	ldrb	r3, [fp, #-21]	; 0xffffffeb
 c103bac:	e3530001 	cmp	r3, #1
 c103bb0:	9a000001 	bls	c103bbc <uart_sendch+0x3c>
		return -1;
 c103bb4:	e3e03000 	mvn	r3, #0
 c103bb8:	ea00002d 	b	c103c74 <uart_sendch+0xf4>

	switch (uport[port].txmode) {
 c103bbc:	e55b2015 	ldrb	r2, [fp, #-21]	; 0xffffffeb
 c103bc0:	e59f10bc 	ldr	r1, [pc, #188]	; c103c84 <uart_sendch+0x104>
 c103bc4:	e1a03002 	mov	r3, r2
 c103bc8:	e1a03203 	lsl	r3, r3, #4
 c103bcc:	e0623003 	rsb	r3, r2, r3
 c103bd0:	e1a03183 	lsl	r3, r3, #3
 c103bd4:	e0813003 	add	r3, r1, r3
 c103bd8:	e5d33001 	ldrb	r3, [r3, #1]
 c103bdc:	e3530002 	cmp	r3, #2
 c103be0:	0a000016 	beq	c103c40 <uart_sendch+0xc0>
 c103be4:	e3530003 	cmp	r3, #3
 c103be8:	0a00001c 	beq	c103c60 <uart_sendch+0xe0>
 c103bec:	e3530001 	cmp	r3, #1
 c103bf0:	1a00001c 	bne	c103c68 <uart_sendch+0xe8>
			 * 2. Si el byte es \n envíamos primero \r y volvemos a esperar a
			 *    que está listo para transmitir
			 * 3. Enviamos el carácter c por el puerto
			 */
			//1
			uart_tx_ready(port);
 c103bf4:	e55b3015 	ldrb	r3, [fp, #-21]	; 0xffffffeb
 c103bf8:	e1a00003 	mov	r0, r3
 c103bfc:	ebfffe75 	bl	c1035d8 <uart_tx_ready>
			//2

			if(c == '\n'){
 c103c00:	e55b3016 	ldrb	r3, [fp, #-22]	; 0xffffffea
 c103c04:	e353000a 	cmp	r3, #10
 c103c08:	1a000006 	bne	c103c28 <uart_sendch+0xa8>
				uart_write(port, '\r');
 c103c0c:	e55b3015 	ldrb	r3, [fp, #-21]	; 0xffffffeb
 c103c10:	e1a00003 	mov	r0, r3
 c103c14:	e3a0100d 	mov	r1, #13
 c103c18:	ebfffe8d 	bl	c103654 <uart_write>
				uart_tx_ready(port);
 c103c1c:	e55b3015 	ldrb	r3, [fp, #-21]	; 0xffffffeb
 c103c20:	e1a00003 	mov	r0, r3
 c103c24:	ebfffe6b 	bl	c1035d8 <uart_tx_ready>
			}
			uart_write(port,c);
 c103c28:	e55b2015 	ldrb	r2, [fp, #-21]	; 0xffffffeb
 c103c2c:	e55b3016 	ldrb	r3, [fp, #-22]	; 0xffffffea
 c103c30:	e1a00002 	mov	r0, r2
 c103c34:	e1a01003 	mov	r1, r3
 c103c38:	ebfffe85 	bl	c103654 <uart_write>
			break;
 c103c3c:	ea00000b 	b	c103c70 <uart_sendch+0xf0>

		case INT:
			localB[0] = c;
 c103c40:	e55b3016 	ldrb	r3, [fp, #-22]	; 0xffffffea
 c103c44:	e54b3010 	strb	r3, [fp, #-16]
			uart_send_str(port, localB);
 c103c48:	e55b2015 	ldrb	r2, [fp, #-21]	; 0xffffffeb
 c103c4c:	e24b3010 	sub	r3, fp, #16
 c103c50:	e1a00002 	mov	r0, r2
 c103c54:	e1a01003 	mov	r1, r3
 c103c58:	eb00000a 	bl	c103c88 <uart_send_str>
			break;
 c103c5c:	ea000003 	b	c103c70 <uart_sendch+0xf0>

		case DMA:
			// NO HACER
			return -1;
 c103c60:	e3e03000 	mvn	r3, #0
 c103c64:	ea000002 	b	c103c74 <uart_sendch+0xf4>
			break;

		default:
			return -1;
 c103c68:	e3e03000 	mvn	r3, #0
 c103c6c:	ea000000 	b	c103c74 <uart_sendch+0xf4>
	}

	return 0;
 c103c70:	e3a03000 	mov	r3, #0
}
 c103c74:	e1a00003 	mov	r0, r3
 c103c78:	e24bd00c 	sub	sp, fp, #12
 c103c7c:	e89d6800 	ldm	sp, {fp, sp, lr}
 c103c80:	e12fff1e 	bx	lr
 c103c84:	0c100ba0 	.word	0x0c100ba0

0c103c88 <uart_send_str>:

/* uart_send_str: función bloqueante (síncrona) para la transmisión de una
 * cadena de caracteres por el puerto serie
 */
int uart_send_str(enum UART port, char *str)
{
 c103c88:	e1a0c00d 	mov	ip, sp
 c103c8c:	e92dd800 	push	{fp, ip, lr, pc}
 c103c90:	e24cb004 	sub	fp, ip, #4
 c103c94:	e24dd008 	sub	sp, sp, #8
 c103c98:	e1a03000 	mov	r3, r0
 c103c9c:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
 c103ca0:	e54b300d 	strb	r3, [fp, #-13]
	int line;

	if (port < 0 || port > 1)
 c103ca4:	e55b300d 	ldrb	r3, [fp, #-13]
 c103ca8:	e3530001 	cmp	r3, #1
 c103cac:	9a000001 	bls	c103cb8 <uart_send_str+0x30>
		return -1;
 c103cb0:	e3e03000 	mvn	r3, #0
 c103cb4:	ea00003a 	b	c103da4 <uart_send_str+0x11c>

	switch (uport[port].txmode) {
 c103cb8:	e55b200d 	ldrb	r2, [fp, #-13]
 c103cbc:	e59f10f0 	ldr	r1, [pc, #240]	; c103db4 <uart_send_str+0x12c>
 c103cc0:	e1a03002 	mov	r3, r2
 c103cc4:	e1a03203 	lsl	r3, r3, #4
 c103cc8:	e0623003 	rsb	r3, r2, r3
 c103ccc:	e1a03183 	lsl	r3, r3, #3
 c103cd0:	e0813003 	add	r3, r1, r3
 c103cd4:	e5d33001 	ldrb	r3, [r3, #1]
 c103cd8:	e3530002 	cmp	r3, #2
 c103cdc:	0a00000a 	beq	c103d0c <uart_send_str+0x84>
 c103ce0:	e3530003 	cmp	r3, #3
 c103ce4:	0a000029 	beq	c103d90 <uart_send_str+0x108>
 c103ce8:	e3530001 	cmp	r3, #1
 c103cec:	1a000029 	bne	c103d98 <uart_send_str+0x110>
		case POLL:
			//COMPLETAR: usar uart_sendch para enviar todos los bytes de la
			//cadena apuntada por str
			//BUCLE HASTA QUE STR SEA NULL DENTRO INCREMENTAR STR
				uart_sendch( port, *str);
 c103cf0:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
 c103cf4:	e5d33000 	ldrb	r3, [r3]
 c103cf8:	e55b200d 	ldrb	r2, [fp, #-13]
 c103cfc:	e1a00002 	mov	r0, r2
 c103d00:	e1a01003 	mov	r1, r3
 c103d04:	ebffff9d 	bl	c103b80 <uart_sendch>
			break;
 c103d08:	ea000024 	b	c103da0 <uart_send_str+0x118>
			 * 2. Habilitar las interrupciones por transmisión en el puerto
			 * 3. Esperar a que se complete el envío (la ISR pondrá a NULL el
			 *    puntero de envío sendP)
			 */
			//1
			uport[port].sendP = str;
 c103d0c:	e55b200d 	ldrb	r2, [fp, #-13]
 c103d10:	e59f009c 	ldr	r0, [pc, #156]	; c103db4 <uart_send_str+0x12c>
 c103d14:	e3a01070 	mov	r1, #112	; 0x70
 c103d18:	e1a03002 	mov	r3, r2
 c103d1c:	e1a03203 	lsl	r3, r3, #4
 c103d20:	e0623003 	rsb	r3, r2, r3
 c103d24:	e1a03183 	lsl	r3, r3, #3
 c103d28:	e0803003 	add	r3, r0, r3
 c103d2c:	e0833001 	add	r3, r3, r1
 c103d30:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
 c103d34:	e5832000 	str	r2, [r3]
			//2
			if(port == 0){
 c103d38:	e55b300d 	ldrb	r3, [fp, #-13]
 c103d3c:	e3530000 	cmp	r3, #0
 c103d40:	1a000002 	bne	c103d50 <uart_send_str+0xc8>
				ic_enable(3);
 c103d44:	e3a00003 	mov	r0, #3
 c103d48:	ebfff6e9 	bl	c1018f4 <ic_enable>
				}
			else{
				ic_enable(2);
			}
			//3
			while(uport[port].sendP != NULL){
 c103d4c:	ea000002 	b	c103d5c <uart_send_str+0xd4>
			//2
			if(port == 0){
				ic_enable(3);
				}
			else{
				ic_enable(2);
 c103d50:	e3a00002 	mov	r0, #2
 c103d54:	ebfff6e6 	bl	c1018f4 <ic_enable>
			}
			//3
			while(uport[port].sendP != NULL){
 c103d58:	e1a00000 	nop			; (mov r0, r0)
 c103d5c:	e55b200d 	ldrb	r2, [fp, #-13]
 c103d60:	e59f004c 	ldr	r0, [pc, #76]	; c103db4 <uart_send_str+0x12c>
 c103d64:	e3a01070 	mov	r1, #112	; 0x70
 c103d68:	e1a03002 	mov	r3, r2
 c103d6c:	e1a03203 	lsl	r3, r3, #4
 c103d70:	e0623003 	rsb	r3, r2, r3
 c103d74:	e1a03183 	lsl	r3, r3, #3
 c103d78:	e0803003 	add	r3, r0, r3
 c103d7c:	e0833001 	add	r3, r3, r1
 c103d80:	e5933000 	ldr	r3, [r3]
 c103d84:	e3530000 	cmp	r3, #0
 c103d88:	1afffff3 	bne	c103d5c <uart_send_str+0xd4>

			}

			break;
 c103d8c:	ea000003 	b	c103da0 <uart_send_str+0x118>

		case DMA:
			//NO HACER
			return -1;
 c103d90:	e3e03000 	mvn	r3, #0
 c103d94:	ea000002 	b	c103da4 <uart_send_str+0x11c>
			break;

		default:
			return -1;
 c103d98:	e3e03000 	mvn	r3, #0
 c103d9c:	ea000000 	b	c103da4 <uart_send_str+0x11c>
	}

	return 0;
 c103da0:	e3a03000 	mov	r3, #0

}
 c103da4:	e1a00003 	mov	r0, r3
 c103da8:	e24bd00c 	sub	sp, fp, #12
 c103dac:	e89d6800 	ldm	sp, {fp, sp, lr}
 c103db0:	e12fff1e 	bx	lr
 c103db4:	0c100ba0 	.word	0x0c100ba0

0c103db8 <uart_printf>:

/* uart_printf: función bloqueante (síncrona) para la transmisión de una
 * cadena de caracteres con formato por el puerto serie
 */
void uart_printf(enum UART port, char *fmt, ...)
{
 c103db8:	e1a0c00d 	mov	ip, sp
 c103dbc:	e92d000e 	push	{r1, r2, r3}
 c103dc0:	e92dd800 	push	{fp, ip, lr, pc}
 c103dc4:	e24cb010 	sub	fp, ip, #16
 c103dc8:	e24ddf45 	sub	sp, sp, #276	; 0x114
 c103dcc:	e1a03000 	mov	r3, r0
 c103dd0:	e54b3119 	strb	r3, [fp, #-281]	; 0xfffffee7
    va_list ap;
    char str[256];

    va_start(ap, fmt);
 c103dd4:	e28b3008 	add	r3, fp, #8
 c103dd8:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
    vsnprintf(str, 256, fmt, ap);
 c103ddc:	e24b3f45 	sub	r3, fp, #276	; 0x114
 c103de0:	e1a00003 	mov	r0, r3
 c103de4:	e3a01c01 	mov	r1, #256	; 0x100
 c103de8:	e59b2004 	ldr	r2, [fp, #4]
 c103dec:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
 c103df0:	eb00030f 	bl	c104a34 <vsnprintf>
    uart_send_str(port, str);
 c103df4:	e55b2119 	ldrb	r2, [fp, #-281]	; 0xfffffee7
 c103df8:	e24b3f45 	sub	r3, fp, #276	; 0x114
 c103dfc:	e1a00002 	mov	r0, r2
 c103e00:	e1a01003 	mov	r1, r3
 c103e04:	ebffff9f 	bl	c103c88 <uart_send_str>
    va_end(ap);
}
 c103e08:	e24bd00c 	sub	sp, fp, #12
 c103e0c:	e89d6800 	ldm	sp, {fp, sp, lr}
 c103e10:	e12fff1e 	bx	lr
 c103e14:	e1a00000 	nop			; (mov r0, r0)

0c103e18 <Delay>:

void Delay(int time)
// time=0: adjust the Delay function by WatchDog timer.//
// time>0: the number of loop time//
// 100us resolution.//
{
 c103e18:	e1a0c00d 	mov	ip, sp
 c103e1c:	e92dd800 	push	{fp, ip, lr, pc}
 c103e20:	e24cb004 	sub	fp, ip, #4
 c103e24:	e24dd010 	sub	sp, sp, #16
 c103e28:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
	int i,adjust=0;
 c103e2c:	e3a03000 	mov	r3, #0
 c103e30:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
	if(time==0)
 c103e34:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
 c103e38:	e3530000 	cmp	r3, #0
 c103e3c:	1a000021 	bne	c103ec8 <Delay+0xb0>
	{
		time=200;
 c103e40:	e3a030c8 	mov	r3, #200	; 0xc8
 c103e44:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
		adjust=1;
 c103e48:	e3a03001 	mov	r3, #1
 c103e4c:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
		delayLoopCount=400;
 c103e50:	e59f30d8 	ldr	r3, [pc, #216]	; c103f30 <Delay+0x118>
 c103e54:	e3a02e19 	mov	r2, #400	; 0x190
 c103e58:	e5832000 	str	r2, [r3]
		rWTCON=((MCLK/1000000-1)<<8)|(2<<3);	// 1M/64,Watch-dog,nRESET,interrupt disable//
 c103e5c:	e59f30d0 	ldr	r3, [pc, #208]	; c103f34 <Delay+0x11c>
 c103e60:	e59f20d0 	ldr	r2, [pc, #208]	; c103f38 <Delay+0x120>
 c103e64:	e5832000 	str	r2, [r3]
		rWTDAT=0xffff;
 c103e68:	e59f30cc 	ldr	r3, [pc, #204]	; c103f3c <Delay+0x124>
 c103e6c:	e59f20cc 	ldr	r2, [pc, #204]	; c103f40 <Delay+0x128>
 c103e70:	e5832000 	str	r2, [r3]
		rWTCNT=0xffff;
 c103e74:	e59f30c8 	ldr	r3, [pc, #200]	; c103f44 <Delay+0x12c>
 c103e78:	e59f20c0 	ldr	r2, [pc, #192]	; c103f40 <Delay+0x128>
 c103e7c:	e5832000 	str	r2, [r3]
		rWTCON=((MCLK/1000000-1)<<8)|(2<<3)|(1<<5); // 1M/64,Watch-dog enable,nRESET,interrupt disable //
 c103e80:	e59f30ac 	ldr	r3, [pc, #172]	; c103f34 <Delay+0x11c>
 c103e84:	e59f20bc 	ldr	r2, [pc, #188]	; c103f48 <Delay+0x130>
 c103e88:	e5832000 	str	r2, [r3]
	}
	for(;time>0;time--)
 c103e8c:	ea00000d 	b	c103ec8 <Delay+0xb0>
		for(i=0;i<delayLoopCount;i++);
 c103e90:	e3a03000 	mov	r3, #0
 c103e94:	e50b3010 	str	r3, [fp, #-16]
 c103e98:	ea000002 	b	c103ea8 <Delay+0x90>
 c103e9c:	e51b3010 	ldr	r3, [fp, #-16]
 c103ea0:	e2833001 	add	r3, r3, #1
 c103ea4:	e50b3010 	str	r3, [fp, #-16]
 c103ea8:	e59f3080 	ldr	r3, [pc, #128]	; c103f30 <Delay+0x118>
 c103eac:	e5933000 	ldr	r3, [r3]
 c103eb0:	e51b2010 	ldr	r2, [fp, #-16]
 c103eb4:	e1520003 	cmp	r2, r3
 c103eb8:	bafffff7 	blt	c103e9c <Delay+0x84>
		rWTCON=((MCLK/1000000-1)<<8)|(2<<3);	// 1M/64,Watch-dog,nRESET,interrupt disable//
		rWTDAT=0xffff;
		rWTCNT=0xffff;
		rWTCON=((MCLK/1000000-1)<<8)|(2<<3)|(1<<5); // 1M/64,Watch-dog enable,nRESET,interrupt disable //
	}
	for(;time>0;time--)
 c103ebc:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
 c103ec0:	e2433001 	sub	r3, r3, #1
 c103ec4:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
 c103ec8:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
 c103ecc:	e3530000 	cmp	r3, #0
 c103ed0:	caffffee 	bgt	c103e90 <Delay+0x78>
		for(i=0;i<delayLoopCount;i++);
	if(adjust==1)
 c103ed4:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
 c103ed8:	e3530001 	cmp	r3, #1
 c103edc:	1a000010 	bne	c103f24 <Delay+0x10c>
	{
		rWTCON=((MCLK/1000000-1)<<8)|(2<<3);
 c103ee0:	e59f304c 	ldr	r3, [pc, #76]	; c103f34 <Delay+0x11c>
 c103ee4:	e59f204c 	ldr	r2, [pc, #76]	; c103f38 <Delay+0x120>
 c103ee8:	e5832000 	str	r2, [r3]
		i=0xffff-rWTCNT;   //  1count/16us?????????//
 c103eec:	e59f3050 	ldr	r3, [pc, #80]	; c103f44 <Delay+0x12c>
 c103ef0:	e5933000 	ldr	r3, [r3]
 c103ef4:	e2633cff 	rsb	r3, r3, #65280	; 0xff00
 c103ef8:	e28330ff 	add	r3, r3, #255	; 0xff
 c103efc:	e50b3010 	str	r3, [fp, #-16]
		delayLoopCount=8000000/(i*64);	//400*100/(i*64/200)   //
 c103f00:	e51b3010 	ldr	r3, [fp, #-16]
 c103f04:	e1a03303 	lsl	r3, r3, #6
 c103f08:	e59f003c 	ldr	r0, [pc, #60]	; c103f4c <Delay+0x134>
 c103f0c:	e1a01003 	mov	r1, r3
 c103f10:	eb00000e 	bl	c103f50 <__aeabi_idiv>
 c103f14:	e1a03000 	mov	r3, r0
 c103f18:	e1a02003 	mov	r2, r3
 c103f1c:	e59f300c 	ldr	r3, [pc, #12]	; c103f30 <Delay+0x118>
 c103f20:	e5832000 	str	r2, [r3]
	}
}
 c103f24:	e24bd00c 	sub	sp, fp, #12
 c103f28:	e89d6800 	ldm	sp, {fp, sp, lr}
 c103f2c:	e12fff1e 	bx	lr
 c103f30:	0c100070 	.word	0x0c100070
 c103f34:	01d30000 	.word	0x01d30000
 c103f38:	00003f10 	.word	0x00003f10
 c103f3c:	01d30004 	.word	0x01d30004
 c103f40:	0000ffff 	.word	0x0000ffff
 c103f44:	01d30008 	.word	0x01d30008
 c103f48:	00003f30 	.word	0x00003f30
 c103f4c:	007a1200 	.word	0x007a1200

0c103f50 <__aeabi_idiv>:
 c103f50:	e3510000 	cmp	r1, #0
 c103f54:	0a000043 	beq	c104068 <.divsi3_skip_div0_test+0x110>

0c103f58 <.divsi3_skip_div0_test>:
 c103f58:	e020c001 	eor	ip, r0, r1
 c103f5c:	42611000 	rsbmi	r1, r1, #0
 c103f60:	e2512001 	subs	r2, r1, #1
 c103f64:	0a000027 	beq	c104008 <.divsi3_skip_div0_test+0xb0>
 c103f68:	e1b03000 	movs	r3, r0
 c103f6c:	42603000 	rsbmi	r3, r0, #0
 c103f70:	e1530001 	cmp	r3, r1
 c103f74:	9a000026 	bls	c104014 <.divsi3_skip_div0_test+0xbc>
 c103f78:	e1110002 	tst	r1, r2
 c103f7c:	0a000028 	beq	c104024 <.divsi3_skip_div0_test+0xcc>
 c103f80:	e311020e 	tst	r1, #-536870912	; 0xe0000000
 c103f84:	01a01181 	lsleq	r1, r1, #3
 c103f88:	03a02008 	moveq	r2, #8
 c103f8c:	13a02001 	movne	r2, #1
 c103f90:	e3510201 	cmp	r1, #268435456	; 0x10000000
 c103f94:	31510003 	cmpcc	r1, r3
 c103f98:	31a01201 	lslcc	r1, r1, #4
 c103f9c:	31a02202 	lslcc	r2, r2, #4
 c103fa0:	3afffffa 	bcc	c103f90 <.divsi3_skip_div0_test+0x38>
 c103fa4:	e3510102 	cmp	r1, #-2147483648	; 0x80000000
 c103fa8:	31510003 	cmpcc	r1, r3
 c103fac:	31a01081 	lslcc	r1, r1, #1
 c103fb0:	31a02082 	lslcc	r2, r2, #1
 c103fb4:	3afffffa 	bcc	c103fa4 <.divsi3_skip_div0_test+0x4c>
 c103fb8:	e3a00000 	mov	r0, #0
 c103fbc:	e1530001 	cmp	r3, r1
 c103fc0:	20433001 	subcs	r3, r3, r1
 c103fc4:	21800002 	orrcs	r0, r0, r2
 c103fc8:	e15300a1 	cmp	r3, r1, lsr #1
 c103fcc:	204330a1 	subcs	r3, r3, r1, lsr #1
 c103fd0:	218000a2 	orrcs	r0, r0, r2, lsr #1
 c103fd4:	e1530121 	cmp	r3, r1, lsr #2
 c103fd8:	20433121 	subcs	r3, r3, r1, lsr #2
 c103fdc:	21800122 	orrcs	r0, r0, r2, lsr #2
 c103fe0:	e15301a1 	cmp	r3, r1, lsr #3
 c103fe4:	204331a1 	subcs	r3, r3, r1, lsr #3
 c103fe8:	218001a2 	orrcs	r0, r0, r2, lsr #3
 c103fec:	e3530000 	cmp	r3, #0
 c103ff0:	11b02222 	lsrsne	r2, r2, #4
 c103ff4:	11a01221 	lsrne	r1, r1, #4
 c103ff8:	1affffef 	bne	c103fbc <.divsi3_skip_div0_test+0x64>
 c103ffc:	e35c0000 	cmp	ip, #0
 c104000:	42600000 	rsbmi	r0, r0, #0
 c104004:	e12fff1e 	bx	lr
 c104008:	e13c0000 	teq	ip, r0
 c10400c:	42600000 	rsbmi	r0, r0, #0
 c104010:	e12fff1e 	bx	lr
 c104014:	33a00000 	movcc	r0, #0
 c104018:	01a00fcc 	asreq	r0, ip, #31
 c10401c:	03800001 	orreq	r0, r0, #1
 c104020:	e12fff1e 	bx	lr
 c104024:	e3510801 	cmp	r1, #65536	; 0x10000
 c104028:	21a01821 	lsrcs	r1, r1, #16
 c10402c:	23a02010 	movcs	r2, #16
 c104030:	33a02000 	movcc	r2, #0
 c104034:	e3510c01 	cmp	r1, #256	; 0x100
 c104038:	21a01421 	lsrcs	r1, r1, #8
 c10403c:	22822008 	addcs	r2, r2, #8
 c104040:	e3510010 	cmp	r1, #16
 c104044:	21a01221 	lsrcs	r1, r1, #4
 c104048:	22822004 	addcs	r2, r2, #4
 c10404c:	e3510004 	cmp	r1, #4
 c104050:	82822003 	addhi	r2, r2, #3
 c104054:	908220a1 	addls	r2, r2, r1, lsr #1
 c104058:	e35c0000 	cmp	ip, #0
 c10405c:	e1a00233 	lsr	r0, r3, r2
 c104060:	42600000 	rsbmi	r0, r0, #0
 c104064:	e12fff1e 	bx	lr
 c104068:	e3500000 	cmp	r0, #0
 c10406c:	c3e00102 	mvngt	r0, #-2147483648	; 0x80000000
 c104070:	b3a00102 	movlt	r0, #-2147483648	; 0x80000000
 c104074:	ea000007 	b	c104098 <__aeabi_idiv0>

0c104078 <__aeabi_idivmod>:
 c104078:	e3510000 	cmp	r1, #0
 c10407c:	0afffff9 	beq	c104068 <.divsi3_skip_div0_test+0x110>
 c104080:	e92d4003 	push	{r0, r1, lr}
 c104084:	ebffffb3 	bl	c103f58 <.divsi3_skip_div0_test>
 c104088:	e8bd4006 	pop	{r1, r2, lr}
 c10408c:	e0030092 	mul	r3, r2, r0
 c104090:	e0411003 	sub	r1, r1, r3
 c104094:	e12fff1e 	bx	lr

0c104098 <__aeabi_idiv0>:
 c104098:	e12fff1e 	bx	lr

0c10409c <__aeabi_drsub>:
 c10409c:	e2211102 	eor	r1, r1, #-2147483648	; 0x80000000
 c1040a0:	ea000000 	b	c1040a8 <__adddf3>

0c1040a4 <__aeabi_dsub>:
 c1040a4:	e2233102 	eor	r3, r3, #-2147483648	; 0x80000000

0c1040a8 <__adddf3>:
 c1040a8:	e92d4030 	push	{r4, r5, lr}
 c1040ac:	e1a04081 	lsl	r4, r1, #1
 c1040b0:	e1a05083 	lsl	r5, r3, #1
 c1040b4:	e1340005 	teq	r4, r5
 c1040b8:	01300002 	teqeq	r0, r2
 c1040bc:	1194c000 	orrsne	ip, r4, r0
 c1040c0:	1195c002 	orrsne	ip, r5, r2
 c1040c4:	11f0cac4 	mvnsne	ip, r4, asr #21
 c1040c8:	11f0cac5 	mvnsne	ip, r5, asr #21
 c1040cc:	0a00008c 	beq	c104304 <__adddf3+0x25c>
 c1040d0:	e1a04aa4 	lsr	r4, r4, #21
 c1040d4:	e0745aa5 	rsbs	r5, r4, r5, lsr #21
 c1040d8:	b2655000 	rsblt	r5, r5, #0
 c1040dc:	da000006 	ble	c1040fc <__adddf3+0x54>
 c1040e0:	e0844005 	add	r4, r4, r5
 c1040e4:	e0202002 	eor	r2, r0, r2
 c1040e8:	e0213003 	eor	r3, r1, r3
 c1040ec:	e0220000 	eor	r0, r2, r0
 c1040f0:	e0231001 	eor	r1, r3, r1
 c1040f4:	e0202002 	eor	r2, r0, r2
 c1040f8:	e0213003 	eor	r3, r1, r3
 c1040fc:	e3550036 	cmp	r5, #54	; 0x36
 c104100:	88bd4030 	pophi	{r4, r5, lr}
 c104104:	812fff1e 	bxhi	lr
 c104108:	e3110102 	tst	r1, #-2147483648	; 0x80000000
 c10410c:	e1a01601 	lsl	r1, r1, #12
 c104110:	e3a0c601 	mov	ip, #1048576	; 0x100000
 c104114:	e18c1621 	orr	r1, ip, r1, lsr #12
 c104118:	0a000001 	beq	c104124 <__adddf3+0x7c>
 c10411c:	e2700000 	rsbs	r0, r0, #0
 c104120:	e2e11000 	rsc	r1, r1, #0
 c104124:	e3130102 	tst	r3, #-2147483648	; 0x80000000
 c104128:	e1a03603 	lsl	r3, r3, #12
 c10412c:	e18c3623 	orr	r3, ip, r3, lsr #12
 c104130:	0a000001 	beq	c10413c <__adddf3+0x94>
 c104134:	e2722000 	rsbs	r2, r2, #0
 c104138:	e2e33000 	rsc	r3, r3, #0
 c10413c:	e1340005 	teq	r4, r5
 c104140:	0a000069 	beq	c1042ec <__adddf3+0x244>
 c104144:	e2444001 	sub	r4, r4, #1
 c104148:	e275e020 	rsbs	lr, r5, #32
 c10414c:	ba000005 	blt	c104168 <__adddf3+0xc0>
 c104150:	e1a0ce12 	lsl	ip, r2, lr
 c104154:	e0900532 	adds	r0, r0, r2, lsr r5
 c104158:	e2a11000 	adc	r1, r1, #0
 c10415c:	e0900e13 	adds	r0, r0, r3, lsl lr
 c104160:	e0b11553 	adcs	r1, r1, r3, asr r5
 c104164:	ea000006 	b	c104184 <__adddf3+0xdc>
 c104168:	e2455020 	sub	r5, r5, #32
 c10416c:	e28ee020 	add	lr, lr, #32
 c104170:	e3520001 	cmp	r2, #1
 c104174:	e1a0ce13 	lsl	ip, r3, lr
 c104178:	238cc002 	orrcs	ip, ip, #2
 c10417c:	e0900553 	adds	r0, r0, r3, asr r5
 c104180:	e0b11fc3 	adcs	r1, r1, r3, asr #31
 c104184:	e2015102 	and	r5, r1, #-2147483648	; 0x80000000
 c104188:	5a000002 	bpl	c104198 <__adddf3+0xf0>
 c10418c:	e27cc000 	rsbs	ip, ip, #0
 c104190:	e2f00000 	rscs	r0, r0, #0
 c104194:	e2e11000 	rsc	r1, r1, #0
 c104198:	e3510601 	cmp	r1, #1048576	; 0x100000
 c10419c:	3a00000f 	bcc	c1041e0 <__adddf3+0x138>
 c1041a0:	e3510602 	cmp	r1, #2097152	; 0x200000
 c1041a4:	3a000006 	bcc	c1041c4 <__adddf3+0x11c>
 c1041a8:	e1b010a1 	lsrs	r1, r1, #1
 c1041ac:	e1b00060 	rrxs	r0, r0
 c1041b0:	e1a0c06c 	rrx	ip, ip
 c1041b4:	e2844001 	add	r4, r4, #1
 c1041b8:	e1a02a84 	lsl	r2, r4, #21
 c1041bc:	e3720501 	cmn	r2, #4194304	; 0x400000
 c1041c0:	2a00006b 	bcs	c104374 <__adddf3+0x2cc>
 c1041c4:	e35c0102 	cmp	ip, #-2147483648	; 0x80000000
 c1041c8:	01b0c0a0 	lsrseq	ip, r0, #1
 c1041cc:	e2b00000 	adcs	r0, r0, #0
 c1041d0:	e0a11a04 	adc	r1, r1, r4, lsl #20
 c1041d4:	e1811005 	orr	r1, r1, r5
 c1041d8:	e8bd4030 	pop	{r4, r5, lr}
 c1041dc:	e12fff1e 	bx	lr
 c1041e0:	e1b0c08c 	lsls	ip, ip, #1
 c1041e4:	e0b00000 	adcs	r0, r0, r0
 c1041e8:	e0a11001 	adc	r1, r1, r1
 c1041ec:	e3110601 	tst	r1, #1048576	; 0x100000
 c1041f0:	e2444001 	sub	r4, r4, #1
 c1041f4:	1afffff2 	bne	c1041c4 <__adddf3+0x11c>
 c1041f8:	e3310000 	teq	r1, #0
 c1041fc:	13a03014 	movne	r3, #20
 c104200:	03a03034 	moveq	r3, #52	; 0x34
 c104204:	01a01000 	moveq	r1, r0
 c104208:	03a00000 	moveq	r0, #0
 c10420c:	e1a02001 	mov	r2, r1
 c104210:	e3520801 	cmp	r2, #65536	; 0x10000
 c104214:	21a02822 	lsrcs	r2, r2, #16
 c104218:	22433010 	subcs	r3, r3, #16
 c10421c:	e3520c01 	cmp	r2, #256	; 0x100
 c104220:	21a02422 	lsrcs	r2, r2, #8
 c104224:	22433008 	subcs	r3, r3, #8
 c104228:	e3520010 	cmp	r2, #16
 c10422c:	21a02222 	lsrcs	r2, r2, #4
 c104230:	22433004 	subcs	r3, r3, #4
 c104234:	e3520004 	cmp	r2, #4
 c104238:	22433002 	subcs	r3, r3, #2
 c10423c:	304330a2 	subcc	r3, r3, r2, lsr #1
 c104240:	e04331a2 	sub	r3, r3, r2, lsr #3
 c104244:	e2532020 	subs	r2, r3, #32
 c104248:	aa000007 	bge	c10426c <__adddf3+0x1c4>
 c10424c:	e292200c 	adds	r2, r2, #12
 c104250:	da000004 	ble	c104268 <__adddf3+0x1c0>
 c104254:	e282c014 	add	ip, r2, #20
 c104258:	e262200c 	rsb	r2, r2, #12
 c10425c:	e1a00c11 	lsl	r0, r1, ip
 c104260:	e1a01231 	lsr	r1, r1, r2
 c104264:	ea000004 	b	c10427c <__adddf3+0x1d4>
 c104268:	e2822014 	add	r2, r2, #20
 c10426c:	d262c020 	rsble	ip, r2, #32
 c104270:	e1a01211 	lsl	r1, r1, r2
 c104274:	d1811c30 	orrle	r1, r1, r0, lsr ip
 c104278:	d1a00210 	lslle	r0, r0, r2
 c10427c:	e0544003 	subs	r4, r4, r3
 c104280:	a0811a04 	addge	r1, r1, r4, lsl #20
 c104284:	a1811005 	orrge	r1, r1, r5
 c104288:	a8bd4030 	popge	{r4, r5, lr}
 c10428c:	a12fff1e 	bxge	lr
 c104290:	e1e04004 	mvn	r4, r4
 c104294:	e254401f 	subs	r4, r4, #31
 c104298:	aa00000f 	bge	c1042dc <__adddf3+0x234>
 c10429c:	e294400c 	adds	r4, r4, #12
 c1042a0:	ca000006 	bgt	c1042c0 <__adddf3+0x218>
 c1042a4:	e2844014 	add	r4, r4, #20
 c1042a8:	e2642020 	rsb	r2, r4, #32
 c1042ac:	e1a00430 	lsr	r0, r0, r4
 c1042b0:	e1800211 	orr	r0, r0, r1, lsl r2
 c1042b4:	e1851431 	orr	r1, r5, r1, lsr r4
 c1042b8:	e8bd4030 	pop	{r4, r5, lr}
 c1042bc:	e12fff1e 	bx	lr
 c1042c0:	e264400c 	rsb	r4, r4, #12
 c1042c4:	e2642020 	rsb	r2, r4, #32
 c1042c8:	e1a00230 	lsr	r0, r0, r2
 c1042cc:	e1800411 	orr	r0, r0, r1, lsl r4
 c1042d0:	e1a01005 	mov	r1, r5
 c1042d4:	e8bd4030 	pop	{r4, r5, lr}
 c1042d8:	e12fff1e 	bx	lr
 c1042dc:	e1a00431 	lsr	r0, r1, r4
 c1042e0:	e1a01005 	mov	r1, r5
 c1042e4:	e8bd4030 	pop	{r4, r5, lr}
 c1042e8:	e12fff1e 	bx	lr
 c1042ec:	e3340000 	teq	r4, #0
 c1042f0:	e2233601 	eor	r3, r3, #1048576	; 0x100000
 c1042f4:	02211601 	eoreq	r1, r1, #1048576	; 0x100000
 c1042f8:	02844001 	addeq	r4, r4, #1
 c1042fc:	12455001 	subne	r5, r5, #1
 c104300:	eaffff8f 	b	c104144 <__adddf3+0x9c>
 c104304:	e1f0cac4 	mvns	ip, r4, asr #21
 c104308:	11f0cac5 	mvnsne	ip, r5, asr #21
 c10430c:	0a00001d 	beq	c104388 <__adddf3+0x2e0>
 c104310:	e1340005 	teq	r4, r5
 c104314:	01300002 	teqeq	r0, r2
 c104318:	0a000004 	beq	c104330 <__adddf3+0x288>
 c10431c:	e194c000 	orrs	ip, r4, r0
 c104320:	01a01003 	moveq	r1, r3
 c104324:	01a00002 	moveq	r0, r2
 c104328:	e8bd4030 	pop	{r4, r5, lr}
 c10432c:	e12fff1e 	bx	lr
 c104330:	e1310003 	teq	r1, r3
 c104334:	13a01000 	movne	r1, #0
 c104338:	13a00000 	movne	r0, #0
 c10433c:	18bd4030 	popne	{r4, r5, lr}
 c104340:	112fff1e 	bxne	lr
 c104344:	e1b0caa4 	lsrs	ip, r4, #21
 c104348:	1a000004 	bne	c104360 <__adddf3+0x2b8>
 c10434c:	e1b00080 	lsls	r0, r0, #1
 c104350:	e0b11001 	adcs	r1, r1, r1
 c104354:	23811102 	orrcs	r1, r1, #-2147483648	; 0x80000000
 c104358:	e8bd4030 	pop	{r4, r5, lr}
 c10435c:	e12fff1e 	bx	lr
 c104360:	e2944501 	adds	r4, r4, #4194304	; 0x400000
 c104364:	32811601 	addcc	r1, r1, #1048576	; 0x100000
 c104368:	38bd4030 	popcc	{r4, r5, lr}
 c10436c:	312fff1e 	bxcc	lr
 c104370:	e2015102 	and	r5, r1, #-2147483648	; 0x80000000
 c104374:	e385147f 	orr	r1, r5, #2130706432	; 0x7f000000
 c104378:	e381160f 	orr	r1, r1, #15728640	; 0xf00000
 c10437c:	e3a00000 	mov	r0, #0
 c104380:	e8bd4030 	pop	{r4, r5, lr}
 c104384:	e12fff1e 	bx	lr
 c104388:	e1f0cac4 	mvns	ip, r4, asr #21
 c10438c:	11a01003 	movne	r1, r3
 c104390:	11a00002 	movne	r0, r2
 c104394:	01f0cac5 	mvnseq	ip, r5, asr #21
 c104398:	11a03001 	movne	r3, r1
 c10439c:	11a02000 	movne	r2, r0
 c1043a0:	e1904601 	orrs	r4, r0, r1, lsl #12
 c1043a4:	01925603 	orrseq	r5, r2, r3, lsl #12
 c1043a8:	01310003 	teqeq	r1, r3
 c1043ac:	13811702 	orrne	r1, r1, #524288	; 0x80000
 c1043b0:	e8bd4030 	pop	{r4, r5, lr}
 c1043b4:	e12fff1e 	bx	lr

0c1043b8 <__aeabi_ui2d>:
 c1043b8:	e3300000 	teq	r0, #0
 c1043bc:	03a01000 	moveq	r1, #0
 c1043c0:	012fff1e 	bxeq	lr
 c1043c4:	e92d4030 	push	{r4, r5, lr}
 c1043c8:	e3a04b01 	mov	r4, #1024	; 0x400
 c1043cc:	e2844032 	add	r4, r4, #50	; 0x32
 c1043d0:	e3a05000 	mov	r5, #0
 c1043d4:	e3a01000 	mov	r1, #0
 c1043d8:	eaffff86 	b	c1041f8 <__adddf3+0x150>

0c1043dc <__aeabi_i2d>:
 c1043dc:	e3300000 	teq	r0, #0
 c1043e0:	03a01000 	moveq	r1, #0
 c1043e4:	012fff1e 	bxeq	lr
 c1043e8:	e92d4030 	push	{r4, r5, lr}
 c1043ec:	e3a04b01 	mov	r4, #1024	; 0x400
 c1043f0:	e2844032 	add	r4, r4, #50	; 0x32
 c1043f4:	e2105102 	ands	r5, r0, #-2147483648	; 0x80000000
 c1043f8:	42600000 	rsbmi	r0, r0, #0
 c1043fc:	e3a01000 	mov	r1, #0
 c104400:	eaffff7c 	b	c1041f8 <__adddf3+0x150>

0c104404 <__aeabi_f2d>:
 c104404:	e1b02080 	lsls	r2, r0, #1
 c104408:	e1a011c2 	asr	r1, r2, #3
 c10440c:	e1a01061 	rrx	r1, r1
 c104410:	e1a00e02 	lsl	r0, r2, #28
 c104414:	121234ff 	andsne	r3, r2, #-16777216	; 0xff000000
 c104418:	133304ff 	teqne	r3, #-16777216	; 0xff000000
 c10441c:	1221130e 	eorne	r1, r1, #939524096	; 0x38000000
 c104420:	112fff1e 	bxne	lr
 c104424:	e3320000 	teq	r2, #0
 c104428:	133304ff 	teqne	r3, #-16777216	; 0xff000000
 c10442c:	012fff1e 	bxeq	lr
 c104430:	e92d4030 	push	{r4, r5, lr}
 c104434:	e3a04d0e 	mov	r4, #896	; 0x380
 c104438:	e2015102 	and	r5, r1, #-2147483648	; 0x80000000
 c10443c:	e3c11102 	bic	r1, r1, #-2147483648	; 0x80000000
 c104440:	eaffff6c 	b	c1041f8 <__adddf3+0x150>

0c104444 <__aeabi_ul2d>:
 c104444:	e1902001 	orrs	r2, r0, r1
 c104448:	012fff1e 	bxeq	lr
 c10444c:	e92d4030 	push	{r4, r5, lr}
 c104450:	e3a05000 	mov	r5, #0
 c104454:	ea000006 	b	c104474 <__aeabi_l2d+0x1c>

0c104458 <__aeabi_l2d>:
 c104458:	e1902001 	orrs	r2, r0, r1
 c10445c:	012fff1e 	bxeq	lr
 c104460:	e92d4030 	push	{r4, r5, lr}
 c104464:	e2115102 	ands	r5, r1, #-2147483648	; 0x80000000
 c104468:	5a000001 	bpl	c104474 <__aeabi_l2d+0x1c>
 c10446c:	e2700000 	rsbs	r0, r0, #0
 c104470:	e2e11000 	rsc	r1, r1, #0
 c104474:	e3a04b01 	mov	r4, #1024	; 0x400
 c104478:	e2844032 	add	r4, r4, #50	; 0x32
 c10447c:	e1b0cb21 	lsrs	ip, r1, #22
 c104480:	0affff44 	beq	c104198 <__adddf3+0xf0>
 c104484:	e3a02003 	mov	r2, #3
 c104488:	e1b0c1ac 	lsrs	ip, ip, #3
 c10448c:	12822003 	addne	r2, r2, #3
 c104490:	e1b0c1ac 	lsrs	ip, ip, #3
 c104494:	12822003 	addne	r2, r2, #3
 c104498:	e08221ac 	add	r2, r2, ip, lsr #3
 c10449c:	e2623020 	rsb	r3, r2, #32
 c1044a0:	e1a0c310 	lsl	ip, r0, r3
 c1044a4:	e1a00230 	lsr	r0, r0, r2
 c1044a8:	e1800311 	orr	r0, r0, r1, lsl r3
 c1044ac:	e1a01231 	lsr	r1, r1, r2
 c1044b0:	e0844002 	add	r4, r4, r2
 c1044b4:	eaffff37 	b	c104198 <__adddf3+0xf0>

0c1044b8 <__aeabi_dmul>:
 c1044b8:	e92d4070 	push	{r4, r5, r6, lr}
 c1044bc:	e3a0c0ff 	mov	ip, #255	; 0xff
 c1044c0:	e38ccc07 	orr	ip, ip, #1792	; 0x700
 c1044c4:	e01c4a21 	ands	r4, ip, r1, lsr #20
 c1044c8:	101c5a23 	andsne	r5, ip, r3, lsr #20
 c1044cc:	1134000c 	teqne	r4, ip
 c1044d0:	1135000c 	teqne	r5, ip
 c1044d4:	0b000075 	bleq	c1046b0 <__aeabi_dmul+0x1f8>
 c1044d8:	e0844005 	add	r4, r4, r5
 c1044dc:	e0216003 	eor	r6, r1, r3
 c1044e0:	e1c11a8c 	bic	r1, r1, ip, lsl #21
 c1044e4:	e1c33a8c 	bic	r3, r3, ip, lsl #21
 c1044e8:	e1905601 	orrs	r5, r0, r1, lsl #12
 c1044ec:	11925603 	orrsne	r5, r2, r3, lsl #12
 c1044f0:	e3811601 	orr	r1, r1, #1048576	; 0x100000
 c1044f4:	e3833601 	orr	r3, r3, #1048576	; 0x100000
 c1044f8:	0a00001d 	beq	c104574 <__aeabi_dmul+0xbc>
 c1044fc:	e08ec290 	umull	ip, lr, r0, r2
 c104500:	e3a05000 	mov	r5, #0
 c104504:	e0a5e291 	umlal	lr, r5, r1, r2
 c104508:	e2062102 	and	r2, r6, #-2147483648	; 0x80000000
 c10450c:	e0a5e390 	umlal	lr, r5, r0, r3
 c104510:	e3a06000 	mov	r6, #0
 c104514:	e0a65391 	umlal	r5, r6, r1, r3
 c104518:	e33c0000 	teq	ip, #0
 c10451c:	138ee001 	orrne	lr, lr, #1
 c104520:	e24440ff 	sub	r4, r4, #255	; 0xff
 c104524:	e3560c02 	cmp	r6, #512	; 0x200
 c104528:	e2c44c03 	sbc	r4, r4, #768	; 0x300
 c10452c:	2a000002 	bcs	c10453c <__aeabi_dmul+0x84>
 c104530:	e1b0e08e 	lsls	lr, lr, #1
 c104534:	e0b55005 	adcs	r5, r5, r5
 c104538:	e0a66006 	adc	r6, r6, r6
 c10453c:	e1821586 	orr	r1, r2, r6, lsl #11
 c104540:	e1811aa5 	orr	r1, r1, r5, lsr #21
 c104544:	e1a00585 	lsl	r0, r5, #11
 c104548:	e1800aae 	orr	r0, r0, lr, lsr #21
 c10454c:	e1a0e58e 	lsl	lr, lr, #11
 c104550:	e254c0fd 	subs	ip, r4, #253	; 0xfd
 c104554:	835c0c07 	cmphi	ip, #1792	; 0x700
 c104558:	8a000011 	bhi	c1045a4 <__aeabi_dmul+0xec>
 c10455c:	e35e0102 	cmp	lr, #-2147483648	; 0x80000000
 c104560:	01b0e0a0 	lsrseq	lr, r0, #1
 c104564:	e2b00000 	adcs	r0, r0, #0
 c104568:	e0a11a04 	adc	r1, r1, r4, lsl #20
 c10456c:	e8bd4070 	pop	{r4, r5, r6, lr}
 c104570:	e12fff1e 	bx	lr
 c104574:	e2066102 	and	r6, r6, #-2147483648	; 0x80000000
 c104578:	e1861001 	orr	r1, r6, r1
 c10457c:	e1800002 	orr	r0, r0, r2
 c104580:	e0211003 	eor	r1, r1, r3
 c104584:	e05440ac 	subs	r4, r4, ip, lsr #1
 c104588:	c074500c 	rsbsgt	r5, r4, ip
 c10458c:	c1811a04 	orrgt	r1, r1, r4, lsl #20
 c104590:	c8bd4070 	popgt	{r4, r5, r6, lr}
 c104594:	c12fff1e 	bxgt	lr
 c104598:	e3811601 	orr	r1, r1, #1048576	; 0x100000
 c10459c:	e3a0e000 	mov	lr, #0
 c1045a0:	e2544001 	subs	r4, r4, #1
 c1045a4:	ca00005d 	bgt	c104720 <__aeabi_dmul+0x268>
 c1045a8:	e3740036 	cmn	r4, #54	; 0x36
 c1045ac:	d3a00000 	movle	r0, #0
 c1045b0:	d2011102 	andle	r1, r1, #-2147483648	; 0x80000000
 c1045b4:	d8bd4070 	pople	{r4, r5, r6, lr}
 c1045b8:	d12fff1e 	bxle	lr
 c1045bc:	e2644000 	rsb	r4, r4, #0
 c1045c0:	e2544020 	subs	r4, r4, #32
 c1045c4:	aa00001a 	bge	c104634 <__aeabi_dmul+0x17c>
 c1045c8:	e294400c 	adds	r4, r4, #12
 c1045cc:	ca00000c 	bgt	c104604 <__aeabi_dmul+0x14c>
 c1045d0:	e2844014 	add	r4, r4, #20
 c1045d4:	e2645020 	rsb	r5, r4, #32
 c1045d8:	e1a03510 	lsl	r3, r0, r5
 c1045dc:	e1a00430 	lsr	r0, r0, r4
 c1045e0:	e1800511 	orr	r0, r0, r1, lsl r5
 c1045e4:	e2012102 	and	r2, r1, #-2147483648	; 0x80000000
 c1045e8:	e3c11102 	bic	r1, r1, #-2147483648	; 0x80000000
 c1045ec:	e0900fa3 	adds	r0, r0, r3, lsr #31
 c1045f0:	e0a21431 	adc	r1, r2, r1, lsr r4
 c1045f4:	e19ee083 	orrs	lr, lr, r3, lsl #1
 c1045f8:	01c00fa3 	biceq	r0, r0, r3, lsr #31
 c1045fc:	e8bd4070 	pop	{r4, r5, r6, lr}
 c104600:	e12fff1e 	bx	lr
 c104604:	e264400c 	rsb	r4, r4, #12
 c104608:	e2645020 	rsb	r5, r4, #32
 c10460c:	e1a03410 	lsl	r3, r0, r4
 c104610:	e1a00530 	lsr	r0, r0, r5
 c104614:	e1800411 	orr	r0, r0, r1, lsl r4
 c104618:	e2011102 	and	r1, r1, #-2147483648	; 0x80000000
 c10461c:	e0900fa3 	adds	r0, r0, r3, lsr #31
 c104620:	e2a11000 	adc	r1, r1, #0
 c104624:	e19ee083 	orrs	lr, lr, r3, lsl #1
 c104628:	01c00fa3 	biceq	r0, r0, r3, lsr #31
 c10462c:	e8bd4070 	pop	{r4, r5, r6, lr}
 c104630:	e12fff1e 	bx	lr
 c104634:	e2645020 	rsb	r5, r4, #32
 c104638:	e18ee510 	orr	lr, lr, r0, lsl r5
 c10463c:	e1a03430 	lsr	r3, r0, r4
 c104640:	e1833511 	orr	r3, r3, r1, lsl r5
 c104644:	e1a00431 	lsr	r0, r1, r4
 c104648:	e2011102 	and	r1, r1, #-2147483648	; 0x80000000
 c10464c:	e1c00431 	bic	r0, r0, r1, lsr r4
 c104650:	e0800fa3 	add	r0, r0, r3, lsr #31
 c104654:	e19ee083 	orrs	lr, lr, r3, lsl #1
 c104658:	01c00fa3 	biceq	r0, r0, r3, lsr #31
 c10465c:	e8bd4070 	pop	{r4, r5, r6, lr}
 c104660:	e12fff1e 	bx	lr
 c104664:	e3340000 	teq	r4, #0
 c104668:	1a000008 	bne	c104690 <__aeabi_dmul+0x1d8>
 c10466c:	e2016102 	and	r6, r1, #-2147483648	; 0x80000000
 c104670:	e1b00080 	lsls	r0, r0, #1
 c104674:	e0a11001 	adc	r1, r1, r1
 c104678:	e3110601 	tst	r1, #1048576	; 0x100000
 c10467c:	02444001 	subeq	r4, r4, #1
 c104680:	0afffffa 	beq	c104670 <__aeabi_dmul+0x1b8>
 c104684:	e1811006 	orr	r1, r1, r6
 c104688:	e3350000 	teq	r5, #0
 c10468c:	112fff1e 	bxne	lr
 c104690:	e2036102 	and	r6, r3, #-2147483648	; 0x80000000
 c104694:	e1b02082 	lsls	r2, r2, #1
 c104698:	e0a33003 	adc	r3, r3, r3
 c10469c:	e3130601 	tst	r3, #1048576	; 0x100000
 c1046a0:	02455001 	subeq	r5, r5, #1
 c1046a4:	0afffffa 	beq	c104694 <__aeabi_dmul+0x1dc>
 c1046a8:	e1833006 	orr	r3, r3, r6
 c1046ac:	e12fff1e 	bx	lr
 c1046b0:	e134000c 	teq	r4, ip
 c1046b4:	e00c5a23 	and	r5, ip, r3, lsr #20
 c1046b8:	1135000c 	teqne	r5, ip
 c1046bc:	0a000007 	beq	c1046e0 <__aeabi_dmul+0x228>
 c1046c0:	e1906081 	orrs	r6, r0, r1, lsl #1
 c1046c4:	11926083 	orrsne	r6, r2, r3, lsl #1
 c1046c8:	1affffe5 	bne	c104664 <__aeabi_dmul+0x1ac>
 c1046cc:	e0211003 	eor	r1, r1, r3
 c1046d0:	e2011102 	and	r1, r1, #-2147483648	; 0x80000000
 c1046d4:	e3a00000 	mov	r0, #0
 c1046d8:	e8bd4070 	pop	{r4, r5, r6, lr}
 c1046dc:	e12fff1e 	bx	lr
 c1046e0:	e1906081 	orrs	r6, r0, r1, lsl #1
 c1046e4:	01a00002 	moveq	r0, r2
 c1046e8:	01a01003 	moveq	r1, r3
 c1046ec:	11926083 	orrsne	r6, r2, r3, lsl #1
 c1046f0:	0a000010 	beq	c104738 <__aeabi_dmul+0x280>
 c1046f4:	e134000c 	teq	r4, ip
 c1046f8:	1a000001 	bne	c104704 <__aeabi_dmul+0x24c>
 c1046fc:	e1906601 	orrs	r6, r0, r1, lsl #12
 c104700:	1a00000c 	bne	c104738 <__aeabi_dmul+0x280>
 c104704:	e135000c 	teq	r5, ip
 c104708:	1a000003 	bne	c10471c <__aeabi_dmul+0x264>
 c10470c:	e1926603 	orrs	r6, r2, r3, lsl #12
 c104710:	11a00002 	movne	r0, r2
 c104714:	11a01003 	movne	r1, r3
 c104718:	1a000006 	bne	c104738 <__aeabi_dmul+0x280>
 c10471c:	e0211003 	eor	r1, r1, r3
 c104720:	e2011102 	and	r1, r1, #-2147483648	; 0x80000000
 c104724:	e381147f 	orr	r1, r1, #2130706432	; 0x7f000000
 c104728:	e381160f 	orr	r1, r1, #15728640	; 0xf00000
 c10472c:	e3a00000 	mov	r0, #0
 c104730:	e8bd4070 	pop	{r4, r5, r6, lr}
 c104734:	e12fff1e 	bx	lr
 c104738:	e381147f 	orr	r1, r1, #2130706432	; 0x7f000000
 c10473c:	e381173e 	orr	r1, r1, #16252928	; 0xf80000
 c104740:	e8bd4070 	pop	{r4, r5, r6, lr}
 c104744:	e12fff1e 	bx	lr

0c104748 <__aeabi_ddiv>:
 c104748:	e92d4070 	push	{r4, r5, r6, lr}
 c10474c:	e3a0c0ff 	mov	ip, #255	; 0xff
 c104750:	e38ccc07 	orr	ip, ip, #1792	; 0x700
 c104754:	e01c4a21 	ands	r4, ip, r1, lsr #20
 c104758:	101c5a23 	andsne	r5, ip, r3, lsr #20
 c10475c:	1134000c 	teqne	r4, ip
 c104760:	1135000c 	teqne	r5, ip
 c104764:	0b00005e 	bleq	c1048e4 <__aeabi_ddiv+0x19c>
 c104768:	e0444005 	sub	r4, r4, r5
 c10476c:	e021e003 	eor	lr, r1, r3
 c104770:	e1925603 	orrs	r5, r2, r3, lsl #12
 c104774:	e1a01601 	lsl	r1, r1, #12
 c104778:	0a00004c 	beq	c1048b0 <__aeabi_ddiv+0x168>
 c10477c:	e1a03603 	lsl	r3, r3, #12
 c104780:	e3a05201 	mov	r5, #268435456	; 0x10000000
 c104784:	e1853223 	orr	r3, r5, r3, lsr #4
 c104788:	e1833c22 	orr	r3, r3, r2, lsr #24
 c10478c:	e1a02402 	lsl	r2, r2, #8
 c104790:	e1855221 	orr	r5, r5, r1, lsr #4
 c104794:	e1855c20 	orr	r5, r5, r0, lsr #24
 c104798:	e1a06400 	lsl	r6, r0, #8
 c10479c:	e20e1102 	and	r1, lr, #-2147483648	; 0x80000000
 c1047a0:	e1550003 	cmp	r5, r3
 c1047a4:	01560002 	cmpeq	r6, r2
 c1047a8:	e2a440fd 	adc	r4, r4, #253	; 0xfd
 c1047ac:	e2844c03 	add	r4, r4, #768	; 0x300
 c1047b0:	2a000001 	bcs	c1047bc <__aeabi_ddiv+0x74>
 c1047b4:	e1b030a3 	lsrs	r3, r3, #1
 c1047b8:	e1a02062 	rrx	r2, r2
 c1047bc:	e0566002 	subs	r6, r6, r2
 c1047c0:	e0c55003 	sbc	r5, r5, r3
 c1047c4:	e1b030a3 	lsrs	r3, r3, #1
 c1047c8:	e1a02062 	rrx	r2, r2
 c1047cc:	e3a00601 	mov	r0, #1048576	; 0x100000
 c1047d0:	e3a0c702 	mov	ip, #524288	; 0x80000
 c1047d4:	e056e002 	subs	lr, r6, r2
 c1047d8:	e0d5e003 	sbcs	lr, r5, r3
 c1047dc:	20466002 	subcs	r6, r6, r2
 c1047e0:	21a0500e 	movcs	r5, lr
 c1047e4:	2180000c 	orrcs	r0, r0, ip
 c1047e8:	e1b030a3 	lsrs	r3, r3, #1
 c1047ec:	e1a02062 	rrx	r2, r2
 c1047f0:	e056e002 	subs	lr, r6, r2
 c1047f4:	e0d5e003 	sbcs	lr, r5, r3
 c1047f8:	20466002 	subcs	r6, r6, r2
 c1047fc:	21a0500e 	movcs	r5, lr
 c104800:	218000ac 	orrcs	r0, r0, ip, lsr #1
 c104804:	e1b030a3 	lsrs	r3, r3, #1
 c104808:	e1a02062 	rrx	r2, r2
 c10480c:	e056e002 	subs	lr, r6, r2
 c104810:	e0d5e003 	sbcs	lr, r5, r3
 c104814:	20466002 	subcs	r6, r6, r2
 c104818:	21a0500e 	movcs	r5, lr
 c10481c:	2180012c 	orrcs	r0, r0, ip, lsr #2
 c104820:	e1b030a3 	lsrs	r3, r3, #1
 c104824:	e1a02062 	rrx	r2, r2
 c104828:	e056e002 	subs	lr, r6, r2
 c10482c:	e0d5e003 	sbcs	lr, r5, r3
 c104830:	20466002 	subcs	r6, r6, r2
 c104834:	21a0500e 	movcs	r5, lr
 c104838:	218001ac 	orrcs	r0, r0, ip, lsr #3
 c10483c:	e195e006 	orrs	lr, r5, r6
 c104840:	0a00000d 	beq	c10487c <__aeabi_ddiv+0x134>
 c104844:	e1a05205 	lsl	r5, r5, #4
 c104848:	e1855e26 	orr	r5, r5, r6, lsr #28
 c10484c:	e1a06206 	lsl	r6, r6, #4
 c104850:	e1a03183 	lsl	r3, r3, #3
 c104854:	e1833ea2 	orr	r3, r3, r2, lsr #29
 c104858:	e1a02182 	lsl	r2, r2, #3
 c10485c:	e1b0c22c 	lsrs	ip, ip, #4
 c104860:	1affffdb 	bne	c1047d4 <__aeabi_ddiv+0x8c>
 c104864:	e3110601 	tst	r1, #1048576	; 0x100000
 c104868:	1a000006 	bne	c104888 <__aeabi_ddiv+0x140>
 c10486c:	e1811000 	orr	r1, r1, r0
 c104870:	e3a00000 	mov	r0, #0
 c104874:	e3a0c102 	mov	ip, #-2147483648	; 0x80000000
 c104878:	eaffffd5 	b	c1047d4 <__aeabi_ddiv+0x8c>
 c10487c:	e3110601 	tst	r1, #1048576	; 0x100000
 c104880:	01811000 	orreq	r1, r1, r0
 c104884:	03a00000 	moveq	r0, #0
 c104888:	e254c0fd 	subs	ip, r4, #253	; 0xfd
 c10488c:	835c0c07 	cmphi	ip, #1792	; 0x700
 c104890:	8affff43 	bhi	c1045a4 <__aeabi_dmul+0xec>
 c104894:	e055c003 	subs	ip, r5, r3
 c104898:	0056c002 	subseq	ip, r6, r2
 c10489c:	01b0c0a0 	lsrseq	ip, r0, #1
 c1048a0:	e2b00000 	adcs	r0, r0, #0
 c1048a4:	e0a11a04 	adc	r1, r1, r4, lsl #20
 c1048a8:	e8bd4070 	pop	{r4, r5, r6, lr}
 c1048ac:	e12fff1e 	bx	lr
 c1048b0:	e20ee102 	and	lr, lr, #-2147483648	; 0x80000000
 c1048b4:	e18e1621 	orr	r1, lr, r1, lsr #12
 c1048b8:	e09440ac 	adds	r4, r4, ip, lsr #1
 c1048bc:	c074500c 	rsbsgt	r5, r4, ip
 c1048c0:	c1811a04 	orrgt	r1, r1, r4, lsl #20
 c1048c4:	c8bd4070 	popgt	{r4, r5, r6, lr}
 c1048c8:	c12fff1e 	bxgt	lr
 c1048cc:	e3811601 	orr	r1, r1, #1048576	; 0x100000
 c1048d0:	e3a0e000 	mov	lr, #0
 c1048d4:	e2544001 	subs	r4, r4, #1
 c1048d8:	eaffff31 	b	c1045a4 <__aeabi_dmul+0xec>
 c1048dc:	e185e006 	orr	lr, r5, r6
 c1048e0:	eaffff2f 	b	c1045a4 <__aeabi_dmul+0xec>
 c1048e4:	e00c5a23 	and	r5, ip, r3, lsr #20
 c1048e8:	e134000c 	teq	r4, ip
 c1048ec:	0135000c 	teqeq	r5, ip
 c1048f0:	0affff90 	beq	c104738 <__aeabi_dmul+0x280>
 c1048f4:	e134000c 	teq	r4, ip
 c1048f8:	1a000006 	bne	c104918 <__aeabi_ddiv+0x1d0>
 c1048fc:	e1904601 	orrs	r4, r0, r1, lsl #12
 c104900:	1affff8c 	bne	c104738 <__aeabi_dmul+0x280>
 c104904:	e135000c 	teq	r5, ip
 c104908:	1affff83 	bne	c10471c <__aeabi_dmul+0x264>
 c10490c:	e1a00002 	mov	r0, r2
 c104910:	e1a01003 	mov	r1, r3
 c104914:	eaffff87 	b	c104738 <__aeabi_dmul+0x280>
 c104918:	e135000c 	teq	r5, ip
 c10491c:	1a000004 	bne	c104934 <__aeabi_ddiv+0x1ec>
 c104920:	e1925603 	orrs	r5, r2, r3, lsl #12
 c104924:	0affff68 	beq	c1046cc <__aeabi_dmul+0x214>
 c104928:	e1a00002 	mov	r0, r2
 c10492c:	e1a01003 	mov	r1, r3
 c104930:	eaffff80 	b	c104738 <__aeabi_dmul+0x280>
 c104934:	e1906081 	orrs	r6, r0, r1, lsl #1
 c104938:	11926083 	orrsne	r6, r2, r3, lsl #1
 c10493c:	1affff48 	bne	c104664 <__aeabi_dmul+0x1ac>
 c104940:	e1904081 	orrs	r4, r0, r1, lsl #1
 c104944:	1affff74 	bne	c10471c <__aeabi_dmul+0x264>
 c104948:	e1925083 	orrs	r5, r2, r3, lsl #1
 c10494c:	1affff5e 	bne	c1046cc <__aeabi_dmul+0x214>
 c104950:	eaffff78 	b	c104738 <__aeabi_dmul+0x280>

0c104954 <__aeabi_d2iz>:
 c104954:	e1a02081 	lsl	r2, r1, #1
 c104958:	e2922602 	adds	r2, r2, #2097152	; 0x200000
 c10495c:	2a00000c 	bcs	c104994 <__aeabi_d2iz+0x40>
 c104960:	5a000009 	bpl	c10498c <__aeabi_d2iz+0x38>
 c104964:	e3e03e3e 	mvn	r3, #992	; 0x3e0
 c104968:	e0532ac2 	subs	r2, r3, r2, asr #21
 c10496c:	9a00000a 	bls	c10499c <__aeabi_d2iz+0x48>
 c104970:	e1a03581 	lsl	r3, r1, #11
 c104974:	e3833102 	orr	r3, r3, #-2147483648	; 0x80000000
 c104978:	e1833aa0 	orr	r3, r3, r0, lsr #21
 c10497c:	e3110102 	tst	r1, #-2147483648	; 0x80000000
 c104980:	e1a00233 	lsr	r0, r3, r2
 c104984:	12600000 	rsbne	r0, r0, #0
 c104988:	e12fff1e 	bx	lr
 c10498c:	e3a00000 	mov	r0, #0
 c104990:	e12fff1e 	bx	lr
 c104994:	e1900601 	orrs	r0, r0, r1, lsl #12
 c104998:	1a000002 	bne	c1049a8 <__aeabi_d2iz+0x54>
 c10499c:	e2110102 	ands	r0, r1, #-2147483648	; 0x80000000
 c1049a0:	03e00102 	mvneq	r0, #-2147483648	; 0x80000000
 c1049a4:	e12fff1e 	bx	lr
 c1049a8:	e3a00000 	mov	r0, #0
 c1049ac:	e12fff1e 	bx	lr

0c1049b0 <_vsnprintf_r>:
 c1049b0:	e92d4030 	push	{r4, r5, lr}
 c1049b4:	e2524000 	subs	r4, r2, #0
 c1049b8:	b3a0308b 	movlt	r3, #139	; 0x8b
 c1049bc:	e1a05000 	mov	r5, r0
 c1049c0:	b5803000 	strlt	r3, [r0]
 c1049c4:	e24dd06c 	sub	sp, sp, #108	; 0x6c
 c1049c8:	b3e00000 	mvnlt	r0, #0
 c1049cc:	ba000015 	blt	c104a28 <_vsnprintf_r+0x78>
 c1049d0:	1244c001 	subne	ip, r4, #1
 c1049d4:	01a0c004 	moveq	ip, r4
 c1049d8:	e3a02f82 	mov	r2, #520	; 0x208
 c1049dc:	e1cd20bc 	strh	r2, [sp, #12]
 c1049e0:	e58d1000 	str	r1, [sp]
 c1049e4:	e1a02003 	mov	r2, r3
 c1049e8:	e58d1010 	str	r1, [sp, #16]
 c1049ec:	e59d3078 	ldr	r3, [sp, #120]	; 0x78
 c1049f0:	e58dc008 	str	ip, [sp, #8]
 c1049f4:	e58dc014 	str	ip, [sp, #20]
 c1049f8:	e1a00005 	mov	r0, r5
 c1049fc:	e3e0c000 	mvn	ip, #0
 c104a00:	e1a0100d 	mov	r1, sp
 c104a04:	e1cdc0be 	strh	ip, [sp, #14]
 c104a08:	eb00001a 	bl	c104a78 <_svfprintf_r>
 c104a0c:	e3700001 	cmn	r0, #1
 c104a10:	b3a0308b 	movlt	r3, #139	; 0x8b
 c104a14:	b5853000 	strlt	r3, [r5]
 c104a18:	e3540000 	cmp	r4, #0
 c104a1c:	159d3000 	ldrne	r3, [sp]
 c104a20:	13a02000 	movne	r2, #0
 c104a24:	15c32000 	strbne	r2, [r3]
 c104a28:	e28dd06c 	add	sp, sp, #108	; 0x6c
 c104a2c:	e8bd4030 	pop	{r4, r5, lr}
 c104a30:	e12fff1e 	bx	lr

0c104a34 <vsnprintf>:
 c104a34:	e92d4030 	push	{r4, r5, lr}
 c104a38:	e59fc034 	ldr	ip, [pc, #52]	; c104a74 <vsnprintf+0x40>
 c104a3c:	e59c5000 	ldr	r5, [ip]
 c104a40:	e1a04000 	mov	r4, r0
 c104a44:	e1a0e001 	mov	lr, r1
 c104a48:	e1a0c002 	mov	ip, r2
 c104a4c:	e24dd00c 	sub	sp, sp, #12
 c104a50:	e58d3000 	str	r3, [sp]
 c104a54:	e1a00005 	mov	r0, r5
 c104a58:	e1a01004 	mov	r1, r4
 c104a5c:	e1a0200e 	mov	r2, lr
 c104a60:	e1a0300c 	mov	r3, ip
 c104a64:	ebffffd1 	bl	c1049b0 <_vsnprintf_r>
 c104a68:	e28dd00c 	add	sp, sp, #12
 c104a6c:	e8bd4030 	pop	{r4, r5, lr}
 c104a70:	e12fff1e 	bx	lr
 c104a74:	0c100078 	.word	0x0c100078

0c104a78 <_svfprintf_r>:
 c104a78:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 c104a7c:	e24ddf43 	sub	sp, sp, #268	; 0x10c
 c104a80:	e58d303c 	str	r3, [sp, #60]	; 0x3c
 c104a84:	e58d1024 	str	r1, [sp, #36]	; 0x24
 c104a88:	e1a04002 	mov	r4, r2
 c104a8c:	e58d0038 	str	r0, [sp, #56]	; 0x38
 c104a90:	eb000e61 	bl	c10841c <_localeconv_r>
 c104a94:	e5900000 	ldr	r0, [r0]
 c104a98:	e58d0054 	str	r0, [sp, #84]	; 0x54
 c104a9c:	eb0014df 	bl	c109e20 <strlen>
 c104aa0:	e58d0060 	str	r0, [sp, #96]	; 0x60
 c104aa4:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
 c104aa8:	e1d030bc 	ldrh	r3, [r0, #12]
 c104aac:	e3130080 	tst	r3, #128	; 0x80
 c104ab0:	0a000002 	beq	c104ac0 <_svfprintf_r+0x48>
 c104ab4:	e5903010 	ldr	r3, [r0, #16]
 c104ab8:	e3530000 	cmp	r3, #0
 c104abc:	0a000742 	beq	c1067cc <_svfprintf_r+0x1d54>
 c104ac0:	e28d10e8 	add	r1, sp, #232	; 0xe8
 c104ac4:	e3a03000 	mov	r3, #0
 c104ac8:	e28d7074 	add	r7, sp, #116	; 0x74
 c104acc:	e2811007 	add	r1, r1, #7
 c104ad0:	e58d302c 	str	r3, [sp, #44]	; 0x2c
 c104ad4:	e58d70dc 	str	r7, [sp, #220]	; 0xdc
 c104ad8:	e58d30e4 	str	r3, [sp, #228]	; 0xe4
 c104adc:	e58d30e0 	str	r3, [sp, #224]	; 0xe0
 c104ae0:	e58d401c 	str	r4, [sp, #28]
 c104ae4:	e58d3058 	str	r3, [sp, #88]	; 0x58
 c104ae8:	e58d305c 	str	r3, [sp, #92]	; 0x5c
 c104aec:	e58d3068 	str	r3, [sp, #104]	; 0x68
 c104af0:	e58d3064 	str	r3, [sp, #100]	; 0x64
 c104af4:	e58d3030 	str	r3, [sp, #48]	; 0x30
 c104af8:	e58d106c 	str	r1, [sp, #108]	; 0x6c
 c104afc:	e1a06007 	mov	r6, r7
 c104b00:	e59d201c 	ldr	r2, [sp, #28]
 c104b04:	e5d23000 	ldrb	r3, [r2]
 c104b08:	e3530000 	cmp	r3, #0
 c104b0c:	13530025 	cmpne	r3, #37	; 0x25
 c104b10:	0a0000a4 	beq	c104da8 <_svfprintf_r+0x330>
 c104b14:	e2823001 	add	r3, r2, #1
 c104b18:	e1a08003 	mov	r8, r3
 c104b1c:	e5d33000 	ldrb	r3, [r3]
 c104b20:	e3530025 	cmp	r3, #37	; 0x25
 c104b24:	13530000 	cmpne	r3, #0
 c104b28:	e2883001 	add	r3, r8, #1
 c104b2c:	1afffff9 	bne	c104b18 <_svfprintf_r+0xa0>
 c104b30:	e59d301c 	ldr	r3, [sp, #28]
 c104b34:	e058a003 	subs	sl, r8, r3
 c104b38:	0a00000c 	beq	c104b70 <_svfprintf_r+0xf8>
 c104b3c:	e28d40e0 	add	r4, sp, #224	; 0xe0
 c104b40:	e8940030 	ldm	r4, {r4, r5}
 c104b44:	e2844001 	add	r4, r4, #1
 c104b48:	e085500a 	add	r5, r5, sl
 c104b4c:	e3540007 	cmp	r4, #7
 c104b50:	e8860408 	stm	r6, {r3, sl}
 c104b54:	e58d50e4 	str	r5, [sp, #228]	; 0xe4
 c104b58:	e58d40e0 	str	r4, [sp, #224]	; 0xe0
 c104b5c:	d2866008 	addle	r6, r6, #8
 c104b60:	ca000078 	bgt	c104d48 <_svfprintf_r+0x2d0>
 c104b64:	e59dc030 	ldr	ip, [sp, #48]	; 0x30
 c104b68:	e08cc00a 	add	ip, ip, sl
 c104b6c:	e58dc030 	str	ip, [sp, #48]	; 0x30
 c104b70:	e5d83000 	ldrb	r3, [r8]
 c104b74:	e3530000 	cmp	r3, #0
 c104b78:	0a00007a 	beq	c104d68 <_svfprintf_r+0x2f0>
 c104b7c:	e3a01000 	mov	r1, #0
 c104b80:	e2882001 	add	r2, r8, #1
 c104b84:	e3a00000 	mov	r0, #0
 c104b88:	e58d1028 	str	r1, [sp, #40]	; 0x28
 c104b8c:	e5cd0107 	strb	r0, [sp, #263]	; 0x107
 c104b90:	e58d201c 	str	r2, [sp, #28]
 c104b94:	e3e05000 	mvn	r5, #0
 c104b98:	e5d83001 	ldrb	r3, [r8, #1]
 c104b9c:	e3a04020 	mov	r4, #32
 c104ba0:	e58d1018 	str	r1, [sp, #24]
 c104ba4:	e1a0c002 	mov	ip, r2
 c104ba8:	e3a0102b 	mov	r1, #43	; 0x2b
 c104bac:	e28cc001 	add	ip, ip, #1
 c104bb0:	e2432020 	sub	r2, r3, #32
 c104bb4:	e3520058 	cmp	r2, #88	; 0x58
 c104bb8:	979ff102 	ldrls	pc, [pc, r2, lsl #2]
 c104bbc:	ea0001cb 	b	c1052f0 <_svfprintf_r+0x878>
 c104bc0:	0c105330 	.word	0x0c105330
 c104bc4:	0c1052f0 	.word	0x0c1052f0
 c104bc8:	0c1052f0 	.word	0x0c1052f0
 c104bcc:	0c105348 	.word	0x0c105348
 c104bd0:	0c1052f0 	.word	0x0c1052f0
 c104bd4:	0c1052f0 	.word	0x0c1052f0
 c104bd8:	0c1052f0 	.word	0x0c1052f0
 c104bdc:	0c1052f0 	.word	0x0c1052f0
 c104be0:	0c1052f0 	.word	0x0c1052f0
 c104be4:	0c1052f0 	.word	0x0c1052f0
 c104be8:	0c10535c 	.word	0x0c10535c
 c104bec:	0c104db0 	.word	0x0c104db0
 c104bf0:	0c1052f0 	.word	0x0c1052f0
 c104bf4:	0c104d34 	.word	0x0c104d34
 c104bf8:	0c104dbc 	.word	0x0c104dbc
 c104bfc:	0c1052f0 	.word	0x0c1052f0
 c104c00:	0c104e04 	.word	0x0c104e04
 c104c04:	0c104e18 	.word	0x0c104e18
 c104c08:	0c104e18 	.word	0x0c104e18
 c104c0c:	0c104e18 	.word	0x0c104e18
 c104c10:	0c104e18 	.word	0x0c104e18
 c104c14:	0c104e18 	.word	0x0c104e18
 c104c18:	0c104e18 	.word	0x0c104e18
 c104c1c:	0c104e18 	.word	0x0c104e18
 c104c20:	0c104e18 	.word	0x0c104e18
 c104c24:	0c104e18 	.word	0x0c104e18
 c104c28:	0c1052f0 	.word	0x0c1052f0
 c104c2c:	0c1052f0 	.word	0x0c1052f0
 c104c30:	0c1052f0 	.word	0x0c1052f0
 c104c34:	0c1052f0 	.word	0x0c1052f0
 c104c38:	0c1052f0 	.word	0x0c1052f0
 c104c3c:	0c1052f0 	.word	0x0c1052f0
 c104c40:	0c1052f0 	.word	0x0c1052f0
 c104c44:	0c1052f0 	.word	0x0c1052f0
 c104c48:	0c1052f0 	.word	0x0c1052f0
 c104c4c:	0c1052f0 	.word	0x0c1052f0
 c104c50:	0c104e48 	.word	0x0c104e48
 c104c54:	0c105058 	.word	0x0c105058
 c104c58:	0c1052f0 	.word	0x0c1052f0
 c104c5c:	0c105058 	.word	0x0c105058
 c104c60:	0c1052f0 	.word	0x0c1052f0
 c104c64:	0c1052f0 	.word	0x0c1052f0
 c104c68:	0c1052f0 	.word	0x0c1052f0
 c104c6c:	0c1052f0 	.word	0x0c1052f0
 c104c70:	0c105114 	.word	0x0c105114
 c104c74:	0c1052f0 	.word	0x0c1052f0
 c104c78:	0c1052f0 	.word	0x0c1052f0
 c104c7c:	0c105128 	.word	0x0c105128
 c104c80:	0c1052f0 	.word	0x0c1052f0
 c104c84:	0c1052f0 	.word	0x0c1052f0
 c104c88:	0c1052f0 	.word	0x0c1052f0
 c104c8c:	0c1052f0 	.word	0x0c1052f0
 c104c90:	0c1052f0 	.word	0x0c1052f0
 c104c94:	0c10517c 	.word	0x0c10517c
 c104c98:	0c1052f0 	.word	0x0c1052f0
 c104c9c:	0c1052f0 	.word	0x0c1052f0
 c104ca0:	0c1051c8 	.word	0x0c1051c8
 c104ca4:	0c1052f0 	.word	0x0c1052f0
 c104ca8:	0c1052f0 	.word	0x0c1052f0
 c104cac:	0c1052f0 	.word	0x0c1052f0
 c104cb0:	0c1052f0 	.word	0x0c1052f0
 c104cb4:	0c1052f0 	.word	0x0c1052f0
 c104cb8:	0c1052f0 	.word	0x0c1052f0
 c104cbc:	0c1052f0 	.word	0x0c1052f0
 c104cc0:	0c1052f0 	.word	0x0c1052f0
 c104cc4:	0c1052f0 	.word	0x0c1052f0
 c104cc8:	0c1052f0 	.word	0x0c1052f0
 c104ccc:	0c105418 	.word	0x0c105418
 c104cd0:	0c1053cc 	.word	0x0c1053cc
 c104cd4:	0c105058 	.word	0x0c105058
 c104cd8:	0c105058 	.word	0x0c105058
 c104cdc:	0c105058 	.word	0x0c105058
 c104ce0:	0c105404 	.word	0x0c105404
 c104ce4:	0c1053cc 	.word	0x0c1053cc
 c104ce8:	0c1052f0 	.word	0x0c1052f0
 c104cec:	0c1052f0 	.word	0x0c1052f0
 c104cf0:	0c10524c 	.word	0x0c10524c
 c104cf4:	0c1052f0 	.word	0x0c1052f0
 c104cf8:	0c105274 	.word	0x0c105274
 c104cfc:	0c1052ac 	.word	0x0c1052ac
 c104d00:	0c105464 	.word	0x0c105464
 c104d04:	0c105238 	.word	0x0c105238
 c104d08:	0c1052f0 	.word	0x0c1052f0
 c104d0c:	0c1054b8 	.word	0x0c1054b8
 c104d10:	0c1052f0 	.word	0x0c1052f0
 c104d14:	0c105384 	.word	0x0c105384
 c104d18:	0c1052f0 	.word	0x0c1052f0
 c104d1c:	0c1052f0 	.word	0x0c1052f0
 c104d20:	0c10553c 	.word	0x0c10553c
 c104d24:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
 c104d28:	e2600000 	rsb	r0, r0, #0
 c104d2c:	e58d0028 	str	r0, [sp, #40]	; 0x28
 c104d30:	e58d203c 	str	r2, [sp, #60]	; 0x3c
 c104d34:	e59d2018 	ldr	r2, [sp, #24]
 c104d38:	e3822004 	orr	r2, r2, #4
 c104d3c:	e58d2018 	str	r2, [sp, #24]
 c104d40:	e5dc3000 	ldrb	r3, [ip]
 c104d44:	eaffff98 	b	c104bac <_svfprintf_r+0x134>
 c104d48:	e59d0038 	ldr	r0, [sp, #56]	; 0x38
 c104d4c:	e59d1024 	ldr	r1, [sp, #36]	; 0x24
 c104d50:	e28d20dc 	add	r2, sp, #220	; 0xdc
 c104d54:	eb001449 	bl	c109e80 <__ssprint_r>
 c104d58:	e3500000 	cmp	r0, #0
 c104d5c:	1a000007 	bne	c104d80 <_svfprintf_r+0x308>
 c104d60:	e1a06007 	mov	r6, r7
 c104d64:	eaffff7e 	b	c104b64 <_svfprintf_r+0xec>
 c104d68:	e59d30e4 	ldr	r3, [sp, #228]	; 0xe4
 c104d6c:	e3530000 	cmp	r3, #0
 c104d70:	159d0038 	ldrne	r0, [sp, #56]	; 0x38
 c104d74:	159d1024 	ldrne	r1, [sp, #36]	; 0x24
 c104d78:	128d20dc 	addne	r2, sp, #220	; 0xdc
 c104d7c:	1b00143f 	blne	c109e80 <__ssprint_r>
 c104d80:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
 c104d84:	e1d030bc 	ldrh	r3, [r0, #12]
 c104d88:	e59d1030 	ldr	r1, [sp, #48]	; 0x30
 c104d8c:	e3130040 	tst	r3, #64	; 0x40
 c104d90:	13e01000 	mvnne	r1, #0
 c104d94:	e58d1030 	str	r1, [sp, #48]	; 0x30
 c104d98:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
 c104d9c:	e28ddf43 	add	sp, sp, #268	; 0x10c
 c104da0:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 c104da4:	e12fff1e 	bx	lr
 c104da8:	e59d801c 	ldr	r8, [sp, #28]
 c104dac:	eaffff6f 	b	c104b70 <_svfprintf_r+0xf8>
 c104db0:	e5cd1107 	strb	r1, [sp, #263]	; 0x107
 c104db4:	e5dc3000 	ldrb	r3, [ip]
 c104db8:	eaffff7b 	b	c104bac <_svfprintf_r+0x134>
 c104dbc:	e4dc3001 	ldrb	r3, [ip], #1
 c104dc0:	e353002a 	cmp	r3, #42	; 0x2a
 c104dc4:	0a00076a 	beq	c106b74 <_svfprintf_r+0x20fc>
 c104dc8:	e2432030 	sub	r2, r3, #48	; 0x30
 c104dcc:	e3520009 	cmp	r2, #9
 c104dd0:	83a05000 	movhi	r5, #0
 c104dd4:	8a000008 	bhi	c104dfc <_svfprintf_r+0x384>
 c104dd8:	e1a0000c 	mov	r0, ip
 c104ddc:	e3a05000 	mov	r5, #0
 c104de0:	e4d03001 	ldrb	r3, [r0], #1
 c104de4:	e0855105 	add	r5, r5, r5, lsl #2
 c104de8:	e0825085 	add	r5, r2, r5, lsl #1
 c104dec:	e2432030 	sub	r2, r3, #48	; 0x30
 c104df0:	e3520009 	cmp	r2, #9
 c104df4:	e1a0c000 	mov	ip, r0
 c104df8:	9afffff8 	bls	c104de0 <_svfprintf_r+0x368>
 c104dfc:	e1855fc5 	orr	r5, r5, r5, asr #31
 c104e00:	eaffff6a 	b	c104bb0 <_svfprintf_r+0x138>
 c104e04:	e59d0018 	ldr	r0, [sp, #24]
 c104e08:	e3800080 	orr	r0, r0, #128	; 0x80
 c104e0c:	e58d0018 	str	r0, [sp, #24]
 c104e10:	e5dc3000 	ldrb	r3, [ip]
 c104e14:	eaffff64 	b	c104bac <_svfprintf_r+0x134>
 c104e18:	e1a0000c 	mov	r0, ip
 c104e1c:	e3a02000 	mov	r2, #0
 c104e20:	e243c030 	sub	ip, r3, #48	; 0x30
 c104e24:	e4d03001 	ldrb	r3, [r0], #1
 c104e28:	e2438030 	sub	r8, r3, #48	; 0x30
 c104e2c:	e0822102 	add	r2, r2, r2, lsl #2
 c104e30:	e3580009 	cmp	r8, #9
 c104e34:	e08c2082 	add	r2, ip, r2, lsl #1
 c104e38:	e1a0c000 	mov	ip, r0
 c104e3c:	9afffff7 	bls	c104e20 <_svfprintf_r+0x3a8>
 c104e40:	e58d2028 	str	r2, [sp, #40]	; 0x28
 c104e44:	eaffff59 	b	c104bb0 <_svfprintf_r+0x138>
 c104e48:	e58dc01c 	str	ip, [sp, #28]
 c104e4c:	e59dc018 	ldr	ip, [sp, #24]
 c104e50:	e38cc010 	orr	ip, ip, #16
 c104e54:	e58dc018 	str	ip, [sp, #24]
 c104e58:	e59d0018 	ldr	r0, [sp, #24]
 c104e5c:	e3100020 	tst	r0, #32
 c104e60:	e58d3048 	str	r3, [sp, #72]	; 0x48
 c104e64:	0a00015d 	beq	c1053e0 <_svfprintf_r+0x968>
 c104e68:	e59d103c 	ldr	r1, [sp, #60]	; 0x3c
 c104e6c:	e2813007 	add	r3, r1, #7
 c104e70:	e3c33007 	bic	r3, r3, #7
 c104e74:	e2832008 	add	r2, r3, #8
 c104e78:	e58d203c 	str	r2, [sp, #60]	; 0x3c
 c104e7c:	e8930300 	ldm	r3, {r8, r9}
 c104e80:	e3580000 	cmp	r8, #0
 c104e84:	e2d93000 	sbcs	r3, r9, #0
 c104e88:	ba000470 	blt	c106050 <_svfprintf_r+0x15d8>
 c104e8c:	e198c009 	orrs	ip, r8, r9
 c104e90:	03a02000 	moveq	r2, #0
 c104e94:	13a02001 	movne	r2, #1
 c104e98:	e3a03001 	mov	r3, #1
 c104e9c:	e3550000 	cmp	r5, #0
 c104ea0:	a59dc018 	ldrge	ip, [sp, #24]
 c104ea4:	a3ccc080 	bicge	ip, ip, #128	; 0x80
 c104ea8:	a58dc018 	strge	ip, [sp, #24]
 c104eac:	e3550000 	cmp	r5, #0
 c104eb0:	13822001 	orrne	r2, r2, #1
 c104eb4:	e3520000 	cmp	r2, #0
 c104eb8:	0a0002c7 	beq	c1059dc <_svfprintf_r+0xf64>
 c104ebc:	e3530001 	cmp	r3, #1
 c104ec0:	0a0003c4 	beq	c105dd8 <_svfprintf_r+0x1360>
 c104ec4:	e3530002 	cmp	r3, #2
 c104ec8:	0a0003ad 	beq	c105d84 <_svfprintf_r+0x130c>
 c104ecc:	e28dc0b4 	add	ip, sp, #180	; 0xb4
 c104ed0:	e28c1027 	add	r1, ip, #39	; 0x27
 c104ed4:	e1a021a9 	lsr	r2, r9, #3
 c104ed8:	e1a001a8 	lsr	r0, r8, #3
 c104edc:	e1800e89 	orr	r0, r0, r9, lsl #29
 c104ee0:	e1a04002 	mov	r4, r2
 c104ee4:	e1a09004 	mov	r9, r4
 c104ee8:	e2082007 	and	r2, r8, #7
 c104eec:	e1a08000 	mov	r8, r0
 c104ef0:	e2823030 	add	r3, r2, #48	; 0x30
 c104ef4:	e1a00001 	mov	r0, r1
 c104ef8:	e1981009 	orrs	r1, r8, r9
 c104efc:	e5c03000 	strb	r3, [r0]
 c104f00:	e2401001 	sub	r1, r0, #1
 c104f04:	1afffff2 	bne	c104ed4 <_svfprintf_r+0x45c>
 c104f08:	e59d2018 	ldr	r2, [sp, #24]
 c104f0c:	e3120001 	tst	r2, #1
 c104f10:	e58d0040 	str	r0, [sp, #64]	; 0x40
 c104f14:	1a000442 	bne	c106024 <_svfprintf_r+0x15ac>
 c104f18:	e28cc028 	add	ip, ip, #40	; 0x28
 c104f1c:	e060c00c 	rsb	ip, r0, ip
 c104f20:	e58dc034 	str	ip, [sp, #52]	; 0x34
 c104f24:	e59d1034 	ldr	r1, [sp, #52]	; 0x34
 c104f28:	e3a03000 	mov	r3, #0
 c104f2c:	e1510005 	cmp	r1, r5
 c104f30:	b1a01005 	movlt	r1, r5
 c104f34:	e58d1020 	str	r1, [sp, #32]
 c104f38:	e5dd2107 	ldrb	r2, [sp, #263]	; 0x107
 c104f3c:	e58d504c 	str	r5, [sp, #76]	; 0x4c
 c104f40:	e58d3050 	str	r3, [sp, #80]	; 0x50
 c104f44:	e3520000 	cmp	r2, #0
 c104f48:	0a000002 	beq	c104f58 <_svfprintf_r+0x4e0>
 c104f4c:	e59d3020 	ldr	r3, [sp, #32]
 c104f50:	e2833001 	add	r3, r3, #1
 c104f54:	e58d3020 	str	r3, [sp, #32]
 c104f58:	e59dc018 	ldr	ip, [sp, #24]
 c104f5c:	e21cb002 	ands	fp, ip, #2
 c104f60:	159d0020 	ldrne	r0, [sp, #32]
 c104f64:	e59d1018 	ldr	r1, [sp, #24]
 c104f68:	12800002 	addne	r0, r0, #2
 c104f6c:	158d0020 	strne	r0, [sp, #32]
 c104f70:	e2111084 	ands	r1, r1, #132	; 0x84
 c104f74:	e58d1044 	str	r1, [sp, #68]	; 0x44
 c104f78:	1a00017f 	bne	c10557c <_svfprintf_r+0xb04>
 c104f7c:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
 c104f80:	e59dc020 	ldr	ip, [sp, #32]
 c104f84:	e06c8003 	rsb	r8, ip, r3
 c104f88:	e3580000 	cmp	r8, #0
 c104f8c:	da00017a 	ble	c10557c <_svfprintf_r+0xb04>
 c104f90:	e3580010 	cmp	r8, #16
 c104f94:	da00066f 	ble	c106958 <_svfprintf_r+0x1ee0>
 c104f98:	e28d40e0 	add	r4, sp, #224	; 0xe0
 c104f9c:	e8940030 	ldm	r4, {r4, r5}
 c104fa0:	e1a01005 	mov	r1, r5
 c104fa4:	e1a02004 	mov	r2, r4
 c104fa8:	e59faf48 	ldr	sl, [pc, #3912]	; c105ef8 <_svfprintf_r+0x1480>
 c104fac:	e3a09010 	mov	r9, #16
 c104fb0:	e59d4038 	ldr	r4, [sp, #56]	; 0x38
 c104fb4:	e59d5024 	ldr	r5, [sp, #36]	; 0x24
 c104fb8:	ea000002 	b	c104fc8 <_svfprintf_r+0x550>
 c104fbc:	e2488010 	sub	r8, r8, #16
 c104fc0:	e3580010 	cmp	r8, #16
 c104fc4:	da000016 	ble	c105024 <_svfprintf_r+0x5ac>
 c104fc8:	e2822001 	add	r2, r2, #1
 c104fcc:	e3520007 	cmp	r2, #7
 c104fd0:	e586a000 	str	sl, [r6]
 c104fd4:	e5869004 	str	r9, [r6, #4]
 c104fd8:	e2811010 	add	r1, r1, #16
 c104fdc:	d2866008 	addle	r6, r6, #8
 c104fe0:	e58d10e4 	str	r1, [sp, #228]	; 0xe4
 c104fe4:	e58d20e0 	str	r2, [sp, #224]	; 0xe0
 c104fe8:	d2863008 	addle	r3, r6, #8
 c104fec:	dafffff2 	ble	c104fbc <_svfprintf_r+0x544>
 c104ff0:	e1a00004 	mov	r0, r4
 c104ff4:	e1a01005 	mov	r1, r5
 c104ff8:	e28d20dc 	add	r2, sp, #220	; 0xdc
 c104ffc:	eb00139f 	bl	c109e80 <__ssprint_r>
 c105000:	e3500000 	cmp	r0, #0
 c105004:	1affff5d 	bne	c104d80 <_svfprintf_r+0x308>
 c105008:	e2488010 	sub	r8, r8, #16
 c10500c:	e3580010 	cmp	r8, #16
 c105010:	e59d10e4 	ldr	r1, [sp, #228]	; 0xe4
 c105014:	e59d20e0 	ldr	r2, [sp, #224]	; 0xe0
 c105018:	e2873008 	add	r3, r7, #8
 c10501c:	e1a06007 	mov	r6, r7
 c105020:	caffffe8 	bgt	c104fc8 <_svfprintf_r+0x550>
 c105024:	e1a04002 	mov	r4, r2
 c105028:	e1a05001 	mov	r5, r1
 c10502c:	e2844001 	add	r4, r4, #1
 c105030:	e0855008 	add	r5, r5, r8
 c105034:	e3540007 	cmp	r4, #7
 c105038:	e586a000 	str	sl, [r6]
 c10503c:	e5868004 	str	r8, [r6, #4]
 c105040:	e58d50e4 	str	r5, [sp, #228]	; 0xe4
 c105044:	e58d40e0 	str	r4, [sp, #224]	; 0xe0
 c105048:	ca00036c 	bgt	c105e00 <_svfprintf_r+0x1388>
 c10504c:	e5dd2107 	ldrb	r2, [sp, #263]	; 0x107
 c105050:	e1a06003 	mov	r6, r3
 c105054:	ea000149 	b	c105580 <_svfprintf_r+0xb08>
 c105058:	e59d1018 	ldr	r1, [sp, #24]
 c10505c:	e3110008 	tst	r1, #8
 c105060:	e58dc01c 	str	ip, [sp, #28]
 c105064:	e58d3048 	str	r3, [sp, #72]	; 0x48
 c105068:	e1a08003 	mov	r8, r3
 c10506c:	0a000416 	beq	c1060cc <_svfprintf_r+0x1654>
 c105070:	e59d203c 	ldr	r2, [sp, #60]	; 0x3c
 c105074:	e2823007 	add	r3, r2, #7
 c105078:	e3c33007 	bic	r3, r3, #7
 c10507c:	e5930000 	ldr	r0, [r3]
 c105080:	e283c008 	add	ip, r3, #8
 c105084:	e5933004 	ldr	r3, [r3, #4]
 c105088:	e58dc03c 	str	ip, [sp, #60]	; 0x3c
 c10508c:	e58d0058 	str	r0, [sp, #88]	; 0x58
 c105090:	e58d305c 	str	r3, [sp, #92]	; 0x5c
 c105094:	e28d0058 	add	r0, sp, #88	; 0x58
 c105098:	e8900003 	ldm	r0, {r0, r1}
 c10509c:	eb0012a0 	bl	c109b24 <__fpclassifyd>
 c1050a0:	e3500001 	cmp	r0, #1
 c1050a4:	1a0003f2 	bne	c106074 <_svfprintf_r+0x15fc>
 c1050a8:	e3a02000 	mov	r2, #0
 c1050ac:	e59d105c 	ldr	r1, [sp, #92]	; 0x5c
 c1050b0:	e3a03000 	mov	r3, #0
 c1050b4:	e59d0058 	ldr	r0, [sp, #88]	; 0x58
 c1050b8:	eb001be0 	bl	c10c040 <__aeabi_dcmplt>
 c1050bc:	e3a01000 	mov	r1, #0
 c1050c0:	e3500000 	cmp	r0, #0
 c1050c4:	e59dc048 	ldr	ip, [sp, #72]	; 0x48
 c1050c8:	13a0202d 	movne	r2, #45	; 0x2d
 c1050cc:	e3a00003 	mov	r0, #3
 c1050d0:	e58d104c 	str	r1, [sp, #76]	; 0x4c
 c1050d4:	e59f1e20 	ldr	r1, [pc, #3616]	; c105efc <_svfprintf_r+0x1484>
 c1050d8:	e59f3e20 	ldr	r3, [pc, #3616]	; c105f00 <_svfprintf_r+0x1488>
 c1050dc:	05dd2107 	ldrbeq	r2, [sp, #263]	; 0x107
 c1050e0:	15cd2107 	strbne	r2, [sp, #263]	; 0x107
 c1050e4:	e58d0020 	str	r0, [sp, #32]
 c1050e8:	e35c0047 	cmp	ip, #71	; 0x47
 c1050ec:	e59d0018 	ldr	r0, [sp, #24]
 c1050f0:	d1a03001 	movle	r3, r1
 c1050f4:	e58d3040 	str	r3, [sp, #64]	; 0x40
 c1050f8:	e3c00080 	bic	r0, r0, #128	; 0x80
 c1050fc:	e3a01003 	mov	r1, #3
 c105100:	e3a03000 	mov	r3, #0
 c105104:	e58d0018 	str	r0, [sp, #24]
 c105108:	e58d1034 	str	r1, [sp, #52]	; 0x34
 c10510c:	e58d3050 	str	r3, [sp, #80]	; 0x50
 c105110:	eaffff8b 	b	c104f44 <_svfprintf_r+0x4cc>
 c105114:	e59d2018 	ldr	r2, [sp, #24]
 c105118:	e3822008 	orr	r2, r2, #8
 c10511c:	e58d2018 	str	r2, [sp, #24]
 c105120:	e5dc3000 	ldrb	r3, [ip]
 c105124:	eafffea0 	b	c104bac <_svfprintf_r+0x134>
 c105128:	e59d1018 	ldr	r1, [sp, #24]
 c10512c:	e3811010 	orr	r1, r1, #16
 c105130:	e58d1018 	str	r1, [sp, #24]
 c105134:	e59d2018 	ldr	r2, [sp, #24]
 c105138:	e58d3048 	str	r3, [sp, #72]	; 0x48
 c10513c:	e2123020 	ands	r3, r2, #32
 c105140:	e58dc01c 	str	ip, [sp, #28]
 c105144:	0a00005d 	beq	c1052c0 <_svfprintf_r+0x848>
 c105148:	e59dc03c 	ldr	ip, [sp, #60]	; 0x3c
 c10514c:	e28c3007 	add	r3, ip, #7
 c105150:	e3c33007 	bic	r3, r3, #7
 c105154:	e8930300 	ldm	r3, {r8, r9}
 c105158:	e2833008 	add	r3, r3, #8
 c10515c:	e1980009 	orrs	r0, r8, r9
 c105160:	e58d303c 	str	r3, [sp, #60]	; 0x3c
 c105164:	03a02000 	moveq	r2, #0
 c105168:	13a02001 	movne	r2, #1
 c10516c:	e3a03000 	mov	r3, #0
 c105170:	e3a01000 	mov	r1, #0
 c105174:	e5cd1107 	strb	r1, [sp, #263]	; 0x107
 c105178:	eaffff47 	b	c104e9c <_svfprintf_r+0x424>
 c10517c:	e59d0018 	ldr	r0, [sp, #24]
 c105180:	e3800010 	orr	r0, r0, #16
 c105184:	e58d0018 	str	r0, [sp, #24]
 c105188:	e59d1018 	ldr	r1, [sp, #24]
 c10518c:	e3110020 	tst	r1, #32
 c105190:	e58dc01c 	str	ip, [sp, #28]
 c105194:	e58d3048 	str	r3, [sp, #72]	; 0x48
 c105198:	0a00007e 	beq	c105398 <_svfprintf_r+0x920>
 c10519c:	e59d203c 	ldr	r2, [sp, #60]	; 0x3c
 c1051a0:	e2823007 	add	r3, r2, #7
 c1051a4:	e3c33007 	bic	r3, r3, #7
 c1051a8:	e8930300 	ldm	r3, {r8, r9}
 c1051ac:	e2833008 	add	r3, r3, #8
 c1051b0:	e198c009 	orrs	ip, r8, r9
 c1051b4:	e58d303c 	str	r3, [sp, #60]	; 0x3c
 c1051b8:	03a02000 	moveq	r2, #0
 c1051bc:	13a02001 	movne	r2, #1
 c1051c0:	e3a03001 	mov	r3, #1
 c1051c4:	eaffffe9 	b	c105170 <_svfprintf_r+0x6f8>
 c1051c8:	e58d3048 	str	r3, [sp, #72]	; 0x48
 c1051cc:	e59d3018 	ldr	r3, [sp, #24]
 c1051d0:	e59f2d2c 	ldr	r2, [pc, #3372]	; c105f04 <_svfprintf_r+0x148c>
 c1051d4:	e3130020 	tst	r3, #32
 c1051d8:	e58dc01c 	str	ip, [sp, #28]
 c1051dc:	e58d2068 	str	r2, [sp, #104]	; 0x68
 c1051e0:	0a0000dc 	beq	c105558 <_svfprintf_r+0xae0>
 c1051e4:	e59dc03c 	ldr	ip, [sp, #60]	; 0x3c
 c1051e8:	e28c3007 	add	r3, ip, #7
 c1051ec:	e3c33007 	bic	r3, r3, #7
 c1051f0:	e2830008 	add	r0, r3, #8
 c1051f4:	e58d003c 	str	r0, [sp, #60]	; 0x3c
 c1051f8:	e8930300 	ldm	r3, {r8, r9}
 c1051fc:	e59d3018 	ldr	r3, [sp, #24]
 c105200:	e1981009 	orrs	r1, r8, r9
 c105204:	03a02000 	moveq	r2, #0
 c105208:	13a02001 	movne	r2, #1
 c10520c:	e1130002 	tst	r3, r2
 c105210:	159d0018 	ldrne	r0, [sp, #24]
 c105214:	159dc048 	ldrne	ip, [sp, #72]	; 0x48
 c105218:	13a03030 	movne	r3, #48	; 0x30
 c10521c:	13800002 	orrne	r0, r0, #2
 c105220:	15cd3104 	strbne	r3, [sp, #260]	; 0x104
 c105224:	15cdc105 	strbne	ip, [sp, #261]	; 0x105
 c105228:	158d0018 	strne	r0, [sp, #24]
 c10522c:	13a02001 	movne	r2, #1
 c105230:	e3a03002 	mov	r3, #2
 c105234:	eaffffcd 	b	c105170 <_svfprintf_r+0x6f8>
 c105238:	e59d3018 	ldr	r3, [sp, #24]
 c10523c:	e3833020 	orr	r3, r3, #32
 c105240:	e58d3018 	str	r3, [sp, #24]
 c105244:	e5dc3000 	ldrb	r3, [ip]
 c105248:	eafffe57 	b	c104bac <_svfprintf_r+0x134>
 c10524c:	e5dc3000 	ldrb	r3, [ip]
 c105250:	e353006c 	cmp	r3, #108	; 0x6c
 c105254:	059d0018 	ldreq	r0, [sp, #24]
 c105258:	159d2018 	ldrne	r2, [sp, #24]
 c10525c:	03800020 	orreq	r0, r0, #32
 c105260:	058d0018 	streq	r0, [sp, #24]
 c105264:	13822010 	orrne	r2, r2, #16
 c105268:	05fc3001 	ldrbeq	r3, [ip, #1]!
 c10526c:	158d2018 	strne	r2, [sp, #24]
 c105270:	eafffe4d 	b	c104bac <_svfprintf_r+0x134>
 c105274:	e59d1018 	ldr	r1, [sp, #24]
 c105278:	e3110020 	tst	r1, #32
 c10527c:	e58dc01c 	str	ip, [sp, #28]
 c105280:	0a0003c2 	beq	c106190 <_svfprintf_r+0x1718>
 c105284:	e59d203c 	ldr	r2, [sp, #60]	; 0x3c
 c105288:	e59dc030 	ldr	ip, [sp, #48]	; 0x30
 c10528c:	e59d003c 	ldr	r0, [sp, #60]	; 0x3c
 c105290:	e5923000 	ldr	r3, [r2]
 c105294:	e2800004 	add	r0, r0, #4
 c105298:	e1a0100c 	mov	r1, ip
 c10529c:	e1a02fc1 	asr	r2, r1, #31
 c1052a0:	e8830006 	stm	r3, {r1, r2}
 c1052a4:	e58d003c 	str	r0, [sp, #60]	; 0x3c
 c1052a8:	eafffe14 	b	c104b00 <_svfprintf_r+0x88>
 c1052ac:	e59d2018 	ldr	r2, [sp, #24]
 c1052b0:	e58d3048 	str	r3, [sp, #72]	; 0x48
 c1052b4:	e2123020 	ands	r3, r2, #32
 c1052b8:	e58dc01c 	str	ip, [sp, #28]
 c1052bc:	1affffa1 	bne	c105148 <_svfprintf_r+0x6d0>
 c1052c0:	e59d1018 	ldr	r1, [sp, #24]
 c1052c4:	e2112010 	ands	r2, r1, #16
 c1052c8:	0a000396 	beq	c106128 <_svfprintf_r+0x16b0>
 c1052cc:	e59dc03c 	ldr	ip, [sp, #60]	; 0x3c
 c1052d0:	e59c2000 	ldr	r2, [ip]
 c1052d4:	e28cc004 	add	ip, ip, #4
 c1052d8:	e1a08002 	mov	r8, r2
 c1052dc:	e3a09000 	mov	r9, #0
 c1052e0:	e2522000 	subs	r2, r2, #0
 c1052e4:	13a02001 	movne	r2, #1
 c1052e8:	e58dc03c 	str	ip, [sp, #60]	; 0x3c
 c1052ec:	eaffff9f 	b	c105170 <_svfprintf_r+0x6f8>
 c1052f0:	e3530000 	cmp	r3, #0
 c1052f4:	e58dc01c 	str	ip, [sp, #28]
 c1052f8:	e58d3048 	str	r3, [sp, #72]	; 0x48
 c1052fc:	0afffe99 	beq	c104d68 <_svfprintf_r+0x2f0>
 c105300:	e3a02000 	mov	r2, #0
 c105304:	e3a0c001 	mov	ip, #1
 c105308:	e3a00000 	mov	r0, #0
 c10530c:	e28d10b4 	add	r1, sp, #180	; 0xb4
 c105310:	e58dc020 	str	ip, [sp, #32]
 c105314:	e5cd30b4 	strb	r3, [sp, #180]	; 0xb4
 c105318:	e5cd0107 	strb	r0, [sp, #263]	; 0x107
 c10531c:	e58dc034 	str	ip, [sp, #52]	; 0x34
 c105320:	e58d204c 	str	r2, [sp, #76]	; 0x4c
 c105324:	e58d2050 	str	r2, [sp, #80]	; 0x50
 c105328:	e58d1040 	str	r1, [sp, #64]	; 0x40
 c10532c:	eaffff09 	b	c104f58 <_svfprintf_r+0x4e0>
 c105330:	e5dd3107 	ldrb	r3, [sp, #263]	; 0x107
 c105334:	e3530000 	cmp	r3, #0
 c105338:	15dc3000 	ldrbne	r3, [ip]
 c10533c:	05cd4107 	strbeq	r4, [sp, #263]	; 0x107
 c105340:	05dc3000 	ldrbeq	r3, [ip]
 c105344:	eafffe18 	b	c104bac <_svfprintf_r+0x134>
 c105348:	e59d3018 	ldr	r3, [sp, #24]
 c10534c:	e3833001 	orr	r3, r3, #1
 c105350:	e58d3018 	str	r3, [sp, #24]
 c105354:	e5dc3000 	ldrb	r3, [ip]
 c105358:	eafffe13 	b	c104bac <_svfprintf_r+0x134>
 c10535c:	e59d003c 	ldr	r0, [sp, #60]	; 0x3c
 c105360:	e5900000 	ldr	r0, [r0]
 c105364:	e59d303c 	ldr	r3, [sp, #60]	; 0x3c
 c105368:	e3500000 	cmp	r0, #0
 c10536c:	e58d0028 	str	r0, [sp, #40]	; 0x28
 c105370:	e2832004 	add	r2, r3, #4
 c105374:	bafffe6a 	blt	c104d24 <_svfprintf_r+0x2ac>
 c105378:	e5dc3000 	ldrb	r3, [ip]
 c10537c:	e58d203c 	str	r2, [sp, #60]	; 0x3c
 c105380:	eafffe09 	b	c104bac <_svfprintf_r+0x134>
 c105384:	e59d1018 	ldr	r1, [sp, #24]
 c105388:	e3110020 	tst	r1, #32
 c10538c:	e58dc01c 	str	ip, [sp, #28]
 c105390:	e58d3048 	str	r3, [sp, #72]	; 0x48
 c105394:	1affff80 	bne	c10519c <_svfprintf_r+0x724>
 c105398:	e59d0018 	ldr	r0, [sp, #24]
 c10539c:	e3100010 	tst	r0, #16
 c1053a0:	0a000352 	beq	c1060f0 <_svfprintf_r+0x1678>
 c1053a4:	e59d103c 	ldr	r1, [sp, #60]	; 0x3c
 c1053a8:	e5912000 	ldr	r2, [r1]
 c1053ac:	e2811004 	add	r1, r1, #4
 c1053b0:	e1a08002 	mov	r8, r2
 c1053b4:	e3a09000 	mov	r9, #0
 c1053b8:	e2522000 	subs	r2, r2, #0
 c1053bc:	e3a03001 	mov	r3, #1
 c1053c0:	13a02001 	movne	r2, #1
 c1053c4:	e58d103c 	str	r1, [sp, #60]	; 0x3c
 c1053c8:	eaffff68 	b	c105170 <_svfprintf_r+0x6f8>
 c1053cc:	e59d0018 	ldr	r0, [sp, #24]
 c1053d0:	e3100020 	tst	r0, #32
 c1053d4:	e58dc01c 	str	ip, [sp, #28]
 c1053d8:	e58d3048 	str	r3, [sp, #72]	; 0x48
 c1053dc:	1afffea1 	bne	c104e68 <_svfprintf_r+0x3f0>
 c1053e0:	e59d3018 	ldr	r3, [sp, #24]
 c1053e4:	e3130010 	tst	r3, #16
 c1053e8:	0a000372 	beq	c1061b8 <_svfprintf_r+0x1740>
 c1053ec:	e59dc03c 	ldr	ip, [sp, #60]	; 0x3c
 c1053f0:	e59c8000 	ldr	r8, [ip]
 c1053f4:	e28cc004 	add	ip, ip, #4
 c1053f8:	e58dc03c 	str	ip, [sp, #60]	; 0x3c
 c1053fc:	e1a09fc8 	asr	r9, r8, #31
 c105400:	eafffe9e 	b	c104e80 <_svfprintf_r+0x408>
 c105404:	e59d3018 	ldr	r3, [sp, #24]
 c105408:	e3833040 	orr	r3, r3, #64	; 0x40
 c10540c:	e58d3018 	str	r3, [sp, #24]
 c105410:	e5dc3000 	ldrb	r3, [ip]
 c105414:	eafffde4 	b	c104bac <_svfprintf_r+0x134>
 c105418:	e58d3048 	str	r3, [sp, #72]	; 0x48
 c10541c:	e59d303c 	ldr	r3, [sp, #60]	; 0x3c
 c105420:	e59d003c 	ldr	r0, [sp, #60]	; 0x3c
 c105424:	e5933000 	ldr	r3, [r3]
 c105428:	e3a02000 	mov	r2, #0
 c10542c:	e58dc01c 	str	ip, [sp, #28]
 c105430:	e2800004 	add	r0, r0, #4
 c105434:	e3a0c001 	mov	ip, #1
 c105438:	e5cd30b4 	strb	r3, [sp, #180]	; 0xb4
 c10543c:	e3a01000 	mov	r1, #0
 c105440:	e28d30b4 	add	r3, sp, #180	; 0xb4
 c105444:	e58dc020 	str	ip, [sp, #32]
 c105448:	e58d003c 	str	r0, [sp, #60]	; 0x3c
 c10544c:	e5cd1107 	strb	r1, [sp, #263]	; 0x107
 c105450:	e58dc034 	str	ip, [sp, #52]	; 0x34
 c105454:	e58d204c 	str	r2, [sp, #76]	; 0x4c
 c105458:	e58d2050 	str	r2, [sp, #80]	; 0x50
 c10545c:	e58d3040 	str	r3, [sp, #64]	; 0x40
 c105460:	eafffebc 	b	c104f58 <_svfprintf_r+0x4e0>
 c105464:	e59d303c 	ldr	r3, [sp, #60]	; 0x3c
 c105468:	e58dc01c 	str	ip, [sp, #28]
 c10546c:	e5932000 	ldr	r2, [r3]
 c105470:	e59dc018 	ldr	ip, [sp, #24]
 c105474:	e2833004 	add	r3, r3, #4
 c105478:	e59f0a88 	ldr	r0, [pc, #2696]	; c105f08 <_svfprintf_r+0x1490>
 c10547c:	e3a01078 	mov	r1, #120	; 0x78
 c105480:	e58d303c 	str	r3, [sp, #60]	; 0x3c
 c105484:	e38cc002 	orr	ip, ip, #2
 c105488:	e3a03030 	mov	r3, #48	; 0x30
 c10548c:	e1a08002 	mov	r8, r2
 c105490:	e3a09000 	mov	r9, #0
 c105494:	e2522000 	subs	r2, r2, #0
 c105498:	e5cd3104 	strb	r3, [sp, #260]	; 0x104
 c10549c:	e58dc018 	str	ip, [sp, #24]
 c1054a0:	e5cd1105 	strb	r1, [sp, #261]	; 0x105
 c1054a4:	13a02001 	movne	r2, #1
 c1054a8:	e58d0068 	str	r0, [sp, #104]	; 0x68
 c1054ac:	e3a03002 	mov	r3, #2
 c1054b0:	e58d1048 	str	r1, [sp, #72]	; 0x48
 c1054b4:	eaffff2d 	b	c105170 <_svfprintf_r+0x6f8>
 c1054b8:	e3a01000 	mov	r1, #0
 c1054bc:	e5cd1107 	strb	r1, [sp, #263]	; 0x107
 c1054c0:	e59d203c 	ldr	r2, [sp, #60]	; 0x3c
 c1054c4:	e5922000 	ldr	r2, [r2]
 c1054c8:	e58d3048 	str	r3, [sp, #72]	; 0x48
 c1054cc:	e59d303c 	ldr	r3, [sp, #60]	; 0x3c
 c1054d0:	e3520000 	cmp	r2, #0
 c1054d4:	e58dc01c 	str	ip, [sp, #28]
 c1054d8:	e58d2040 	str	r2, [sp, #64]	; 0x40
 c1054dc:	e2834004 	add	r4, r3, #4
 c1054e0:	0a000536 	beq	c1069c0 <_svfprintf_r+0x1f48>
 c1054e4:	e3550000 	cmp	r5, #0
 c1054e8:	ba00050e 	blt	c106928 <_svfprintf_r+0x1eb0>
 c1054ec:	e59d0040 	ldr	r0, [sp, #64]	; 0x40
 c1054f0:	e3a01000 	mov	r1, #0
 c1054f4:	e1a02005 	mov	r2, r5
 c1054f8:	eb000d97 	bl	c108b5c <memchr>
 c1054fc:	e3500000 	cmp	r0, #0
 c105500:	0a00056b 	beq	c106ab4 <_svfprintf_r+0x203c>
 c105504:	e59d2040 	ldr	r2, [sp, #64]	; 0x40
 c105508:	e0620000 	rsb	r0, r2, r0
 c10550c:	e1500005 	cmp	r0, r5
 c105510:	e58d0034 	str	r0, [sp, #52]	; 0x34
 c105514:	da0003e2 	ble	c1064a4 <_svfprintf_r+0x1a2c>
 c105518:	e3a03000 	mov	r3, #0
 c10551c:	e1c5cfc5 	bic	ip, r5, r5, asr #31
 c105520:	e58d304c 	str	r3, [sp, #76]	; 0x4c
 c105524:	e58dc020 	str	ip, [sp, #32]
 c105528:	e5dd2107 	ldrb	r2, [sp, #263]	; 0x107
 c10552c:	e58d403c 	str	r4, [sp, #60]	; 0x3c
 c105530:	e58d5034 	str	r5, [sp, #52]	; 0x34
 c105534:	e58d3050 	str	r3, [sp, #80]	; 0x50
 c105538:	eafffe81 	b	c104f44 <_svfprintf_r+0x4cc>
 c10553c:	e58d3048 	str	r3, [sp, #72]	; 0x48
 c105540:	e59d3018 	ldr	r3, [sp, #24]
 c105544:	e59f19bc 	ldr	r1, [pc, #2492]	; c105f08 <_svfprintf_r+0x1490>
 c105548:	e3130020 	tst	r3, #32
 c10554c:	e58dc01c 	str	ip, [sp, #28]
 c105550:	e58d1068 	str	r1, [sp, #104]	; 0x68
 c105554:	1affff22 	bne	c1051e4 <_svfprintf_r+0x76c>
 c105558:	e59d1018 	ldr	r1, [sp, #24]
 c10555c:	e3110010 	tst	r1, #16
 c105560:	0a0002fe 	beq	c106160 <_svfprintf_r+0x16e8>
 c105564:	e59d203c 	ldr	r2, [sp, #60]	; 0x3c
 c105568:	e5928000 	ldr	r8, [r2]
 c10556c:	e2822004 	add	r2, r2, #4
 c105570:	e58d203c 	str	r2, [sp, #60]	; 0x3c
 c105574:	e3a09000 	mov	r9, #0
 c105578:	eaffff1f 	b	c1051fc <_svfprintf_r+0x784>
 c10557c:	e59d50e4 	ldr	r5, [sp, #228]	; 0xe4
 c105580:	e3520000 	cmp	r2, #0
 c105584:	0a00000c 	beq	c1055bc <_svfprintf_r+0xb44>
 c105588:	e59d40e0 	ldr	r4, [sp, #224]	; 0xe0
 c10558c:	e28d3f41 	add	r3, sp, #260	; 0x104
 c105590:	e2844001 	add	r4, r4, #1
 c105594:	e2833003 	add	r3, r3, #3
 c105598:	e5863000 	str	r3, [r6]
 c10559c:	e2855001 	add	r5, r5, #1
 c1055a0:	e3540007 	cmp	r4, #7
 c1055a4:	e3a03001 	mov	r3, #1
 c1055a8:	e5863004 	str	r3, [r6, #4]
 c1055ac:	e58d50e4 	str	r5, [sp, #228]	; 0xe4
 c1055b0:	e58d40e0 	str	r4, [sp, #224]	; 0xe0
 c1055b4:	d2866008 	addle	r6, r6, #8
 c1055b8:	ca00019f 	bgt	c105c3c <_svfprintf_r+0x11c4>
 c1055bc:	e35b0000 	cmp	fp, #0
 c1055c0:	0a00000b 	beq	c1055f4 <_svfprintf_r+0xb7c>
 c1055c4:	e59d40e0 	ldr	r4, [sp, #224]	; 0xe0
 c1055c8:	e28d3f41 	add	r3, sp, #260	; 0x104
 c1055cc:	e2844001 	add	r4, r4, #1
 c1055d0:	e5863000 	str	r3, [r6]
 c1055d4:	e2855002 	add	r5, r5, #2
 c1055d8:	e3540007 	cmp	r4, #7
 c1055dc:	e3a03002 	mov	r3, #2
 c1055e0:	e5863004 	str	r3, [r6, #4]
 c1055e4:	e58d50e4 	str	r5, [sp, #228]	; 0xe4
 c1055e8:	e58d40e0 	str	r4, [sp, #224]	; 0xe0
 c1055ec:	d2866008 	addle	r6, r6, #8
 c1055f0:	ca00019a 	bgt	c105c60 <_svfprintf_r+0x11e8>
 c1055f4:	e59d0044 	ldr	r0, [sp, #68]	; 0x44
 c1055f8:	e3500080 	cmp	r0, #128	; 0x80
 c1055fc:	0a000102 	beq	c105a0c <_svfprintf_r+0xf94>
 c105600:	e59d304c 	ldr	r3, [sp, #76]	; 0x4c
 c105604:	e59dc034 	ldr	ip, [sp, #52]	; 0x34
 c105608:	e06c8003 	rsb	r8, ip, r3
 c10560c:	e3580000 	cmp	r8, #0
 c105610:	da00013b 	ble	c105b04 <_svfprintf_r+0x108c>
 c105614:	e3580010 	cmp	r8, #16
 c105618:	da000352 	ble	c106368 <_svfprintf_r+0x18f0>
 c10561c:	e59d40e0 	ldr	r4, [sp, #224]	; 0xe0
 c105620:	e59fa8fc 	ldr	sl, [pc, #2300]	; c105f24 <_svfprintf_r+0x14ac>
 c105624:	e1a03004 	mov	r3, r4
 c105628:	e3a0b010 	mov	fp, #16
 c10562c:	e59d9038 	ldr	r9, [sp, #56]	; 0x38
 c105630:	e59d4024 	ldr	r4, [sp, #36]	; 0x24
 c105634:	ea000002 	b	c105644 <_svfprintf_r+0xbcc>
 c105638:	e2488010 	sub	r8, r8, #16
 c10563c:	e3580010 	cmp	r8, #16
 c105640:	da000015 	ble	c10569c <_svfprintf_r+0xc24>
 c105644:	e2833001 	add	r3, r3, #1
 c105648:	e3530007 	cmp	r3, #7
 c10564c:	e8860c00 	stm	r6, {sl, fp}
 c105650:	e2855010 	add	r5, r5, #16
 c105654:	d2866008 	addle	r6, r6, #8
 c105658:	e58d50e4 	str	r5, [sp, #228]	; 0xe4
 c10565c:	e58d30e0 	str	r3, [sp, #224]	; 0xe0
 c105660:	d2862008 	addle	r2, r6, #8
 c105664:	dafffff3 	ble	c105638 <_svfprintf_r+0xbc0>
 c105668:	e1a00009 	mov	r0, r9
 c10566c:	e1a01004 	mov	r1, r4
 c105670:	e28d20dc 	add	r2, sp, #220	; 0xdc
 c105674:	eb001201 	bl	c109e80 <__ssprint_r>
 c105678:	e3500000 	cmp	r0, #0
 c10567c:	1afffdbf 	bne	c104d80 <_svfprintf_r+0x308>
 c105680:	e2488010 	sub	r8, r8, #16
 c105684:	e3580010 	cmp	r8, #16
 c105688:	e28d30e0 	add	r3, sp, #224	; 0xe0
 c10568c:	e8930028 	ldm	r3, {r3, r5}
 c105690:	e2872008 	add	r2, r7, #8
 c105694:	e1a06007 	mov	r6, r7
 c105698:	caffffe9 	bgt	c105644 <_svfprintf_r+0xbcc>
 c10569c:	e1a09002 	mov	r9, r2
 c1056a0:	e1a04003 	mov	r4, r3
 c1056a4:	e2844001 	add	r4, r4, #1
 c1056a8:	e0855008 	add	r5, r5, r8
 c1056ac:	e3540007 	cmp	r4, #7
 c1056b0:	e586a000 	str	sl, [r6]
 c1056b4:	e5868004 	str	r8, [r6, #4]
 c1056b8:	e58d50e4 	str	r5, [sp, #228]	; 0xe4
 c1056bc:	e58d40e0 	str	r4, [sp, #224]	; 0xe0
 c1056c0:	ca000154 	bgt	c105c18 <_svfprintf_r+0x11a0>
 c1056c4:	e59d0018 	ldr	r0, [sp, #24]
 c1056c8:	e3100c01 	tst	r0, #256	; 0x100
 c1056cc:	1a000075 	bne	c1058a8 <_svfprintf_r+0xe30>
 c1056d0:	e59d40e0 	ldr	r4, [sp, #224]	; 0xe0
 c1056d4:	e59d1034 	ldr	r1, [sp, #52]	; 0x34
 c1056d8:	e2844001 	add	r4, r4, #1
 c1056dc:	e59d2040 	ldr	r2, [sp, #64]	; 0x40
 c1056e0:	e0855001 	add	r5, r5, r1
 c1056e4:	e3540007 	cmp	r4, #7
 c1056e8:	e5892000 	str	r2, [r9]
 c1056ec:	e5891004 	str	r1, [r9, #4]
 c1056f0:	e58d50e4 	str	r5, [sp, #228]	; 0xe4
 c1056f4:	e58d40e0 	str	r4, [sp, #224]	; 0xe0
 c1056f8:	ca000061 	bgt	c105884 <_svfprintf_r+0xe0c>
 c1056fc:	e2899008 	add	r9, r9, #8
 c105700:	e59d3018 	ldr	r3, [sp, #24]
 c105704:	e3130004 	tst	r3, #4
 c105708:	0a000037 	beq	c1057ec <_svfprintf_r+0xd74>
 c10570c:	e59dc028 	ldr	ip, [sp, #40]	; 0x28
 c105710:	e59d0020 	ldr	r0, [sp, #32]
 c105714:	e060600c 	rsb	r6, r0, ip
 c105718:	e3560000 	cmp	r6, #0
 c10571c:	da000032 	ble	c1057ec <_svfprintf_r+0xd74>
 c105720:	e3560010 	cmp	r6, #16
 c105724:	d59d40e0 	ldrle	r4, [sp, #224]	; 0xe0
 c105728:	d59fa7c8 	ldrle	sl, [pc, #1992]	; c105ef8 <_svfprintf_r+0x1480>
 c10572c:	da00001f 	ble	c1057b0 <_svfprintf_r+0xd38>
 c105730:	e59d40e0 	ldr	r4, [sp, #224]	; 0xe0
 c105734:	e59fa7bc 	ldr	sl, [pc, #1980]	; c105ef8 <_svfprintf_r+0x1480>
 c105738:	e1a03004 	mov	r3, r4
 c10573c:	e3a08010 	mov	r8, #16
 c105740:	e59db038 	ldr	fp, [sp, #56]	; 0x38
 c105744:	e59d4024 	ldr	r4, [sp, #36]	; 0x24
 c105748:	ea000002 	b	c105758 <_svfprintf_r+0xce0>
 c10574c:	e2466010 	sub	r6, r6, #16
 c105750:	e3560010 	cmp	r6, #16
 c105754:	da000014 	ble	c1057ac <_svfprintf_r+0xd34>
 c105758:	e2833001 	add	r3, r3, #1
 c10575c:	e3530007 	cmp	r3, #7
 c105760:	e2855010 	add	r5, r5, #16
 c105764:	e589a000 	str	sl, [r9]
 c105768:	e5898004 	str	r8, [r9, #4]
 c10576c:	e58d50e4 	str	r5, [sp, #228]	; 0xe4
 c105770:	e58d30e0 	str	r3, [sp, #224]	; 0xe0
 c105774:	d2899008 	addle	r9, r9, #8
 c105778:	dafffff3 	ble	c10574c <_svfprintf_r+0xcd4>
 c10577c:	e1a0000b 	mov	r0, fp
 c105780:	e1a01004 	mov	r1, r4
 c105784:	e28d20dc 	add	r2, sp, #220	; 0xdc
 c105788:	eb0011bc 	bl	c109e80 <__ssprint_r>
 c10578c:	e3500000 	cmp	r0, #0
 c105790:	1afffd7a 	bne	c104d80 <_svfprintf_r+0x308>
 c105794:	e2466010 	sub	r6, r6, #16
 c105798:	e3560010 	cmp	r6, #16
 c10579c:	e28d30e0 	add	r3, sp, #224	; 0xe0
 c1057a0:	e8930028 	ldm	r3, {r3, r5}
 c1057a4:	e1a09007 	mov	r9, r7
 c1057a8:	caffffea 	bgt	c105758 <_svfprintf_r+0xce0>
 c1057ac:	e1a04003 	mov	r4, r3
 c1057b0:	e2844001 	add	r4, r4, #1
 c1057b4:	e0865005 	add	r5, r6, r5
 c1057b8:	e3540007 	cmp	r4, #7
 c1057bc:	e589a000 	str	sl, [r9]
 c1057c0:	e5896004 	str	r6, [r9, #4]
 c1057c4:	e58d50e4 	str	r5, [sp, #228]	; 0xe4
 c1057c8:	e58d40e0 	str	r4, [sp, #224]	; 0xe0
 c1057cc:	da000006 	ble	c1057ec <_svfprintf_r+0xd74>
 c1057d0:	e59d0038 	ldr	r0, [sp, #56]	; 0x38
 c1057d4:	e59d1024 	ldr	r1, [sp, #36]	; 0x24
 c1057d8:	e28d20dc 	add	r2, sp, #220	; 0xdc
 c1057dc:	eb0011a7 	bl	c109e80 <__ssprint_r>
 c1057e0:	e3500000 	cmp	r0, #0
 c1057e4:	1afffd65 	bne	c104d80 <_svfprintf_r+0x308>
 c1057e8:	e59d50e4 	ldr	r5, [sp, #228]	; 0xe4
 c1057ec:	e59d1030 	ldr	r1, [sp, #48]	; 0x30
 c1057f0:	e59d2020 	ldr	r2, [sp, #32]
 c1057f4:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
 c1057f8:	e1520003 	cmp	r2, r3
 c1057fc:	a0811002 	addge	r1, r1, r2
 c105800:	b0811003 	addlt	r1, r1, r3
 c105804:	e3550000 	cmp	r5, #0
 c105808:	e58d1030 	str	r1, [sp, #48]	; 0x30
 c10580c:	1a0000f6 	bne	c105bec <_svfprintf_r+0x1174>
 c105810:	e3a0c000 	mov	ip, #0
 c105814:	e58dc0e0 	str	ip, [sp, #224]	; 0xe0
 c105818:	e1a06007 	mov	r6, r7
 c10581c:	eafffcb7 	b	c104b00 <_svfprintf_r+0x88>
 c105820:	e59d2018 	ldr	r2, [sp, #24]
 c105824:	e3120001 	tst	r2, #1
 c105828:	1a0000ba 	bne	c105b18 <_svfprintf_r+0x10a0>
 c10582c:	e59d40e0 	ldr	r4, [sp, #224]	; 0xe0
 c105830:	e59d1040 	ldr	r1, [sp, #64]	; 0x40
 c105834:	e2844001 	add	r4, r4, #1
 c105838:	e2855001 	add	r5, r5, #1
 c10583c:	e3a03001 	mov	r3, #1
 c105840:	e3540007 	cmp	r4, #7
 c105844:	e889000a 	stm	r9, {r1, r3}
 c105848:	e58d50e4 	str	r5, [sp, #228]	; 0xe4
 c10584c:	e58d40e0 	str	r4, [sp, #224]	; 0xe0
 c105850:	ca0003ff 	bgt	c106854 <_svfprintf_r+0x1ddc>
 c105854:	e289b008 	add	fp, r9, #8
 c105858:	e28b9008 	add	r9, fp, #8
 c10585c:	e59d2064 	ldr	r2, [sp, #100]	; 0x64
 c105860:	e2844001 	add	r4, r4, #1
 c105864:	e0855002 	add	r5, r5, r2
 c105868:	e28d30f0 	add	r3, sp, #240	; 0xf0
 c10586c:	e3540007 	cmp	r4, #7
 c105870:	e58b3000 	str	r3, [fp]
 c105874:	e58b2004 	str	r2, [fp, #4]
 c105878:	e58d50e4 	str	r5, [sp, #228]	; 0xe4
 c10587c:	e58d40e0 	str	r4, [sp, #224]	; 0xe0
 c105880:	daffff9e 	ble	c105700 <_svfprintf_r+0xc88>
 c105884:	e59d0038 	ldr	r0, [sp, #56]	; 0x38
 c105888:	e59d1024 	ldr	r1, [sp, #36]	; 0x24
 c10588c:	e28d20dc 	add	r2, sp, #220	; 0xdc
 c105890:	eb00117a 	bl	c109e80 <__ssprint_r>
 c105894:	e3500000 	cmp	r0, #0
 c105898:	1afffd38 	bne	c104d80 <_svfprintf_r+0x308>
 c10589c:	e1a09007 	mov	r9, r7
 c1058a0:	e59d50e4 	ldr	r5, [sp, #228]	; 0xe4
 c1058a4:	eaffff95 	b	c105700 <_svfprintf_r+0xc88>
 c1058a8:	e59d3048 	ldr	r3, [sp, #72]	; 0x48
 c1058ac:	e3530065 	cmp	r3, #101	; 0x65
 c1058b0:	da000095 	ble	c105b0c <_svfprintf_r+0x1094>
 c1058b4:	e28d0058 	add	r0, sp, #88	; 0x58
 c1058b8:	e8900003 	ldm	r0, {r0, r1}
 c1058bc:	e3a02000 	mov	r2, #0
 c1058c0:	e3a03000 	mov	r3, #0
 c1058c4:	eb0019d7 	bl	c10c028 <__aeabi_dcmpeq>
 c1058c8:	e3500000 	cmp	r0, #0
 c1058cc:	0a0000ec 	beq	c105c84 <_svfprintf_r+0x120c>
 c1058d0:	e59d40e0 	ldr	r4, [sp, #224]	; 0xe0
 c1058d4:	e59f3638 	ldr	r3, [pc, #1592]	; c105f14 <_svfprintf_r+0x149c>
 c1058d8:	e2844001 	add	r4, r4, #1
 c1058dc:	e5893000 	str	r3, [r9]
 c1058e0:	e2855001 	add	r5, r5, #1
 c1058e4:	e3540007 	cmp	r4, #7
 c1058e8:	e3a03001 	mov	r3, #1
 c1058ec:	e5893004 	str	r3, [r9, #4]
 c1058f0:	e58d50e4 	str	r5, [sp, #228]	; 0xe4
 c1058f4:	e58d40e0 	str	r4, [sp, #224]	; 0xe0
 c1058f8:	d2899008 	addle	r9, r9, #8
 c1058fc:	ca00029d 	bgt	c106378 <_svfprintf_r+0x1900>
 c105900:	e59d3100 	ldr	r3, [sp, #256]	; 0x100
 c105904:	e59dc02c 	ldr	ip, [sp, #44]	; 0x2c
 c105908:	e153000c 	cmp	r3, ip
 c10590c:	ba000002 	blt	c10591c <_svfprintf_r+0xea4>
 c105910:	e59d0018 	ldr	r0, [sp, #24]
 c105914:	e3100001 	tst	r0, #1
 c105918:	0affff78 	beq	c105700 <_svfprintf_r+0xc88>
 c10591c:	e59d40e0 	ldr	r4, [sp, #224]	; 0xe0
 c105920:	e59d1060 	ldr	r1, [sp, #96]	; 0x60
 c105924:	e2844001 	add	r4, r4, #1
 c105928:	e59d2054 	ldr	r2, [sp, #84]	; 0x54
 c10592c:	e0855001 	add	r5, r5, r1
 c105930:	e3540007 	cmp	r4, #7
 c105934:	e5892000 	str	r2, [r9]
 c105938:	e5891004 	str	r1, [r9, #4]
 c10593c:	d2893008 	addle	r3, r9, #8
 c105940:	e58d50e4 	str	r5, [sp, #228]	; 0xe4
 c105944:	e58d40e0 	str	r4, [sp, #224]	; 0xe0
 c105948:	ca00037f 	bgt	c10674c <_svfprintf_r+0x1cd4>
 c10594c:	e59dc02c 	ldr	ip, [sp, #44]	; 0x2c
 c105950:	e24c6001 	sub	r6, ip, #1
 c105954:	e3560000 	cmp	r6, #0
 c105958:	da000280 	ble	c106360 <_svfprintf_r+0x18e8>
 c10595c:	e3560010 	cmp	r6, #16
 c105960:	da00046a 	ble	c106b10 <_svfprintf_r+0x2098>
 c105964:	e59d40e0 	ldr	r4, [sp, #224]	; 0xe0
 c105968:	e59fa5b4 	ldr	sl, [pc, #1460]	; c105f24 <_svfprintf_r+0x14ac>
 c10596c:	e3a08010 	mov	r8, #16
 c105970:	e59db038 	ldr	fp, [sp, #56]	; 0x38
 c105974:	e59d9024 	ldr	r9, [sp, #36]	; 0x24
 c105978:	ea000002 	b	c105988 <_svfprintf_r+0xf10>
 c10597c:	e2466010 	sub	r6, r6, #16
 c105980:	e3560010 	cmp	r6, #16
 c105984:	da000167 	ble	c105f28 <_svfprintf_r+0x14b0>
 c105988:	e2844001 	add	r4, r4, #1
 c10598c:	e3540007 	cmp	r4, #7
 c105990:	e583a000 	str	sl, [r3]
 c105994:	e5838004 	str	r8, [r3, #4]
 c105998:	e2855010 	add	r5, r5, #16
 c10599c:	d2833008 	addle	r3, r3, #8
 c1059a0:	e58d50e4 	str	r5, [sp, #228]	; 0xe4
 c1059a4:	e58d40e0 	str	r4, [sp, #224]	; 0xe0
 c1059a8:	d2832008 	addle	r2, r3, #8
 c1059ac:	dafffff2 	ble	c10597c <_svfprintf_r+0xf04>
 c1059b0:	e1a0000b 	mov	r0, fp
 c1059b4:	e1a01009 	mov	r1, r9
 c1059b8:	e28d20dc 	add	r2, sp, #220	; 0xdc
 c1059bc:	eb00112f 	bl	c109e80 <__ssprint_r>
 c1059c0:	e3500000 	cmp	r0, #0
 c1059c4:	1afffced 	bne	c104d80 <_svfprintf_r+0x308>
 c1059c8:	e28d40e0 	add	r4, sp, #224	; 0xe0
 c1059cc:	e8940030 	ldm	r4, {r4, r5}
 c1059d0:	e2872008 	add	r2, r7, #8
 c1059d4:	e1a03007 	mov	r3, r7
 c1059d8:	eaffffe7 	b	c10597c <_svfprintf_r+0xf04>
 c1059dc:	e3530000 	cmp	r3, #0
 c1059e0:	1a000088 	bne	c105c08 <_svfprintf_r+0x1190>
 c1059e4:	e59d1018 	ldr	r1, [sp, #24]
 c1059e8:	e3110001 	tst	r1, #1
 c1059ec:	0a0000e0 	beq	c105d74 <_svfprintf_r+0x12fc>
 c1059f0:	e3a03030 	mov	r3, #48	; 0x30
 c1059f4:	e5cd30db 	strb	r3, [sp, #219]	; 0xdb
 c1059f8:	e3a02001 	mov	r2, #1
 c1059fc:	e28d30db 	add	r3, sp, #219	; 0xdb
 c105a00:	e58d2034 	str	r2, [sp, #52]	; 0x34
 c105a04:	e58d3040 	str	r3, [sp, #64]	; 0x40
 c105a08:	eafffd45 	b	c104f24 <_svfprintf_r+0x4ac>
 c105a0c:	e59d1028 	ldr	r1, [sp, #40]	; 0x28
 c105a10:	e59d2020 	ldr	r2, [sp, #32]
 c105a14:	e0628001 	rsb	r8, r2, r1
 c105a18:	e3580000 	cmp	r8, #0
 c105a1c:	dafffef7 	ble	c105600 <_svfprintf_r+0xb88>
 c105a20:	e3580010 	cmp	r8, #16
 c105a24:	da000413 	ble	c106a78 <_svfprintf_r+0x2000>
 c105a28:	e1a03006 	mov	r3, r6
 c105a2c:	e59d40e0 	ldr	r4, [sp, #224]	; 0xe0
 c105a30:	e59fa4ec 	ldr	sl, [pc, #1260]	; c105f24 <_svfprintf_r+0x14ac>
 c105a34:	e3a09010 	mov	r9, #16
 c105a38:	e59db038 	ldr	fp, [sp, #56]	; 0x38
 c105a3c:	e59d6024 	ldr	r6, [sp, #36]	; 0x24
 c105a40:	ea000002 	b	c105a50 <_svfprintf_r+0xfd8>
 c105a44:	e2488010 	sub	r8, r8, #16
 c105a48:	e3580010 	cmp	r8, #16
 c105a4c:	da000016 	ble	c105aac <_svfprintf_r+0x1034>
 c105a50:	e2844001 	add	r4, r4, #1
 c105a54:	e3540007 	cmp	r4, #7
 c105a58:	e583a000 	str	sl, [r3]
 c105a5c:	e5839004 	str	r9, [r3, #4]
 c105a60:	e2855010 	add	r5, r5, #16
 c105a64:	d2833008 	addle	r3, r3, #8
 c105a68:	e58d50e4 	str	r5, [sp, #228]	; 0xe4
 c105a6c:	e58d40e0 	str	r4, [sp, #224]	; 0xe0
 c105a70:	d2832008 	addle	r2, r3, #8
 c105a74:	dafffff2 	ble	c105a44 <_svfprintf_r+0xfcc>
 c105a78:	e1a0000b 	mov	r0, fp
 c105a7c:	e1a01006 	mov	r1, r6
 c105a80:	e28d20dc 	add	r2, sp, #220	; 0xdc
 c105a84:	eb0010fd 	bl	c109e80 <__ssprint_r>
 c105a88:	e3500000 	cmp	r0, #0
 c105a8c:	1afffcbb 	bne	c104d80 <_svfprintf_r+0x308>
 c105a90:	e2488010 	sub	r8, r8, #16
 c105a94:	e3580010 	cmp	r8, #16
 c105a98:	e28d40e0 	add	r4, sp, #224	; 0xe0
 c105a9c:	e8940030 	ldm	r4, {r4, r5}
 c105aa0:	e2872008 	add	r2, r7, #8
 c105aa4:	e1a03007 	mov	r3, r7
 c105aa8:	caffffe8 	bgt	c105a50 <_svfprintf_r+0xfd8>
 c105aac:	e1a06002 	mov	r6, r2
 c105ab0:	e2844001 	add	r4, r4, #1
 c105ab4:	e0855008 	add	r5, r5, r8
 c105ab8:	e3540007 	cmp	r4, #7
 c105abc:	e583a000 	str	sl, [r3]
 c105ac0:	e5838004 	str	r8, [r3, #4]
 c105ac4:	e58d50e4 	str	r5, [sp, #228]	; 0xe4
 c105ac8:	e58d40e0 	str	r4, [sp, #224]	; 0xe0
 c105acc:	dafffecb 	ble	c105600 <_svfprintf_r+0xb88>
 c105ad0:	e59d0038 	ldr	r0, [sp, #56]	; 0x38
 c105ad4:	e59d1024 	ldr	r1, [sp, #36]	; 0x24
 c105ad8:	e28d20dc 	add	r2, sp, #220	; 0xdc
 c105adc:	eb0010e7 	bl	c109e80 <__ssprint_r>
 c105ae0:	e3500000 	cmp	r0, #0
 c105ae4:	1afffca5 	bne	c104d80 <_svfprintf_r+0x308>
 c105ae8:	e59d304c 	ldr	r3, [sp, #76]	; 0x4c
 c105aec:	e59dc034 	ldr	ip, [sp, #52]	; 0x34
 c105af0:	e06c8003 	rsb	r8, ip, r3
 c105af4:	e3580000 	cmp	r8, #0
 c105af8:	e59d50e4 	ldr	r5, [sp, #228]	; 0xe4
 c105afc:	e1a06007 	mov	r6, r7
 c105b00:	cafffec3 	bgt	c105614 <_svfprintf_r+0xb9c>
 c105b04:	e1a09006 	mov	r9, r6
 c105b08:	eafffeed 	b	c1056c4 <_svfprintf_r+0xc4c>
 c105b0c:	e59d102c 	ldr	r1, [sp, #44]	; 0x2c
 c105b10:	e3510001 	cmp	r1, #1
 c105b14:	daffff41 	ble	c105820 <_svfprintf_r+0xda8>
 c105b18:	e59d40e0 	ldr	r4, [sp, #224]	; 0xe0
 c105b1c:	e59d3040 	ldr	r3, [sp, #64]	; 0x40
 c105b20:	e2844001 	add	r4, r4, #1
 c105b24:	e5893000 	str	r3, [r9]
 c105b28:	e3540007 	cmp	r4, #7
 c105b2c:	e3a03001 	mov	r3, #1
 c105b30:	e5893004 	str	r3, [r9, #4]
 c105b34:	e2855001 	add	r5, r5, #1
 c105b38:	d2899008 	addle	r9, r9, #8
 c105b3c:	e58d50e4 	str	r5, [sp, #228]	; 0xe4
 c105b40:	e58d40e0 	str	r4, [sp, #224]	; 0xe0
 c105b44:	d2896008 	addle	r6, r9, #8
 c105b48:	ca00010b 	bgt	c105f7c <_svfprintf_r+0x1504>
 c105b4c:	e59dc060 	ldr	ip, [sp, #96]	; 0x60
 c105b50:	e2844001 	add	r4, r4, #1
 c105b54:	e59d0054 	ldr	r0, [sp, #84]	; 0x54
 c105b58:	e085500c 	add	r5, r5, ip
 c105b5c:	e3540007 	cmp	r4, #7
 c105b60:	e8891001 	stm	r9, {r0, ip}
 c105b64:	d286b008 	addle	fp, r6, #8
 c105b68:	e58d50e4 	str	r5, [sp, #228]	; 0xe4
 c105b6c:	e58d40e0 	str	r4, [sp, #224]	; 0xe0
 c105b70:	ca0000f6 	bgt	c105f50 <_svfprintf_r+0x14d8>
 c105b74:	e28d0058 	add	r0, sp, #88	; 0x58
 c105b78:	e8900003 	ldm	r0, {r0, r1}
 c105b7c:	e3a02000 	mov	r2, #0
 c105b80:	e3a03000 	mov	r3, #0
 c105b84:	eb001927 	bl	c10c028 <__aeabi_dcmpeq>
 c105b88:	e3500000 	cmp	r0, #0
 c105b8c:	1a0000a5 	bne	c105e28 <_svfprintf_r+0x13b0>
 c105b90:	e59d102c 	ldr	r1, [sp, #44]	; 0x2c
 c105b94:	e59dc040 	ldr	ip, [sp, #64]	; 0x40
 c105b98:	e2412001 	sub	r2, r1, #1
 c105b9c:	e2844001 	add	r4, r4, #1
 c105ba0:	e28c3001 	add	r3, ip, #1
 c105ba4:	e0855002 	add	r5, r5, r2
 c105ba8:	e3540007 	cmp	r4, #7
 c105bac:	e5863000 	str	r3, [r6]
 c105bb0:	e5862004 	str	r2, [r6, #4]
 c105bb4:	e58d50e4 	str	r5, [sp, #228]	; 0xe4
 c105bb8:	e58d40e0 	str	r4, [sp, #224]	; 0xe0
 c105bbc:	daffff25 	ble	c105858 <_svfprintf_r+0xde0>
 c105bc0:	e59d0038 	ldr	r0, [sp, #56]	; 0x38
 c105bc4:	e59d1024 	ldr	r1, [sp, #36]	; 0x24
 c105bc8:	e28d20dc 	add	r2, sp, #220	; 0xdc
 c105bcc:	eb0010ab 	bl	c109e80 <__ssprint_r>
 c105bd0:	e3500000 	cmp	r0, #0
 c105bd4:	1afffc69 	bne	c104d80 <_svfprintf_r+0x308>
 c105bd8:	e2879008 	add	r9, r7, #8
 c105bdc:	e1a0b007 	mov	fp, r7
 c105be0:	e28d40e0 	add	r4, sp, #224	; 0xe0
 c105be4:	e8940030 	ldm	r4, {r4, r5}
 c105be8:	eaffff1b 	b	c10585c <_svfprintf_r+0xde4>
 c105bec:	e59d0038 	ldr	r0, [sp, #56]	; 0x38
 c105bf0:	e59d1024 	ldr	r1, [sp, #36]	; 0x24
 c105bf4:	e28d20dc 	add	r2, sp, #220	; 0xdc
 c105bf8:	eb0010a0 	bl	c109e80 <__ssprint_r>
 c105bfc:	e3500000 	cmp	r0, #0
 c105c00:	0affff02 	beq	c105810 <_svfprintf_r+0xd98>
 c105c04:	eafffc5d 	b	c104d80 <_svfprintf_r+0x308>
 c105c08:	e28dc0dc 	add	ip, sp, #220	; 0xdc
 c105c0c:	e58d2034 	str	r2, [sp, #52]	; 0x34
 c105c10:	e58dc040 	str	ip, [sp, #64]	; 0x40
 c105c14:	eafffcc2 	b	c104f24 <_svfprintf_r+0x4ac>
 c105c18:	e59d0038 	ldr	r0, [sp, #56]	; 0x38
 c105c1c:	e59d1024 	ldr	r1, [sp, #36]	; 0x24
 c105c20:	e28d20dc 	add	r2, sp, #220	; 0xdc
 c105c24:	eb001095 	bl	c109e80 <__ssprint_r>
 c105c28:	e3500000 	cmp	r0, #0
 c105c2c:	1afffc53 	bne	c104d80 <_svfprintf_r+0x308>
 c105c30:	e1a09007 	mov	r9, r7
 c105c34:	e59d50e4 	ldr	r5, [sp, #228]	; 0xe4
 c105c38:	eafffea1 	b	c1056c4 <_svfprintf_r+0xc4c>
 c105c3c:	e59d0038 	ldr	r0, [sp, #56]	; 0x38
 c105c40:	e59d1024 	ldr	r1, [sp, #36]	; 0x24
 c105c44:	e28d20dc 	add	r2, sp, #220	; 0xdc
 c105c48:	eb00108c 	bl	c109e80 <__ssprint_r>
 c105c4c:	e3500000 	cmp	r0, #0
 c105c50:	1afffc4a 	bne	c104d80 <_svfprintf_r+0x308>
 c105c54:	e59d50e4 	ldr	r5, [sp, #228]	; 0xe4
 c105c58:	e1a06007 	mov	r6, r7
 c105c5c:	eafffe56 	b	c1055bc <_svfprintf_r+0xb44>
 c105c60:	e59d0038 	ldr	r0, [sp, #56]	; 0x38
 c105c64:	e59d1024 	ldr	r1, [sp, #36]	; 0x24
 c105c68:	e28d20dc 	add	r2, sp, #220	; 0xdc
 c105c6c:	eb001083 	bl	c109e80 <__ssprint_r>
 c105c70:	e3500000 	cmp	r0, #0
 c105c74:	1afffc41 	bne	c104d80 <_svfprintf_r+0x308>
 c105c78:	e59d50e4 	ldr	r5, [sp, #228]	; 0xe4
 c105c7c:	e1a06007 	mov	r6, r7
 c105c80:	eafffe5b 	b	c1055f4 <_svfprintf_r+0xb7c>
 c105c84:	e59d6100 	ldr	r6, [sp, #256]	; 0x100
 c105c88:	e3560000 	cmp	r6, #0
 c105c8c:	da0001c2 	ble	c10639c <_svfprintf_r+0x1924>
 c105c90:	e59d602c 	ldr	r6, [sp, #44]	; 0x2c
 c105c94:	e59d1050 	ldr	r1, [sp, #80]	; 0x50
 c105c98:	e59d2040 	ldr	r2, [sp, #64]	; 0x40
 c105c9c:	e1560001 	cmp	r6, r1
 c105ca0:	a1a06001 	movge	r6, r1
 c105ca4:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
 c105ca8:	e3560000 	cmp	r6, #0
 c105cac:	e082b003 	add	fp, r2, r3
 c105cb0:	da000008 	ble	c105cd8 <_svfprintf_r+0x1260>
 c105cb4:	e59d40e0 	ldr	r4, [sp, #224]	; 0xe0
 c105cb8:	e2844001 	add	r4, r4, #1
 c105cbc:	e0855006 	add	r5, r5, r6
 c105cc0:	e3540007 	cmp	r4, #7
 c105cc4:	e8890044 	stm	r9, {r2, r6}
 c105cc8:	e58d50e4 	str	r5, [sp, #228]	; 0xe4
 c105ccc:	e58d40e0 	str	r4, [sp, #224]	; 0xe0
 c105cd0:	d2899008 	addle	r9, r9, #8
 c105cd4:	ca000324 	bgt	c10696c <_svfprintf_r+0x1ef4>
 c105cd8:	e59dc050 	ldr	ip, [sp, #80]	; 0x50
 c105cdc:	e1c66fc6 	bic	r6, r6, r6, asr #31
 c105ce0:	e066600c 	rsb	r6, r6, ip
 c105ce4:	e3560000 	cmp	r6, #0
 c105ce8:	da00030c 	ble	c106920 <_svfprintf_r+0x1ea8>
 c105cec:	e3560010 	cmp	r6, #16
 c105cf0:	da00038f 	ble	c106b34 <_svfprintf_r+0x20bc>
 c105cf4:	e59d40e0 	ldr	r4, [sp, #224]	; 0xe0
 c105cf8:	e1a01005 	mov	r1, r5
 c105cfc:	e1a02004 	mov	r2, r4
 c105d00:	e59fa21c 	ldr	sl, [pc, #540]	; c105f24 <_svfprintf_r+0x14ac>
 c105d04:	e3a08010 	mov	r8, #16
 c105d08:	e59d4038 	ldr	r4, [sp, #56]	; 0x38
 c105d0c:	e59d5024 	ldr	r5, [sp, #36]	; 0x24
 c105d10:	ea000002 	b	c105d20 <_svfprintf_r+0x12a8>
 c105d14:	e2466010 	sub	r6, r6, #16
 c105d18:	e3560010 	cmp	r6, #16
 c105d1c:	da000131 	ble	c1061e8 <_svfprintf_r+0x1770>
 c105d20:	e2822001 	add	r2, r2, #1
 c105d24:	e3520007 	cmp	r2, #7
 c105d28:	e589a000 	str	sl, [r9]
 c105d2c:	e5898004 	str	r8, [r9, #4]
 c105d30:	e2811010 	add	r1, r1, #16
 c105d34:	d2899008 	addle	r9, r9, #8
 c105d38:	e58d10e4 	str	r1, [sp, #228]	; 0xe4
 c105d3c:	e58d20e0 	str	r2, [sp, #224]	; 0xe0
 c105d40:	d2893008 	addle	r3, r9, #8
 c105d44:	dafffff2 	ble	c105d14 <_svfprintf_r+0x129c>
 c105d48:	e1a00004 	mov	r0, r4
 c105d4c:	e1a01005 	mov	r1, r5
 c105d50:	e28d20dc 	add	r2, sp, #220	; 0xdc
 c105d54:	eb001049 	bl	c109e80 <__ssprint_r>
 c105d58:	e3500000 	cmp	r0, #0
 c105d5c:	1afffc07 	bne	c104d80 <_svfprintf_r+0x308>
 c105d60:	e59d10e4 	ldr	r1, [sp, #228]	; 0xe4
 c105d64:	e59d20e0 	ldr	r2, [sp, #224]	; 0xe0
 c105d68:	e2873008 	add	r3, r7, #8
 c105d6c:	e1a09007 	mov	r9, r7
 c105d70:	eaffffe7 	b	c105d14 <_svfprintf_r+0x129c>
 c105d74:	e28d00dc 	add	r0, sp, #220	; 0xdc
 c105d78:	e58d3034 	str	r3, [sp, #52]	; 0x34
 c105d7c:	e58d0040 	str	r0, [sp, #64]	; 0x40
 c105d80:	eafffc67 	b	c104f24 <_svfprintf_r+0x4ac>
 c105d84:	e28dc0b4 	add	ip, sp, #180	; 0xb4
 c105d88:	e59da068 	ldr	sl, [sp, #104]	; 0x68
 c105d8c:	e28c1027 	add	r1, ip, #39	; 0x27
 c105d90:	e1a02229 	lsr	r2, r9, #4
 c105d94:	e1a00228 	lsr	r0, r8, #4
 c105d98:	e1800e09 	orr	r0, r0, r9, lsl #28
 c105d9c:	e208800f 	and	r8, r8, #15
 c105da0:	e1a04002 	mov	r4, r2
 c105da4:	e1a09004 	mov	r9, r4
 c105da8:	e7da2008 	ldrb	r2, [sl, r8]
 c105dac:	e1a08000 	mov	r8, r0
 c105db0:	e1980009 	orrs	r0, r8, r9
 c105db4:	e1a03001 	mov	r3, r1
 c105db8:	e5c12000 	strb	r2, [r1]
 c105dbc:	e2411001 	sub	r1, r1, #1
 c105dc0:	1afffff2 	bne	c105d90 <_svfprintf_r+0x1318>
 c105dc4:	e28cc028 	add	ip, ip, #40	; 0x28
 c105dc8:	e063c00c 	rsb	ip, r3, ip
 c105dcc:	e58d3040 	str	r3, [sp, #64]	; 0x40
 c105dd0:	e58dc034 	str	ip, [sp, #52]	; 0x34
 c105dd4:	eafffc52 	b	c104f24 <_svfprintf_r+0x4ac>
 c105dd8:	e3590000 	cmp	r9, #0
 c105ddc:	03580009 	cmpeq	r8, #9
 c105de0:	8a000070 	bhi	c105fa8 <_svfprintf_r+0x1530>
 c105de4:	e2888030 	add	r8, r8, #48	; 0x30
 c105de8:	e3a0c001 	mov	ip, #1
 c105dec:	e28d00db 	add	r0, sp, #219	; 0xdb
 c105df0:	e5cd80db 	strb	r8, [sp, #219]	; 0xdb
 c105df4:	e58dc034 	str	ip, [sp, #52]	; 0x34
 c105df8:	e58d0040 	str	r0, [sp, #64]	; 0x40
 c105dfc:	eafffc48 	b	c104f24 <_svfprintf_r+0x4ac>
 c105e00:	e59d0038 	ldr	r0, [sp, #56]	; 0x38
 c105e04:	e59d1024 	ldr	r1, [sp, #36]	; 0x24
 c105e08:	e28d20dc 	add	r2, sp, #220	; 0xdc
 c105e0c:	eb00101b 	bl	c109e80 <__ssprint_r>
 c105e10:	e3500000 	cmp	r0, #0
 c105e14:	1afffbd9 	bne	c104d80 <_svfprintf_r+0x308>
 c105e18:	e5dd2107 	ldrb	r2, [sp, #263]	; 0x107
 c105e1c:	e59d50e4 	ldr	r5, [sp, #228]	; 0xe4
 c105e20:	e1a06007 	mov	r6, r7
 c105e24:	eafffdd5 	b	c105580 <_svfprintf_r+0xb08>
 c105e28:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
 c105e2c:	e2408001 	sub	r8, r0, #1
 c105e30:	e3580000 	cmp	r8, #0
 c105e34:	d2869008 	addle	r9, r6, #8
 c105e38:	d1a0b006 	movle	fp, r6
 c105e3c:	dafffe86 	ble	c10585c <_svfprintf_r+0xde4>
 c105e40:	e3580010 	cmp	r8, #16
 c105e44:	d59fa0d8 	ldrle	sl, [pc, #216]	; c105f24 <_svfprintf_r+0x14ac>
 c105e48:	da000021 	ble	c105ed4 <_svfprintf_r+0x145c>
 c105e4c:	e1a03004 	mov	r3, r4
 c105e50:	e59fa0cc 	ldr	sl, [pc, #204]	; c105f24 <_svfprintf_r+0x14ac>
 c105e54:	e3a09010 	mov	r9, #16
 c105e58:	e59db038 	ldr	fp, [sp, #56]	; 0x38
 c105e5c:	e59d4024 	ldr	r4, [sp, #36]	; 0x24
 c105e60:	ea000002 	b	c105e70 <_svfprintf_r+0x13f8>
 c105e64:	e2488010 	sub	r8, r8, #16
 c105e68:	e3580010 	cmp	r8, #16
 c105e6c:	da000016 	ble	c105ecc <_svfprintf_r+0x1454>
 c105e70:	e2833001 	add	r3, r3, #1
 c105e74:	e3530007 	cmp	r3, #7
 c105e78:	e586a000 	str	sl, [r6]
 c105e7c:	e5869004 	str	r9, [r6, #4]
 c105e80:	e2855010 	add	r5, r5, #16
 c105e84:	d2866008 	addle	r6, r6, #8
 c105e88:	e58d50e4 	str	r5, [sp, #228]	; 0xe4
 c105e8c:	e58d30e0 	str	r3, [sp, #224]	; 0xe0
 c105e90:	d2862008 	addle	r2, r6, #8
 c105e94:	dafffff2 	ble	c105e64 <_svfprintf_r+0x13ec>
 c105e98:	e1a0000b 	mov	r0, fp
 c105e9c:	e1a01004 	mov	r1, r4
 c105ea0:	e28d20dc 	add	r2, sp, #220	; 0xdc
 c105ea4:	eb000ff5 	bl	c109e80 <__ssprint_r>
 c105ea8:	e3500000 	cmp	r0, #0
 c105eac:	1afffbb3 	bne	c104d80 <_svfprintf_r+0x308>
 c105eb0:	e2488010 	sub	r8, r8, #16
 c105eb4:	e3580010 	cmp	r8, #16
 c105eb8:	e28d30e0 	add	r3, sp, #224	; 0xe0
 c105ebc:	e8930028 	ldm	r3, {r3, r5}
 c105ec0:	e2872008 	add	r2, r7, #8
 c105ec4:	e1a06007 	mov	r6, r7
 c105ec8:	caffffe8 	bgt	c105e70 <_svfprintf_r+0x13f8>
 c105ecc:	e1a0b002 	mov	fp, r2
 c105ed0:	e1a04003 	mov	r4, r3
 c105ed4:	e2844001 	add	r4, r4, #1
 c105ed8:	e0855008 	add	r5, r5, r8
 c105edc:	e3540007 	cmp	r4, #7
 c105ee0:	e586a000 	str	sl, [r6]
 c105ee4:	e5868004 	str	r8, [r6, #4]
 c105ee8:	e58d50e4 	str	r5, [sp, #228]	; 0xe4
 c105eec:	e58d40e0 	str	r4, [sp, #224]	; 0xe0
 c105ef0:	dafffe58 	ble	c105858 <_svfprintf_r+0xde0>
 c105ef4:	eaffff31 	b	c105bc0 <_svfprintf_r+0x1148>
 c105ef8:	0c1009b4 	.word	0x0c1009b4
 c105efc:	0c1009d4 	.word	0x0c1009d4
 c105f00:	0c1009d8 	.word	0x0c1009d8
 c105f04:	0c1009e4 	.word	0x0c1009e4
 c105f08:	0c1009f8 	.word	0x0c1009f8
 c105f0c:	0c1009dc 	.word	0x0c1009dc
 c105f10:	0c1009e0 	.word	0x0c1009e0
 c105f14:	0c100a14 	.word	0x0c100a14
 c105f18:	66666667 	.word	0x66666667
 c105f1c:	0c1009b4 	.word	0x0c1009b4
 c105f20:	0c100a0c 	.word	0x0c100a0c
 c105f24:	0c1009c4 	.word	0x0c1009c4
 c105f28:	e1a09002 	mov	r9, r2
 c105f2c:	e2844001 	add	r4, r4, #1
 c105f30:	e0855006 	add	r5, r5, r6
 c105f34:	e3540007 	cmp	r4, #7
 c105f38:	e583a000 	str	sl, [r3]
 c105f3c:	e5836004 	str	r6, [r3, #4]
 c105f40:	e58d50e4 	str	r5, [sp, #228]	; 0xe4
 c105f44:	e58d40e0 	str	r4, [sp, #224]	; 0xe0
 c105f48:	dafffdec 	ble	c105700 <_svfprintf_r+0xc88>
 c105f4c:	eafffe4c 	b	c105884 <_svfprintf_r+0xe0c>
 c105f50:	e59d0038 	ldr	r0, [sp, #56]	; 0x38
 c105f54:	e59d1024 	ldr	r1, [sp, #36]	; 0x24
 c105f58:	e28d20dc 	add	r2, sp, #220	; 0xdc
 c105f5c:	eb000fc7 	bl	c109e80 <__ssprint_r>
 c105f60:	e3500000 	cmp	r0, #0
 c105f64:	1afffb85 	bne	c104d80 <_svfprintf_r+0x308>
 c105f68:	e28d40e0 	add	r4, sp, #224	; 0xe0
 c105f6c:	e8940030 	ldm	r4, {r4, r5}
 c105f70:	e287b008 	add	fp, r7, #8
 c105f74:	e1a06007 	mov	r6, r7
 c105f78:	eafffefd 	b	c105b74 <_svfprintf_r+0x10fc>
 c105f7c:	e59d0038 	ldr	r0, [sp, #56]	; 0x38
 c105f80:	e59d1024 	ldr	r1, [sp, #36]	; 0x24
 c105f84:	e28d20dc 	add	r2, sp, #220	; 0xdc
 c105f88:	eb000fbc 	bl	c109e80 <__ssprint_r>
 c105f8c:	e3500000 	cmp	r0, #0
 c105f90:	1afffb7a 	bne	c104d80 <_svfprintf_r+0x308>
 c105f94:	e28d40e0 	add	r4, sp, #224	; 0xe0
 c105f98:	e8940030 	ldm	r4, {r4, r5}
 c105f9c:	e2876008 	add	r6, r7, #8
 c105fa0:	e1a09007 	mov	r9, r7
 c105fa4:	eafffee8 	b	c105b4c <_svfprintf_r+0x10d4>
 c105fa8:	e28dc0b4 	add	ip, sp, #180	; 0xb4
 c105fac:	e1a0a006 	mov	sl, r6
 c105fb0:	e28c4027 	add	r4, ip, #39	; 0x27
 c105fb4:	e1a06005 	mov	r6, r5
 c105fb8:	e1a0b00c 	mov	fp, ip
 c105fbc:	e1a00008 	mov	r0, r8
 c105fc0:	e1a01009 	mov	r1, r9
 c105fc4:	e3a0200a 	mov	r2, #10
 c105fc8:	e3a03000 	mov	r3, #0
 c105fcc:	eb001833 	bl	c10c0a0 <__aeabi_uldivmod>
 c105fd0:	e2822030 	add	r2, r2, #48	; 0x30
 c105fd4:	e5c42000 	strb	r2, [r4]
 c105fd8:	e1a00008 	mov	r0, r8
 c105fdc:	e1a01009 	mov	r1, r9
 c105fe0:	e3a0200a 	mov	r2, #10
 c105fe4:	e3a03000 	mov	r3, #0
 c105fe8:	eb00182c 	bl	c10c0a0 <__aeabi_uldivmod>
 c105fec:	e1a08000 	mov	r8, r0
 c105ff0:	e1a09001 	mov	r9, r1
 c105ff4:	e1981009 	orrs	r1, r8, r9
 c105ff8:	e1a05004 	mov	r5, r4
 c105ffc:	e2444001 	sub	r4, r4, #1
 c106000:	1affffed 	bne	c105fbc <_svfprintf_r+0x1544>
 c106004:	e58d5040 	str	r5, [sp, #64]	; 0x40
 c106008:	e59d2040 	ldr	r2, [sp, #64]	; 0x40
 c10600c:	e28bc028 	add	ip, fp, #40	; 0x28
 c106010:	e062c00c 	rsb	ip, r2, ip
 c106014:	e1a05006 	mov	r5, r6
 c106018:	e58dc034 	str	ip, [sp, #52]	; 0x34
 c10601c:	e1a0600a 	mov	r6, sl
 c106020:	eafffbbf 	b	c104f24 <_svfprintf_r+0x4ac>
 c106024:	e3530030 	cmp	r3, #48	; 0x30
 c106028:	059d3040 	ldreq	r3, [sp, #64]	; 0x40
 c10602c:	028cc028 	addeq	ip, ip, #40	; 0x28
 c106030:	128cc028 	addne	ip, ip, #40	; 0x28
 c106034:	0063c00c 	rsbeq	ip, r3, ip
 c106038:	13a03030 	movne	r3, #48	; 0x30
 c10603c:	1061c00c 	rsbne	ip, r1, ip
 c106040:	158d1040 	strne	r1, [sp, #64]	; 0x40
 c106044:	15c13000 	strbne	r3, [r1]
 c106048:	e58dc034 	str	ip, [sp, #52]	; 0x34
 c10604c:	eafffbb4 	b	c104f24 <_svfprintf_r+0x4ac>
 c106050:	e2788000 	rsbs	r8, r8, #0
 c106054:	e2e99000 	rsc	r9, r9, #0
 c106058:	e3a0302d 	mov	r3, #45	; 0x2d
 c10605c:	e1980009 	orrs	r0, r8, r9
 c106060:	e5cd3107 	strb	r3, [sp, #263]	; 0x107
 c106064:	03a02000 	moveq	r2, #0
 c106068:	13a02001 	movne	r2, #1
 c10606c:	e3a03001 	mov	r3, #1
 c106070:	eafffb89 	b	c104e9c <_svfprintf_r+0x424>
 c106074:	e28d0058 	add	r0, sp, #88	; 0x58
 c106078:	e8900003 	ldm	r0, {r0, r1}
 c10607c:	eb000ea8 	bl	c109b24 <__fpclassifyd>
 c106080:	e3500000 	cmp	r0, #0
 c106084:	1a00010f 	bne	c1064c8 <_svfprintf_r+0x1a50>
 c106088:	e58d004c 	str	r0, [sp, #76]	; 0x4c
 c10608c:	e59d0048 	ldr	r0, [sp, #72]	; 0x48
 c106090:	e51f218c 	ldr	r2, [pc, #-396]	; c105f0c <_svfprintf_r+0x1494>
 c106094:	e51f318c 	ldr	r3, [pc, #-396]	; c105f10 <_svfprintf_r+0x1498>
 c106098:	e3500047 	cmp	r0, #71	; 0x47
 c10609c:	d1a03002 	movle	r3, r2
 c1060a0:	e59d1018 	ldr	r1, [sp, #24]
 c1060a4:	e58d3040 	str	r3, [sp, #64]	; 0x40
 c1060a8:	e59d304c 	ldr	r3, [sp, #76]	; 0x4c
 c1060ac:	e3a0c003 	mov	ip, #3
 c1060b0:	e3c11080 	bic	r1, r1, #128	; 0x80
 c1060b4:	e58dc020 	str	ip, [sp, #32]
 c1060b8:	e58d1018 	str	r1, [sp, #24]
 c1060bc:	e5dd2107 	ldrb	r2, [sp, #263]	; 0x107
 c1060c0:	e58dc034 	str	ip, [sp, #52]	; 0x34
 c1060c4:	e58d3050 	str	r3, [sp, #80]	; 0x50
 c1060c8:	eafffb9d 	b	c104f44 <_svfprintf_r+0x4cc>
 c1060cc:	e59d103c 	ldr	r1, [sp, #60]	; 0x3c
 c1060d0:	e2813007 	add	r3, r1, #7
 c1060d4:	e3c33007 	bic	r3, r3, #7
 c1060d8:	e8931004 	ldm	r3, {r2, ip}
 c1060dc:	e2833008 	add	r3, r3, #8
 c1060e0:	e58d2058 	str	r2, [sp, #88]	; 0x58
 c1060e4:	e58dc05c 	str	ip, [sp, #92]	; 0x5c
 c1060e8:	e58d303c 	str	r3, [sp, #60]	; 0x3c
 c1060ec:	eafffbe8 	b	c105094 <_svfprintf_r+0x61c>
 c1060f0:	e59d2018 	ldr	r2, [sp, #24]
 c1060f4:	e3120040 	tst	r2, #64	; 0x40
 c1060f8:	0a0001a6 	beq	c106798 <_svfprintf_r+0x1d20>
 c1060fc:	e59d303c 	ldr	r3, [sp, #60]	; 0x3c
 c106100:	e59dc03c 	ldr	ip, [sp, #60]	; 0x3c
 c106104:	e1d320b0 	ldrh	r2, [r3]
 c106108:	e28cc004 	add	ip, ip, #4
 c10610c:	e1a08002 	mov	r8, r2
 c106110:	e3a09000 	mov	r9, #0
 c106114:	e2522000 	subs	r2, r2, #0
 c106118:	e3a03001 	mov	r3, #1
 c10611c:	13a02001 	movne	r2, #1
 c106120:	e58dc03c 	str	ip, [sp, #60]	; 0x3c
 c106124:	eafffc11 	b	c105170 <_svfprintf_r+0x6f8>
 c106128:	e59d0018 	ldr	r0, [sp, #24]
 c10612c:	e2103040 	ands	r3, r0, #64	; 0x40
 c106130:	0a0001a2 	beq	c1067c0 <_svfprintf_r+0x1d48>
 c106134:	e59d303c 	ldr	r3, [sp, #60]	; 0x3c
 c106138:	e59dc03c 	ldr	ip, [sp, #60]	; 0x3c
 c10613c:	e1d310b0 	ldrh	r1, [r3]
 c106140:	e28cc004 	add	ip, ip, #4
 c106144:	e1a03002 	mov	r3, r2
 c106148:	e2512000 	subs	r2, r1, #0
 c10614c:	e1a08001 	mov	r8, r1
 c106150:	e3a09000 	mov	r9, #0
 c106154:	13a02001 	movne	r2, #1
 c106158:	e58dc03c 	str	ip, [sp, #60]	; 0x3c
 c10615c:	eafffc03 	b	c105170 <_svfprintf_r+0x6f8>
 c106160:	e59d3018 	ldr	r3, [sp, #24]
 c106164:	e3130040 	tst	r3, #64	; 0x40
 c106168:	159dc03c 	ldrne	ip, [sp, #60]	; 0x3c
 c10616c:	059d003c 	ldreq	r0, [sp, #60]	; 0x3c
 c106170:	11dc80b0 	ldrhne	r8, [ip]
 c106174:	05908000 	ldreq	r8, [r0]
 c106178:	128cc004 	addne	ip, ip, #4
 c10617c:	02800004 	addeq	r0, r0, #4
 c106180:	158dc03c 	strne	ip, [sp, #60]	; 0x3c
 c106184:	058d003c 	streq	r0, [sp, #60]	; 0x3c
 c106188:	e3a09000 	mov	r9, #0
 c10618c:	eafffc1a 	b	c1051fc <_svfprintf_r+0x784>
 c106190:	e59d1018 	ldr	r1, [sp, #24]
 c106194:	e3110010 	tst	r1, #16
 c106198:	0a000174 	beq	c106770 <_svfprintf_r+0x1cf8>
 c10619c:	e59d203c 	ldr	r2, [sp, #60]	; 0x3c
 c1061a0:	e59dc030 	ldr	ip, [sp, #48]	; 0x30
 c1061a4:	e5923000 	ldr	r3, [r2]
 c1061a8:	e2822004 	add	r2, r2, #4
 c1061ac:	e58d203c 	str	r2, [sp, #60]	; 0x3c
 c1061b0:	e583c000 	str	ip, [r3]
 c1061b4:	eafffa51 	b	c104b00 <_svfprintf_r+0x88>
 c1061b8:	e59d0018 	ldr	r0, [sp, #24]
 c1061bc:	e3100040 	tst	r0, #64	; 0x40
 c1061c0:	159d103c 	ldrne	r1, [sp, #60]	; 0x3c
 c1061c4:	059d203c 	ldreq	r2, [sp, #60]	; 0x3c
 c1061c8:	11d180f0 	ldrshne	r8, [r1]
 c1061cc:	05928000 	ldreq	r8, [r2]
 c1061d0:	12811004 	addne	r1, r1, #4
 c1061d4:	02822004 	addeq	r2, r2, #4
 c1061d8:	158d103c 	strne	r1, [sp, #60]	; 0x3c
 c1061dc:	058d203c 	streq	r2, [sp, #60]	; 0x3c
 c1061e0:	e1a09fc8 	asr	r9, r8, #31
 c1061e4:	eafffb25 	b	c104e80 <_svfprintf_r+0x408>
 c1061e8:	e1a04002 	mov	r4, r2
 c1061ec:	e1a05001 	mov	r5, r1
 c1061f0:	e2844001 	add	r4, r4, #1
 c1061f4:	e0855006 	add	r5, r5, r6
 c1061f8:	e3540007 	cmp	r4, #7
 c1061fc:	e589a000 	str	sl, [r9]
 c106200:	e5896004 	str	r6, [r9, #4]
 c106204:	e58d50e4 	str	r5, [sp, #228]	; 0xe4
 c106208:	e58d40e0 	str	r4, [sp, #224]	; 0xe0
 c10620c:	ca0001f6 	bgt	c1069ec <_svfprintf_r+0x1f74>
 c106210:	e59d2100 	ldr	r2, [sp, #256]	; 0x100
 c106214:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
 c106218:	e1520000 	cmp	r2, r0
 c10621c:	ba00003a 	blt	c10630c <_svfprintf_r+0x1894>
 c106220:	e59d1018 	ldr	r1, [sp, #24]
 c106224:	e3110001 	tst	r1, #1
 c106228:	1a000037 	bne	c10630c <_svfprintf_r+0x1894>
 c10622c:	e59dc040 	ldr	ip, [sp, #64]	; 0x40
 c106230:	e59d0050 	ldr	r0, [sp, #80]	; 0x50
 c106234:	e08c1000 	add	r1, ip, r0
 c106238:	e59dc02c 	ldr	ip, [sp, #44]	; 0x2c
 c10623c:	e061800b 	rsb	r8, r1, fp
 c106240:	e062200c 	rsb	r2, r2, ip
 c106244:	e1520008 	cmp	r2, r8
 c106248:	b1a08002 	movlt	r8, r2
 c10624c:	a1a08008 	movge	r8, r8
 c106250:	e3580000 	cmp	r8, #0
 c106254:	da000008 	ble	c10627c <_svfprintf_r+0x1804>
 c106258:	e59d40e0 	ldr	r4, [sp, #224]	; 0xe0
 c10625c:	e2844001 	add	r4, r4, #1
 c106260:	e0855008 	add	r5, r5, r8
 c106264:	e3540007 	cmp	r4, #7
 c106268:	e8830102 	stm	r3, {r1, r8}
 c10626c:	e58d50e4 	str	r5, [sp, #228]	; 0xe4
 c106270:	e58d40e0 	str	r4, [sp, #224]	; 0xe0
 c106274:	d2833008 	addle	r3, r3, #8
 c106278:	ca0001c4 	bgt	c106990 <_svfprintf_r+0x1f18>
 c10627c:	e1c86fc8 	bic	r6, r8, r8, asr #31
 c106280:	e0666002 	rsb	r6, r6, r2
 c106284:	e3560000 	cmp	r6, #0
 c106288:	da000034 	ble	c106360 <_svfprintf_r+0x18e8>
 c10628c:	e3560010 	cmp	r6, #16
 c106290:	da00021e 	ble	c106b10 <_svfprintf_r+0x2098>
 c106294:	e59d40e0 	ldr	r4, [sp, #224]	; 0xe0
 c106298:	e51fa37c 	ldr	sl, [pc, #-892]	; c105f24 <_svfprintf_r+0x14ac>
 c10629c:	e3a08010 	mov	r8, #16
 c1062a0:	e59db038 	ldr	fp, [sp, #56]	; 0x38
 c1062a4:	e59d9024 	ldr	r9, [sp, #36]	; 0x24
 c1062a8:	ea000002 	b	c1062b8 <_svfprintf_r+0x1840>
 c1062ac:	e2466010 	sub	r6, r6, #16
 c1062b0:	e3560010 	cmp	r6, #16
 c1062b4:	daffff1b 	ble	c105f28 <_svfprintf_r+0x14b0>
 c1062b8:	e2844001 	add	r4, r4, #1
 c1062bc:	e3540007 	cmp	r4, #7
 c1062c0:	e583a000 	str	sl, [r3]
 c1062c4:	e5838004 	str	r8, [r3, #4]
 c1062c8:	e2855010 	add	r5, r5, #16
 c1062cc:	d2833008 	addle	r3, r3, #8
 c1062d0:	e58d50e4 	str	r5, [sp, #228]	; 0xe4
 c1062d4:	e58d40e0 	str	r4, [sp, #224]	; 0xe0
 c1062d8:	d2832008 	addle	r2, r3, #8
 c1062dc:	dafffff2 	ble	c1062ac <_svfprintf_r+0x1834>
 c1062e0:	e1a0000b 	mov	r0, fp
 c1062e4:	e1a01009 	mov	r1, r9
 c1062e8:	e28d20dc 	add	r2, sp, #220	; 0xdc
 c1062ec:	eb000ee3 	bl	c109e80 <__ssprint_r>
 c1062f0:	e3500000 	cmp	r0, #0
 c1062f4:	1afffaa1 	bne	c104d80 <_svfprintf_r+0x308>
 c1062f8:	e28d40e0 	add	r4, sp, #224	; 0xe0
 c1062fc:	e8940030 	ldm	r4, {r4, r5}
 c106300:	e2872008 	add	r2, r7, #8
 c106304:	e1a03007 	mov	r3, r7
 c106308:	eaffffe7 	b	c1062ac <_svfprintf_r+0x1834>
 c10630c:	e59d40e0 	ldr	r4, [sp, #224]	; 0xe0
 c106310:	e59dc060 	ldr	ip, [sp, #96]	; 0x60
 c106314:	e2844001 	add	r4, r4, #1
 c106318:	e59d0054 	ldr	r0, [sp, #84]	; 0x54
 c10631c:	e085500c 	add	r5, r5, ip
 c106320:	e3540007 	cmp	r4, #7
 c106324:	e8831001 	stm	r3, {r0, ip}
 c106328:	e58d50e4 	str	r5, [sp, #228]	; 0xe4
 c10632c:	e58d40e0 	str	r4, [sp, #224]	; 0xe0
 c106330:	d2833008 	addle	r3, r3, #8
 c106334:	daffffbc 	ble	c10622c <_svfprintf_r+0x17b4>
 c106338:	e59d0038 	ldr	r0, [sp, #56]	; 0x38
 c10633c:	e59d1024 	ldr	r1, [sp, #36]	; 0x24
 c106340:	e28d20dc 	add	r2, sp, #220	; 0xdc
 c106344:	eb000ecd 	bl	c109e80 <__ssprint_r>
 c106348:	e3500000 	cmp	r0, #0
 c10634c:	1afffa8b 	bne	c104d80 <_svfprintf_r+0x308>
 c106350:	e59d2100 	ldr	r2, [sp, #256]	; 0x100
 c106354:	e59d50e4 	ldr	r5, [sp, #228]	; 0xe4
 c106358:	e1a03007 	mov	r3, r7
 c10635c:	eaffffb2 	b	c10622c <_svfprintf_r+0x17b4>
 c106360:	e1a09003 	mov	r9, r3
 c106364:	eafffce5 	b	c105700 <_svfprintf_r+0xc88>
 c106368:	e2869008 	add	r9, r6, #8
 c10636c:	e59d40e0 	ldr	r4, [sp, #224]	; 0xe0
 c106370:	e51fa454 	ldr	sl, [pc, #-1108]	; c105f24 <_svfprintf_r+0x14ac>
 c106374:	eafffcca 	b	c1056a4 <_svfprintf_r+0xc2c>
 c106378:	e59d0038 	ldr	r0, [sp, #56]	; 0x38
 c10637c:	e59d1024 	ldr	r1, [sp, #36]	; 0x24
 c106380:	e28d20dc 	add	r2, sp, #220	; 0xdc
 c106384:	eb000ebd 	bl	c109e80 <__ssprint_r>
 c106388:	e3500000 	cmp	r0, #0
 c10638c:	1afffa7b 	bne	c104d80 <_svfprintf_r+0x308>
 c106390:	e59d50e4 	ldr	r5, [sp, #228]	; 0xe4
 c106394:	e1a09007 	mov	r9, r7
 c106398:	eafffd58 	b	c105900 <_svfprintf_r+0xe88>
 c10639c:	e59d40e0 	ldr	r4, [sp, #224]	; 0xe0
 c1063a0:	e51f3494 	ldr	r3, [pc, #-1172]	; c105f14 <_svfprintf_r+0x149c>
 c1063a4:	e2844001 	add	r4, r4, #1
 c1063a8:	e5893000 	str	r3, [r9]
 c1063ac:	e2855001 	add	r5, r5, #1
 c1063b0:	e3540007 	cmp	r4, #7
 c1063b4:	e3a03001 	mov	r3, #1
 c1063b8:	e5893004 	str	r3, [r9, #4]
 c1063bc:	e58d50e4 	str	r5, [sp, #228]	; 0xe4
 c1063c0:	e58d40e0 	str	r4, [sp, #224]	; 0xe0
 c1063c4:	d2899008 	addle	r9, r9, #8
 c1063c8:	ca000117 	bgt	c10682c <_svfprintf_r+0x1db4>
 c1063cc:	e3560000 	cmp	r6, #0
 c1063d0:	1a000005 	bne	c1063ec <_svfprintf_r+0x1974>
 c1063d4:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
 c1063d8:	e3500000 	cmp	r0, #0
 c1063dc:	1a000002 	bne	c1063ec <_svfprintf_r+0x1974>
 c1063e0:	e59d1018 	ldr	r1, [sp, #24]
 c1063e4:	e3110001 	tst	r1, #1
 c1063e8:	0afffcc4 	beq	c105700 <_svfprintf_r+0xc88>
 c1063ec:	e59d40e0 	ldr	r4, [sp, #224]	; 0xe0
 c1063f0:	e59d2060 	ldr	r2, [sp, #96]	; 0x60
 c1063f4:	e2844001 	add	r4, r4, #1
 c1063f8:	e59d3054 	ldr	r3, [sp, #84]	; 0x54
 c1063fc:	e0855002 	add	r5, r5, r2
 c106400:	e3540007 	cmp	r4, #7
 c106404:	e5893000 	str	r3, [r9]
 c106408:	e5892004 	str	r2, [r9, #4]
 c10640c:	e58d50e4 	str	r5, [sp, #228]	; 0xe4
 c106410:	e58d40e0 	str	r4, [sp, #224]	; 0xe0
 c106414:	d2899008 	addle	r9, r9, #8
 c106418:	ca000135 	bgt	c1068f4 <_svfprintf_r+0x1e7c>
 c10641c:	e2666000 	rsb	r6, r6, #0
 c106420:	e3560000 	cmp	r6, #0
 c106424:	da000128 	ble	c1068cc <_svfprintf_r+0x1e54>
 c106428:	e3560010 	cmp	r6, #16
 c10642c:	d51fa510 	ldrle	sl, [pc, #-1296]	; c105f24 <_svfprintf_r+0x14ac>
 c106430:	da000113 	ble	c106884 <_svfprintf_r+0x1e0c>
 c106434:	e1a03004 	mov	r3, r4
 c106438:	e51fa51c 	ldr	sl, [pc, #-1308]	; c105f24 <_svfprintf_r+0x14ac>
 c10643c:	e3a08010 	mov	r8, #16
 c106440:	e59db038 	ldr	fp, [sp, #56]	; 0x38
 c106444:	e59d4024 	ldr	r4, [sp, #36]	; 0x24
 c106448:	ea000002 	b	c106458 <_svfprintf_r+0x19e0>
 c10644c:	e2466010 	sub	r6, r6, #16
 c106450:	e3560010 	cmp	r6, #16
 c106454:	da000109 	ble	c106880 <_svfprintf_r+0x1e08>
 c106458:	e2833001 	add	r3, r3, #1
 c10645c:	e3530007 	cmp	r3, #7
 c106460:	e2855010 	add	r5, r5, #16
 c106464:	e589a000 	str	sl, [r9]
 c106468:	e5898004 	str	r8, [r9, #4]
 c10646c:	e58d50e4 	str	r5, [sp, #228]	; 0xe4
 c106470:	e58d30e0 	str	r3, [sp, #224]	; 0xe0
 c106474:	d2899008 	addle	r9, r9, #8
 c106478:	dafffff3 	ble	c10644c <_svfprintf_r+0x19d4>
 c10647c:	e1a0000b 	mov	r0, fp
 c106480:	e1a01004 	mov	r1, r4
 c106484:	e28d20dc 	add	r2, sp, #220	; 0xdc
 c106488:	eb000e7c 	bl	c109e80 <__ssprint_r>
 c10648c:	e3500000 	cmp	r0, #0
 c106490:	1afffa3a 	bne	c104d80 <_svfprintf_r+0x308>
 c106494:	e28d30e0 	add	r3, sp, #224	; 0xe0
 c106498:	e8930028 	ldm	r3, {r3, r5}
 c10649c:	e1a09007 	mov	r9, r7
 c1064a0:	eaffffe9 	b	c10644c <_svfprintf_r+0x19d4>
 c1064a4:	e59d1034 	ldr	r1, [sp, #52]	; 0x34
 c1064a8:	e3a00000 	mov	r0, #0
 c1064ac:	e1c11fc1 	bic	r1, r1, r1, asr #31
 c1064b0:	e58d004c 	str	r0, [sp, #76]	; 0x4c
 c1064b4:	e58d1020 	str	r1, [sp, #32]
 c1064b8:	e5dd2107 	ldrb	r2, [sp, #263]	; 0x107
 c1064bc:	e58d403c 	str	r4, [sp, #60]	; 0x3c
 c1064c0:	e58d0050 	str	r0, [sp, #80]	; 0x50
 c1064c4:	eafffa9e 	b	c104f44 <_svfprintf_r+0x4cc>
 c1064c8:	e3750001 	cmn	r5, #1
 c1064cc:	03a05006 	moveq	r5, #6
 c1064d0:	0a000005 	beq	c1064ec <_svfprintf_r+0x1a74>
 c1064d4:	e59dc048 	ldr	ip, [sp, #72]	; 0x48
 c1064d8:	e35c0067 	cmp	ip, #103	; 0x67
 c1064dc:	135c0047 	cmpne	ip, #71	; 0x47
 c1064e0:	1a000001 	bne	c1064ec <_svfprintf_r+0x1a74>
 c1064e4:	e3550000 	cmp	r5, #0
 c1064e8:	03a05001 	moveq	r5, #1
 c1064ec:	e59d305c 	ldr	r3, [sp, #92]	; 0x5c
 c1064f0:	e59d0018 	ldr	r0, [sp, #24]
 c1064f4:	e59d1048 	ldr	r1, [sp, #72]	; 0x48
 c1064f8:	e3530000 	cmp	r3, #0
 c1064fc:	e3800c01 	orr	r0, r0, #256	; 0x100
 c106500:	b2839102 	addlt	r9, r3, #-2147483648	; 0x80000000
 c106504:	b3a0b02d 	movlt	fp, #45	; 0x2d
 c106508:	a59d905c 	ldrge	r9, [sp, #92]	; 0x5c
 c10650c:	a3a0b000 	movge	fp, #0
 c106510:	e3510066 	cmp	r1, #102	; 0x66
 c106514:	13510046 	cmpne	r1, #70	; 0x46
 c106518:	e58d0018 	str	r0, [sp, #24]
 c10651c:	13a04000 	movne	r4, #0
 c106520:	03a04001 	moveq	r4, #1
 c106524:	01a0a005 	moveq	sl, r5
 c106528:	03a01003 	moveq	r1, #3
 c10652c:	0a000005 	beq	c106548 <_svfprintf_r+0x1ad0>
 c106530:	e3510065 	cmp	r1, #101	; 0x65
 c106534:	13510045 	cmpne	r1, #69	; 0x45
 c106538:	0285a001 	addeq	sl, r5, #1
 c10653c:	03a01002 	moveq	r1, #2
 c106540:	11a0a005 	movne	sl, r5
 c106544:	13a01002 	movne	r1, #2
 c106548:	e58d1000 	str	r1, [sp]
 c10654c:	e28d1c01 	add	r1, sp, #256	; 0x100
 c106550:	e58d1008 	str	r1, [sp, #8]
 c106554:	e28d10fc 	add	r1, sp, #252	; 0xfc
 c106558:	e59d2058 	ldr	r2, [sp, #88]	; 0x58
 c10655c:	e58d100c 	str	r1, [sp, #12]
 c106560:	e1a03009 	mov	r3, r9
 c106564:	e28d10f8 	add	r1, sp, #248	; 0xf8
 c106568:	e59d0038 	ldr	r0, [sp, #56]	; 0x38
 c10656c:	e58da004 	str	sl, [sp, #4]
 c106570:	e58d1010 	str	r1, [sp, #16]
 c106574:	eb000201 	bl	c106d80 <_dtoa_r>
 c106578:	e59d2048 	ldr	r2, [sp, #72]	; 0x48
 c10657c:	e3520047 	cmp	r2, #71	; 0x47
 c106580:	13520067 	cmpne	r2, #103	; 0x67
 c106584:	e58d0040 	str	r0, [sp, #64]	; 0x40
 c106588:	0a0000a2 	beq	c106818 <_svfprintf_r+0x1da0>
 c10658c:	e59dc040 	ldr	ip, [sp, #64]	; 0x40
 c106590:	e3540000 	cmp	r4, #0
 c106594:	e08c400a 	add	r4, ip, sl
 c106598:	0a00000c 	beq	c1065d0 <_svfprintf_r+0x1b58>
 c10659c:	e5dc3000 	ldrb	r3, [ip]
 c1065a0:	e3530030 	cmp	r3, #48	; 0x30
 c1065a4:	1a000007 	bne	c1065c8 <_svfprintf_r+0x1b50>
 c1065a8:	e59d0058 	ldr	r0, [sp, #88]	; 0x58
 c1065ac:	e1a01009 	mov	r1, r9
 c1065b0:	e3a02000 	mov	r2, #0
 c1065b4:	e3a03000 	mov	r3, #0
 c1065b8:	eb00169a 	bl	c10c028 <__aeabi_dcmpeq>
 c1065bc:	e3500000 	cmp	r0, #0
 c1065c0:	026aa001 	rsbeq	sl, sl, #1
 c1065c4:	058da100 	streq	sl, [sp, #256]	; 0x100
 c1065c8:	e59d3100 	ldr	r3, [sp, #256]	; 0x100
 c1065cc:	e0844003 	add	r4, r4, r3
 c1065d0:	e3a03000 	mov	r3, #0
 c1065d4:	e59d0058 	ldr	r0, [sp, #88]	; 0x58
 c1065d8:	e1a01009 	mov	r1, r9
 c1065dc:	e3a02000 	mov	r2, #0
 c1065e0:	eb001690 	bl	c10c028 <__aeabi_dcmpeq>
 c1065e4:	e3500000 	cmp	r0, #0
 c1065e8:	158d40f8 	strne	r4, [sp, #248]	; 0xf8
 c1065ec:	11a03004 	movne	r3, r4
 c1065f0:	1a000007 	bne	c106614 <_svfprintf_r+0x1b9c>
 c1065f4:	e59d30f8 	ldr	r3, [sp, #248]	; 0xf8
 c1065f8:	e1540003 	cmp	r4, r3
 c1065fc:	9a000004 	bls	c106614 <_svfprintf_r+0x1b9c>
 c106600:	e3a02030 	mov	r2, #48	; 0x30
 c106604:	e4c32001 	strb	r2, [r3], #1
 c106608:	e1530004 	cmp	r3, r4
 c10660c:	e58d30f8 	str	r3, [sp, #248]	; 0xf8
 c106610:	1afffffb 	bne	c106604 <_svfprintf_r+0x1b8c>
 c106614:	e59d0048 	ldr	r0, [sp, #72]	; 0x48
 c106618:	e59d1040 	ldr	r1, [sp, #64]	; 0x40
 c10661c:	e3500067 	cmp	r0, #103	; 0x67
 c106620:	13500047 	cmpne	r0, #71	; 0x47
 c106624:	e0613003 	rsb	r3, r1, r3
 c106628:	e58d302c 	str	r3, [sp, #44]	; 0x2c
 c10662c:	1a0000ff 	bne	c106a30 <_svfprintf_r+0x1fb8>
 c106630:	e59d3100 	ldr	r3, [sp, #256]	; 0x100
 c106634:	e3730003 	cmn	r3, #3
 c106638:	e58d3034 	str	r3, [sp, #52]	; 0x34
 c10663c:	ba000001 	blt	c106648 <_svfprintf_r+0x1bd0>
 c106640:	e1550003 	cmp	r5, r3
 c106644:	aa000110 	bge	c106a8c <_svfprintf_r+0x2014>
 c106648:	e59d2048 	ldr	r2, [sp, #72]	; 0x48
 c10664c:	e2422002 	sub	r2, r2, #2
 c106650:	e58d2048 	str	r2, [sp, #72]	; 0x48
 c106654:	e2433001 	sub	r3, r3, #1
 c106658:	e3530000 	cmp	r3, #0
 c10665c:	e58d3100 	str	r3, [sp, #256]	; 0x100
 c106660:	e59dc048 	ldr	ip, [sp, #72]	; 0x48
 c106664:	b2633000 	rsblt	r3, r3, #0
 c106668:	b3a0202d 	movlt	r2, #45	; 0x2d
 c10666c:	a3a0202b 	movge	r2, #43	; 0x2b
 c106670:	e3530009 	cmp	r3, #9
 c106674:	e5cdc0f0 	strb	ip, [sp, #240]	; 0xf0
 c106678:	e5cd20f1 	strb	r2, [sp, #241]	; 0xf1
 c10667c:	da000114 	ble	c106ad4 <_svfprintf_r+0x205c>
 c106680:	e51fc770 	ldr	ip, [pc, #-1904]	; c105f18 <_svfprintf_r+0x14a0>
 c106684:	e28d00ee 	add	r0, sp, #238	; 0xee
 c106688:	e0c1239c 	smull	r2, r1, ip, r3
 c10668c:	e1a02fc3 	asr	r2, r3, #31
 c106690:	e0622141 	rsb	r2, r2, r1, asr #2
 c106694:	e0821102 	add	r1, r2, r2, lsl #2
 c106698:	e0431081 	sub	r1, r3, r1, lsl #1
 c10669c:	e2811030 	add	r1, r1, #48	; 0x30
 c1066a0:	e3520009 	cmp	r2, #9
 c1066a4:	e1a03002 	mov	r3, r2
 c1066a8:	e1a02000 	mov	r2, r0
 c1066ac:	e4401001 	strb	r1, [r0], #-1
 c1066b0:	cafffff4 	bgt	c106688 <_svfprintf_r+0x1c10>
 c1066b4:	e59dc06c 	ldr	ip, [sp, #108]	; 0x6c
 c1066b8:	e2421001 	sub	r1, r2, #1
 c1066bc:	e151000c 	cmp	r1, ip
 c1066c0:	e2833030 	add	r3, r3, #48	; 0x30
 c1066c4:	e5423001 	strb	r3, [r2, #-1]
 c1066c8:	228d00f0 	addcs	r0, sp, #240	; 0xf0
 c1066cc:	228d10f2 	addcs	r1, sp, #242	; 0xf2
 c1066d0:	2a000008 	bcs	c1066f8 <_svfprintf_r+0x1c80>
 c1066d4:	e28d00f0 	add	r0, sp, #240	; 0xf0
 c1066d8:	e59dc06c 	ldr	ip, [sp, #108]	; 0x6c
 c1066dc:	e1a02001 	mov	r2, r1
 c1066e0:	e2803002 	add	r3, r0, #2
 c1066e4:	e4d21001 	ldrb	r1, [r2], #1
 c1066e8:	e4c31001 	strb	r1, [r3], #1
 c1066ec:	e15c0002 	cmp	ip, r2
 c1066f0:	e1a01003 	mov	r1, r3
 c1066f4:	8afffffa 	bhi	c1066e4 <_svfprintf_r+0x1c6c>
 c1066f8:	e0600001 	rsb	r0, r0, r1
 c1066fc:	e58d0064 	str	r0, [sp, #100]	; 0x64
 c106700:	e59d1064 	ldr	r1, [sp, #100]	; 0x64
 c106704:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
 c106708:	e0811000 	add	r1, r1, r0
 c10670c:	e3500001 	cmp	r0, #1
 c106710:	e58d1034 	str	r1, [sp, #52]	; 0x34
 c106714:	da000101 	ble	c106b20 <_svfprintf_r+0x20a8>
 c106718:	e59d3034 	ldr	r3, [sp, #52]	; 0x34
 c10671c:	e3a0c000 	mov	ip, #0
 c106720:	e2833001 	add	r3, r3, #1
 c106724:	e58d3034 	str	r3, [sp, #52]	; 0x34
 c106728:	e58dc050 	str	ip, [sp, #80]	; 0x50
 c10672c:	e35b0000 	cmp	fp, #0
 c106730:	1a0000b6 	bne	c106a10 <_svfprintf_r+0x1f98>
 c106734:	e59d3034 	ldr	r3, [sp, #52]	; 0x34
 c106738:	e1c33fc3 	bic	r3, r3, r3, asr #31
 c10673c:	e58d3020 	str	r3, [sp, #32]
 c106740:	e5dd2107 	ldrb	r2, [sp, #263]	; 0x107
 c106744:	e58db04c 	str	fp, [sp, #76]	; 0x4c
 c106748:	eafff9fd 	b	c104f44 <_svfprintf_r+0x4cc>
 c10674c:	e59d0038 	ldr	r0, [sp, #56]	; 0x38
 c106750:	e59d1024 	ldr	r1, [sp, #36]	; 0x24
 c106754:	e28d20dc 	add	r2, sp, #220	; 0xdc
 c106758:	eb000dc8 	bl	c109e80 <__ssprint_r>
 c10675c:	e3500000 	cmp	r0, #0
 c106760:	1afff986 	bne	c104d80 <_svfprintf_r+0x308>
 c106764:	e59d50e4 	ldr	r5, [sp, #228]	; 0xe4
 c106768:	e1a03007 	mov	r3, r7
 c10676c:	eafffc76 	b	c10594c <_svfprintf_r+0xed4>
 c106770:	e59d0018 	ldr	r0, [sp, #24]
 c106774:	e3100040 	tst	r0, #64	; 0x40
 c106778:	0a00001f 	beq	c1067fc <_svfprintf_r+0x1d84>
 c10677c:	e59d103c 	ldr	r1, [sp, #60]	; 0x3c
 c106780:	e59d2030 	ldr	r2, [sp, #48]	; 0x30
 c106784:	e5913000 	ldr	r3, [r1]
 c106788:	e2811004 	add	r1, r1, #4
 c10678c:	e58d103c 	str	r1, [sp, #60]	; 0x3c
 c106790:	e1c320b0 	strh	r2, [r3]
 c106794:	eafff8d9 	b	c104b00 <_svfprintf_r+0x88>
 c106798:	e59d003c 	ldr	r0, [sp, #60]	; 0x3c
 c10679c:	e5902000 	ldr	r2, [r0]
 c1067a0:	e3a03001 	mov	r3, #1
 c1067a4:	e1a08002 	mov	r8, r2
 c1067a8:	e3a09000 	mov	r9, #0
 c1067ac:	e2800004 	add	r0, r0, #4
 c1067b0:	e2522000 	subs	r2, r2, #0
 c1067b4:	13a02001 	movne	r2, #1
 c1067b8:	e58d003c 	str	r0, [sp, #60]	; 0x3c
 c1067bc:	eafffa6b 	b	c105170 <_svfprintf_r+0x6f8>
 c1067c0:	e59d003c 	ldr	r0, [sp, #60]	; 0x3c
 c1067c4:	e5902000 	ldr	r2, [r0]
 c1067c8:	eafffff5 	b	c1067a4 <_svfprintf_r+0x1d2c>
 c1067cc:	e3a01040 	mov	r1, #64	; 0x40
 c1067d0:	e59d0038 	ldr	r0, [sp, #56]	; 0x38
 c1067d4:	eb00071d 	bl	c108450 <_malloc_r>
 c1067d8:	e59d1024 	ldr	r1, [sp, #36]	; 0x24
 c1067dc:	e3500000 	cmp	r0, #0
 c1067e0:	e5810000 	str	r0, [r1]
 c1067e4:	e5810010 	str	r0, [r1, #16]
 c1067e8:	0a0000ea 	beq	c106b98 <_svfprintf_r+0x2120>
 c1067ec:	e59dc024 	ldr	ip, [sp, #36]	; 0x24
 c1067f0:	e3a03040 	mov	r3, #64	; 0x40
 c1067f4:	e58c3014 	str	r3, [ip, #20]
 c1067f8:	eafff8b0 	b	c104ac0 <_svfprintf_r+0x48>
 c1067fc:	e59dc03c 	ldr	ip, [sp, #60]	; 0x3c
 c106800:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
 c106804:	e59c3000 	ldr	r3, [ip]
 c106808:	e28cc004 	add	ip, ip, #4
 c10680c:	e58dc03c 	str	ip, [sp, #60]	; 0x3c
 c106810:	e5830000 	str	r0, [r3]
 c106814:	eafff8b9 	b	c104b00 <_svfprintf_r+0x88>
 c106818:	e59d3018 	ldr	r3, [sp, #24]
 c10681c:	e3130001 	tst	r3, #1
 c106820:	059d30f8 	ldreq	r3, [sp, #248]	; 0xf8
 c106824:	1affff58 	bne	c10658c <_svfprintf_r+0x1b14>
 c106828:	eaffff79 	b	c106614 <_svfprintf_r+0x1b9c>
 c10682c:	e59d0038 	ldr	r0, [sp, #56]	; 0x38
 c106830:	e59d1024 	ldr	r1, [sp, #36]	; 0x24
 c106834:	e28d20dc 	add	r2, sp, #220	; 0xdc
 c106838:	eb000d90 	bl	c109e80 <__ssprint_r>
 c10683c:	e3500000 	cmp	r0, #0
 c106840:	1afff94e 	bne	c104d80 <_svfprintf_r+0x308>
 c106844:	e59d6100 	ldr	r6, [sp, #256]	; 0x100
 c106848:	e59d50e4 	ldr	r5, [sp, #228]	; 0xe4
 c10684c:	e1a09007 	mov	r9, r7
 c106850:	eafffedd 	b	c1063cc <_svfprintf_r+0x1954>
 c106854:	e59d0038 	ldr	r0, [sp, #56]	; 0x38
 c106858:	e59d1024 	ldr	r1, [sp, #36]	; 0x24
 c10685c:	e28d20dc 	add	r2, sp, #220	; 0xdc
 c106860:	eb000d86 	bl	c109e80 <__ssprint_r>
 c106864:	e3500000 	cmp	r0, #0
 c106868:	1afff944 	bne	c104d80 <_svfprintf_r+0x308>
 c10686c:	e28d40e0 	add	r4, sp, #224	; 0xe0
 c106870:	e8940030 	ldm	r4, {r4, r5}
 c106874:	e2879008 	add	r9, r7, #8
 c106878:	e1a0b007 	mov	fp, r7
 c10687c:	eafffbf6 	b	c10585c <_svfprintf_r+0xde4>
 c106880:	e1a04003 	mov	r4, r3
 c106884:	e2844001 	add	r4, r4, #1
 c106888:	e0855006 	add	r5, r5, r6
 c10688c:	e3540007 	cmp	r4, #7
 c106890:	e589a000 	str	sl, [r9]
 c106894:	e5896004 	str	r6, [r9, #4]
 c106898:	e58d50e4 	str	r5, [sp, #228]	; 0xe4
 c10689c:	e58d40e0 	str	r4, [sp, #224]	; 0xe0
 c1068a0:	d2899008 	addle	r9, r9, #8
 c1068a4:	da000008 	ble	c1068cc <_svfprintf_r+0x1e54>
 c1068a8:	e59d0038 	ldr	r0, [sp, #56]	; 0x38
 c1068ac:	e59d1024 	ldr	r1, [sp, #36]	; 0x24
 c1068b0:	e28d20dc 	add	r2, sp, #220	; 0xdc
 c1068b4:	eb000d71 	bl	c109e80 <__ssprint_r>
 c1068b8:	e3500000 	cmp	r0, #0
 c1068bc:	1afff92f 	bne	c104d80 <_svfprintf_r+0x308>
 c1068c0:	e28d40e0 	add	r4, sp, #224	; 0xe0
 c1068c4:	e8940030 	ldm	r4, {r4, r5}
 c1068c8:	e1a09007 	mov	r9, r7
 c1068cc:	e59dc02c 	ldr	ip, [sp, #44]	; 0x2c
 c1068d0:	e2844001 	add	r4, r4, #1
 c1068d4:	e59d0040 	ldr	r0, [sp, #64]	; 0x40
 c1068d8:	e085500c 	add	r5, r5, ip
 c1068dc:	e3540007 	cmp	r4, #7
 c1068e0:	e8891001 	stm	r9, {r0, ip}
 c1068e4:	e58d50e4 	str	r5, [sp, #228]	; 0xe4
 c1068e8:	e58d40e0 	str	r4, [sp, #224]	; 0xe0
 c1068ec:	dafffb82 	ble	c1056fc <_svfprintf_r+0xc84>
 c1068f0:	eafffbe3 	b	c105884 <_svfprintf_r+0xe0c>
 c1068f4:	e59d0038 	ldr	r0, [sp, #56]	; 0x38
 c1068f8:	e59d1024 	ldr	r1, [sp, #36]	; 0x24
 c1068fc:	e28d20dc 	add	r2, sp, #220	; 0xdc
 c106900:	eb000d5e 	bl	c109e80 <__ssprint_r>
 c106904:	e3500000 	cmp	r0, #0
 c106908:	1afff91c 	bne	c104d80 <_svfprintf_r+0x308>
 c10690c:	e59d6100 	ldr	r6, [sp, #256]	; 0x100
 c106910:	e28d40e0 	add	r4, sp, #224	; 0xe0
 c106914:	e8940030 	ldm	r4, {r4, r5}
 c106918:	e1a09007 	mov	r9, r7
 c10691c:	eafffebe 	b	c10641c <_svfprintf_r+0x19a4>
 c106920:	e1a03009 	mov	r3, r9
 c106924:	eafffe39 	b	c106210 <_svfprintf_r+0x1798>
 c106928:	e59d0040 	ldr	r0, [sp, #64]	; 0x40
 c10692c:	eb000d3b 	bl	c109e20 <strlen>
 c106930:	e3a02000 	mov	r2, #0
 c106934:	e1c03fc0 	bic	r3, r0, r0, asr #31
 c106938:	e3a0c000 	mov	ip, #0
 c10693c:	e58d204c 	str	r2, [sp, #76]	; 0x4c
 c106940:	e58d0034 	str	r0, [sp, #52]	; 0x34
 c106944:	e58d3020 	str	r3, [sp, #32]
 c106948:	e5dd2107 	ldrb	r2, [sp, #263]	; 0x107
 c10694c:	e58d403c 	str	r4, [sp, #60]	; 0x3c
 c106950:	e58dc050 	str	ip, [sp, #80]	; 0x50
 c106954:	eafff97a 	b	c104f44 <_svfprintf_r+0x4cc>
 c106958:	e2863008 	add	r3, r6, #8
 c10695c:	e28d40e0 	add	r4, sp, #224	; 0xe0
 c106960:	e8940030 	ldm	r4, {r4, r5}
 c106964:	e51faa50 	ldr	sl, [pc, #-2640]	; c105f1c <_svfprintf_r+0x14a4>
 c106968:	eafff9af 	b	c10502c <_svfprintf_r+0x5b4>
 c10696c:	e59d0038 	ldr	r0, [sp, #56]	; 0x38
 c106970:	e59d1024 	ldr	r1, [sp, #36]	; 0x24
 c106974:	e28d20dc 	add	r2, sp, #220	; 0xdc
 c106978:	eb000d40 	bl	c109e80 <__ssprint_r>
 c10697c:	e3500000 	cmp	r0, #0
 c106980:	1afff8fe 	bne	c104d80 <_svfprintf_r+0x308>
 c106984:	e59d50e4 	ldr	r5, [sp, #228]	; 0xe4
 c106988:	e1a09007 	mov	r9, r7
 c10698c:	eafffcd1 	b	c105cd8 <_svfprintf_r+0x1260>
 c106990:	e59d0038 	ldr	r0, [sp, #56]	; 0x38
 c106994:	e59d1024 	ldr	r1, [sp, #36]	; 0x24
 c106998:	e28d20dc 	add	r2, sp, #220	; 0xdc
 c10699c:	eb000d37 	bl	c109e80 <__ssprint_r>
 c1069a0:	e3500000 	cmp	r0, #0
 c1069a4:	1afff8f5 	bne	c104d80 <_svfprintf_r+0x308>
 c1069a8:	e59d2100 	ldr	r2, [sp, #256]	; 0x100
 c1069ac:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
 c1069b0:	e59d50e4 	ldr	r5, [sp, #228]	; 0xe4
 c1069b4:	e0622000 	rsb	r2, r2, r0
 c1069b8:	e1a03007 	mov	r3, r7
 c1069bc:	eafffe2e 	b	c10627c <_svfprintf_r+0x1804>
 c1069c0:	e3550006 	cmp	r5, #6
 c1069c4:	23a05006 	movcs	r5, #6
 c1069c8:	e51f0ab0 	ldr	r0, [pc, #-2736]	; c105f20 <_svfprintf_r+0x14a8>
 c1069cc:	e1c5cfc5 	bic	ip, r5, r5, asr #31
 c1069d0:	e58d5034 	str	r5, [sp, #52]	; 0x34
 c1069d4:	e58dc020 	str	ip, [sp, #32]
 c1069d8:	e58d403c 	str	r4, [sp, #60]	; 0x3c
 c1069dc:	e58d204c 	str	r2, [sp, #76]	; 0x4c
 c1069e0:	e58d2050 	str	r2, [sp, #80]	; 0x50
 c1069e4:	e58d0040 	str	r0, [sp, #64]	; 0x40
 c1069e8:	eafff955 	b	c104f44 <_svfprintf_r+0x4cc>
 c1069ec:	e59d0038 	ldr	r0, [sp, #56]	; 0x38
 c1069f0:	e59d1024 	ldr	r1, [sp, #36]	; 0x24
 c1069f4:	e28d20dc 	add	r2, sp, #220	; 0xdc
 c1069f8:	eb000d20 	bl	c109e80 <__ssprint_r>
 c1069fc:	e3500000 	cmp	r0, #0
 c106a00:	1afff8de 	bne	c104d80 <_svfprintf_r+0x308>
 c106a04:	e1a03007 	mov	r3, r7
 c106a08:	e59d50e4 	ldr	r5, [sp, #228]	; 0xe4
 c106a0c:	eafffdff 	b	c106210 <_svfprintf_r+0x1798>
 c106a10:	e59dc034 	ldr	ip, [sp, #52]	; 0x34
 c106a14:	e3a0202d 	mov	r2, #45	; 0x2d
 c106a18:	e1cccfcc 	bic	ip, ip, ip, asr #31
 c106a1c:	e3a00000 	mov	r0, #0
 c106a20:	e5cd2107 	strb	r2, [sp, #263]	; 0x107
 c106a24:	e58dc020 	str	ip, [sp, #32]
 c106a28:	e58d004c 	str	r0, [sp, #76]	; 0x4c
 c106a2c:	eafff946 	b	c104f4c <_svfprintf_r+0x4d4>
 c106a30:	e59d3048 	ldr	r3, [sp, #72]	; 0x48
 c106a34:	e3530066 	cmp	r3, #102	; 0x66
 c106a38:	1a000041 	bne	c106b44 <_svfprintf_r+0x20cc>
 c106a3c:	e59d3100 	ldr	r3, [sp, #256]	; 0x100
 c106a40:	e3530000 	cmp	r3, #0
 c106a44:	e58d3034 	str	r3, [sp, #52]	; 0x34
 c106a48:	da00003f 	ble	c106b4c <_svfprintf_r+0x20d4>
 c106a4c:	e3550000 	cmp	r5, #0
 c106a50:	1a000002 	bne	c106a60 <_svfprintf_r+0x1fe8>
 c106a54:	e59d0018 	ldr	r0, [sp, #24]
 c106a58:	e3100001 	tst	r0, #1
 c106a5c:	0a000002 	beq	c106a6c <_svfprintf_r+0x1ff4>
 c106a60:	e2832001 	add	r2, r3, #1
 c106a64:	e0822005 	add	r2, r2, r5
 c106a68:	e58d2034 	str	r2, [sp, #52]	; 0x34
 c106a6c:	e58d3050 	str	r3, [sp, #80]	; 0x50
 c106a70:	e58d8048 	str	r8, [sp, #72]	; 0x48
 c106a74:	eaffff2c 	b	c10672c <_svfprintf_r+0x1cb4>
 c106a78:	e1a03006 	mov	r3, r6
 c106a7c:	e59d40e0 	ldr	r4, [sp, #224]	; 0xe0
 c106a80:	e2866008 	add	r6, r6, #8
 c106a84:	e51fab68 	ldr	sl, [pc, #-2920]	; c105f24 <_svfprintf_r+0x14ac>
 c106a88:	eafffc08 	b	c105ab0 <_svfprintf_r+0x1038>
 c106a8c:	e59d202c 	ldr	r2, [sp, #44]	; 0x2c
 c106a90:	e1530002 	cmp	r3, r2
 c106a94:	ba000015 	blt	c106af0 <_svfprintf_r+0x2078>
 c106a98:	e59dc018 	ldr	ip, [sp, #24]
 c106a9c:	e31c0001 	tst	ip, #1
 c106aa0:	12830001 	addne	r0, r3, #1
 c106aa4:	158d0034 	strne	r0, [sp, #52]	; 0x34
 c106aa8:	13a08067 	movne	r8, #103	; 0x67
 c106aac:	03a08067 	moveq	r8, #103	; 0x67
 c106ab0:	eaffffed 	b	c106a6c <_svfprintf_r+0x1ff4>
 c106ab4:	e1c51fc5 	bic	r1, r5, r5, asr #31
 c106ab8:	e58d004c 	str	r0, [sp, #76]	; 0x4c
 c106abc:	e58d1020 	str	r1, [sp, #32]
 c106ac0:	e5dd2107 	ldrb	r2, [sp, #263]	; 0x107
 c106ac4:	e58d403c 	str	r4, [sp, #60]	; 0x3c
 c106ac8:	e58d5034 	str	r5, [sp, #52]	; 0x34
 c106acc:	e58d0050 	str	r0, [sp, #80]	; 0x50
 c106ad0:	eafff91b 	b	c104f44 <_svfprintf_r+0x4cc>
 c106ad4:	e2832030 	add	r2, r3, #48	; 0x30
 c106ad8:	e28d00f0 	add	r0, sp, #240	; 0xf0
 c106adc:	e3a03030 	mov	r3, #48	; 0x30
 c106ae0:	e5cd30f2 	strb	r3, [sp, #242]	; 0xf2
 c106ae4:	e5cd20f3 	strb	r2, [sp, #243]	; 0xf3
 c106ae8:	e2801004 	add	r1, r0, #4
 c106aec:	eaffff01 	b	c1066f8 <_svfprintf_r+0x1c80>
 c106af0:	e3530000 	cmp	r3, #0
 c106af4:	e59d102c 	ldr	r1, [sp, #44]	; 0x2c
 c106af8:	d2632002 	rsble	r2, r3, #2
 c106afc:	c3a02001 	movgt	r2, #1
 c106b00:	e0822001 	add	r2, r2, r1
 c106b04:	e58d2034 	str	r2, [sp, #52]	; 0x34
 c106b08:	e3a08067 	mov	r8, #103	; 0x67
 c106b0c:	eaffffd6 	b	c106a6c <_svfprintf_r+0x1ff4>
 c106b10:	e2839008 	add	r9, r3, #8
 c106b14:	e59d40e0 	ldr	r4, [sp, #224]	; 0xe0
 c106b18:	e51fabfc 	ldr	sl, [pc, #-3068]	; c105f24 <_svfprintf_r+0x14ac>
 c106b1c:	eafffd02 	b	c105f2c <_svfprintf_r+0x14b4>
 c106b20:	e59d2018 	ldr	r2, [sp, #24]
 c106b24:	e2123001 	ands	r3, r2, #1
 c106b28:	058d3050 	streq	r3, [sp, #80]	; 0x50
 c106b2c:	0afffefe 	beq	c10672c <_svfprintf_r+0x1cb4>
 c106b30:	eafffef8 	b	c106718 <_svfprintf_r+0x1ca0>
 c106b34:	e2893008 	add	r3, r9, #8
 c106b38:	e59d40e0 	ldr	r4, [sp, #224]	; 0xe0
 c106b3c:	e51fac20 	ldr	sl, [pc, #-3104]	; c105f24 <_svfprintf_r+0x14ac>
 c106b40:	eafffdaa 	b	c1061f0 <_svfprintf_r+0x1778>
 c106b44:	e59d3100 	ldr	r3, [sp, #256]	; 0x100
 c106b48:	eafffec1 	b	c106654 <_svfprintf_r+0x1bdc>
 c106b4c:	e3550000 	cmp	r5, #0
 c106b50:	1a000004 	bne	c106b68 <_svfprintf_r+0x20f0>
 c106b54:	e59d1018 	ldr	r1, [sp, #24]
 c106b58:	e3110001 	tst	r1, #1
 c106b5c:	03a02001 	moveq	r2, #1
 c106b60:	058d2034 	streq	r2, [sp, #52]	; 0x34
 c106b64:	0affffc0 	beq	c106a6c <_svfprintf_r+0x1ff4>
 c106b68:	e2855002 	add	r5, r5, #2
 c106b6c:	e58d5034 	str	r5, [sp, #52]	; 0x34
 c106b70:	eaffffbd 	b	c106a6c <_svfprintf_r+0x1ff4>
 c106b74:	e59d303c 	ldr	r3, [sp, #60]	; 0x3c
 c106b78:	e5935000 	ldr	r5, [r3]
 c106b7c:	e2832004 	add	r2, r3, #4
 c106b80:	e3550000 	cmp	r5, #0
 c106b84:	b5dc3000 	ldrblt	r3, [ip]
 c106b88:	b3e05000 	mvnlt	r5, #0
 c106b8c:	b58d203c 	strlt	r2, [sp, #60]	; 0x3c
 c106b90:	aafff9f8 	bge	c105378 <_svfprintf_r+0x900>
 c106b94:	eafff804 	b	c104bac <_svfprintf_r+0x134>
 c106b98:	e59d2038 	ldr	r2, [sp, #56]	; 0x38
 c106b9c:	e3a0300c 	mov	r3, #12
 c106ba0:	e5823000 	str	r3, [r2]
 c106ba4:	e3e03000 	mvn	r3, #0
 c106ba8:	e58d3030 	str	r3, [sp, #48]	; 0x30
 c106bac:	eafff879 	b	c104d98 <_svfprintf_r+0x320>

0c106bb0 <quorem>:
 c106bb0:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 c106bb4:	e5903010 	ldr	r3, [r0, #16]
 c106bb8:	e5915010 	ldr	r5, [r1, #16]
 c106bbc:	e1550003 	cmp	r5, r3
 c106bc0:	e1a0a000 	mov	sl, r0
 c106bc4:	e1a09001 	mov	r9, r1
 c106bc8:	c3a00000 	movgt	r0, #0
 c106bcc:	ca000069 	bgt	c106d78 <quorem+0x1c8>
 c106bd0:	e2853003 	add	r3, r5, #3
 c106bd4:	e1a03103 	lsl	r3, r3, #2
 c106bd8:	e0817003 	add	r7, r1, r3
 c106bdc:	e5971004 	ldr	r1, [r7, #4]
 c106be0:	e0803003 	add	r3, r0, r3
 c106be4:	e5930004 	ldr	r0, [r3, #4]
 c106be8:	e2811001 	add	r1, r1, #1
 c106bec:	eb001495 	bl	c10be48 <__aeabi_uidiv>
 c106bf0:	e2506000 	subs	r6, r0, #0
 c106bf4:	e2455001 	sub	r5, r5, #1
 c106bf8:	e2877004 	add	r7, r7, #4
 c106bfc:	e2894014 	add	r4, r9, #20
 c106c00:	e28a8014 	add	r8, sl, #20
 c106c04:	0a00002e 	beq	c106cc4 <quorem+0x114>
 c106c08:	e3a00000 	mov	r0, #0
 c106c0c:	e1a02008 	mov	r2, r8
 c106c10:	e1a03004 	mov	r3, r4
 c106c14:	e1a01000 	mov	r1, r0
 c106c18:	e493e004 	ldr	lr, [r3], #4
 c106c1c:	e1a0b80e 	lsl	fp, lr, #16
 c106c20:	e1a0b82b 	lsr	fp, fp, #16
 c106c24:	e1a0e82e 	lsr	lr, lr, #16
 c106c28:	e02b0b96 	mla	fp, r6, fp, r0
 c106c2c:	e000069e 	mul	r0, lr, r6
 c106c30:	e592e000 	ldr	lr, [r2]
 c106c34:	e080082b 	add	r0, r0, fp, lsr #16
 c106c38:	e1a0c80e 	lsl	ip, lr, #16
 c106c3c:	e081c82c 	add	ip, r1, ip, lsr #16
 c106c40:	e1a0b80b 	lsl	fp, fp, #16
 c106c44:	e1a01800 	lsl	r1, r0, #16
 c106c48:	e04cc82b 	sub	ip, ip, fp, lsr #16
 c106c4c:	e1a01821 	lsr	r1, r1, #16
 c106c50:	e061182e 	rsb	r1, r1, lr, lsr #16
 c106c54:	e1a0b80c 	lsl	fp, ip, #16
 c106c58:	e081184c 	add	r1, r1, ip, asr #16
 c106c5c:	e1a0c82b 	lsr	ip, fp, #16
 c106c60:	e18cc801 	orr	ip, ip, r1, lsl #16
 c106c64:	e1570003 	cmp	r7, r3
 c106c68:	e1a00820 	lsr	r0, r0, #16
 c106c6c:	e1a01841 	asr	r1, r1, #16
 c106c70:	e482c004 	str	ip, [r2], #4
 c106c74:	2affffe7 	bcs	c106c18 <quorem+0x68>
 c106c78:	e2852004 	add	r2, r5, #4
 c106c7c:	e08a3102 	add	r3, sl, r2, lsl #2
 c106c80:	e5931004 	ldr	r1, [r3, #4]
 c106c84:	e3510000 	cmp	r1, #0
 c106c88:	1a00000d 	bne	c106cc4 <quorem+0x114>
 c106c8c:	e1580003 	cmp	r8, r3
 c106c90:	2a00000a 	bcs	c106cc0 <quorem+0x110>
 c106c94:	e79a2102 	ldr	r2, [sl, r2, lsl #2]
 c106c98:	e3520000 	cmp	r2, #0
 c106c9c:	1a000007 	bne	c106cc0 <quorem+0x110>
 c106ca0:	e2433004 	sub	r3, r3, #4
 c106ca4:	ea000002 	b	c106cb4 <quorem+0x104>
 c106ca8:	e4132004 	ldr	r2, [r3], #-4
 c106cac:	e3520000 	cmp	r2, #0
 c106cb0:	1a000002 	bne	c106cc0 <quorem+0x110>
 c106cb4:	e1580003 	cmp	r8, r3
 c106cb8:	e2455001 	sub	r5, r5, #1
 c106cbc:	3afffff9 	bcc	c106ca8 <quorem+0xf8>
 c106cc0:	e58a5010 	str	r5, [sl, #16]
 c106cc4:	e1a0000a 	mov	r0, sl
 c106cc8:	e1a01009 	mov	r1, r9
 c106ccc:	eb000a29 	bl	c109578 <__mcmp>
 c106cd0:	e3500000 	cmp	r0, #0
 c106cd4:	ba000026 	blt	c106d74 <quorem+0x1c4>
 c106cd8:	e2866001 	add	r6, r6, #1
 c106cdc:	e1a03008 	mov	r3, r8
 c106ce0:	e3a02000 	mov	r2, #0
 c106ce4:	e494c004 	ldr	ip, [r4], #4
 c106ce8:	e5930000 	ldr	r0, [r3]
 c106cec:	e1a0180c 	lsl	r1, ip, #16
 c106cf0:	e1a09800 	lsl	r9, r0, #16
 c106cf4:	e1a01821 	lsr	r1, r1, #16
 c106cf8:	e0611829 	rsb	r1, r1, r9, lsr #16
 c106cfc:	e0811002 	add	r1, r1, r2
 c106d00:	e1a0282c 	lsr	r2, ip, #16
 c106d04:	e0622820 	rsb	r2, r2, r0, lsr #16
 c106d08:	e1a09801 	lsl	r9, r1, #16
 c106d0c:	e0822841 	add	r2, r2, r1, asr #16
 c106d10:	e1a01829 	lsr	r1, r9, #16
 c106d14:	e1811802 	orr	r1, r1, r2, lsl #16
 c106d18:	e1570004 	cmp	r7, r4
 c106d1c:	e1a02842 	asr	r2, r2, #16
 c106d20:	e4831004 	str	r1, [r3], #4
 c106d24:	2affffee 	bcs	c106ce4 <quorem+0x134>
 c106d28:	e2852004 	add	r2, r5, #4
 c106d2c:	e08a3102 	add	r3, sl, r2, lsl #2
 c106d30:	e5931004 	ldr	r1, [r3, #4]
 c106d34:	e3510000 	cmp	r1, #0
 c106d38:	1a00000d 	bne	c106d74 <quorem+0x1c4>
 c106d3c:	e1580003 	cmp	r8, r3
 c106d40:	2a00000a 	bcs	c106d70 <quorem+0x1c0>
 c106d44:	e79a2102 	ldr	r2, [sl, r2, lsl #2]
 c106d48:	e3520000 	cmp	r2, #0
 c106d4c:	1a000007 	bne	c106d70 <quorem+0x1c0>
 c106d50:	e2433004 	sub	r3, r3, #4
 c106d54:	ea000002 	b	c106d64 <quorem+0x1b4>
 c106d58:	e4132004 	ldr	r2, [r3], #-4
 c106d5c:	e3520000 	cmp	r2, #0
 c106d60:	1a000002 	bne	c106d70 <quorem+0x1c0>
 c106d64:	e1580003 	cmp	r8, r3
 c106d68:	e2455001 	sub	r5, r5, #1
 c106d6c:	3afffff9 	bcc	c106d58 <quorem+0x1a8>
 c106d70:	e58a5010 	str	r5, [sl, #16]
 c106d74:	e1a00006 	mov	r0, r6
 c106d78:	e8bd4ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 c106d7c:	e12fff1e 	bx	lr

0c106d80 <_dtoa_r>:
 c106d80:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 c106d84:	e5901040 	ldr	r1, [r0, #64]	; 0x40
 c106d88:	e24dd08c 	sub	sp, sp, #140	; 0x8c
 c106d8c:	e3510000 	cmp	r1, #0
 c106d90:	e1a04000 	mov	r4, r0
 c106d94:	e28d80bc 	add	r8, sp, #188	; 0xbc
 c106d98:	e8980900 	ldm	r8, {r8, fp}
 c106d9c:	e1a05002 	mov	r5, r2
 c106da0:	e1a06003 	mov	r6, r3
 c106da4:	0a000007 	beq	c106dc8 <_dtoa_r+0x48>
 c106da8:	e5903044 	ldr	r3, [r0, #68]	; 0x44
 c106dac:	e3a02001 	mov	r2, #1
 c106db0:	e1a02312 	lsl	r2, r2, r3
 c106db4:	e5813004 	str	r3, [r1, #4]
 c106db8:	e5812008 	str	r2, [r1, #8]
 c106dbc:	eb00083b 	bl	c108eb0 <_Bfree>
 c106dc0:	e3a03000 	mov	r3, #0
 c106dc4:	e5843040 	str	r3, [r4, #64]	; 0x40
 c106dc8:	e2567000 	subs	r7, r6, #0
 c106dcc:	b3a03001 	movlt	r3, #1
 c106dd0:	a3a03000 	movge	r3, #0
 c106dd4:	b5883000 	strlt	r3, [r8]
 c106dd8:	a5883000 	strge	r3, [r8]
 c106ddc:	e59f34e0 	ldr	r3, [pc, #1248]	; c1072c4 <_dtoa_r+0x544>
 c106de0:	b3c77102 	biclt	r7, r7, #-2147483648	; 0x80000000
 c106de4:	e59f24d8 	ldr	r2, [pc, #1240]	; c1072c4 <_dtoa_r+0x544>
 c106de8:	e0073003 	and	r3, r7, r3
 c106dec:	b1a06007 	movlt	r6, r7
 c106df0:	e1530002 	cmp	r3, r2
 c106df4:	0a000016 	beq	c106e54 <_dtoa_r+0xd4>
 c106df8:	e3a03000 	mov	r3, #0
 c106dfc:	e1a00005 	mov	r0, r5
 c106e00:	e1a01006 	mov	r1, r6
 c106e04:	e3a02000 	mov	r2, #0
 c106e08:	eb001486 	bl	c10c028 <__aeabi_dcmpeq>
 c106e0c:	e3500000 	cmp	r0, #0
 c106e10:	e3a03001 	mov	r3, #1
 c106e14:	13a03000 	movne	r3, #0
 c106e18:	e31300ff 	tst	r3, #255	; 0xff
 c106e1c:	e1a09005 	mov	r9, r5
 c106e20:	e1a0a006 	mov	sl, r6
 c106e24:	1a000018 	bne	c106e8c <_dtoa_r+0x10c>
 c106e28:	e59d20b8 	ldr	r2, [sp, #184]	; 0xb8
 c106e2c:	e35b0000 	cmp	fp, #0
 c106e30:	e3a03001 	mov	r3, #1
 c106e34:	e5823000 	str	r3, [r2]
 c106e38:	059f0450 	ldreq	r0, [pc, #1104]	; c107290 <_dtoa_r+0x510>
 c106e3c:	159f0450 	ldrne	r0, [pc, #1104]	; c107294 <_dtoa_r+0x514>
 c106e40:	158b0000 	strne	r0, [fp]
 c106e44:	12400001 	subne	r0, r0, #1
 c106e48:	e28dd08c 	add	sp, sp, #140	; 0x8c
 c106e4c:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 c106e50:	e12fff1e 	bx	lr
 c106e54:	e59f343c 	ldr	r3, [pc, #1084]	; c107298 <_dtoa_r+0x518>
 c106e58:	e59d10b8 	ldr	r1, [sp, #184]	; 0xb8
 c106e5c:	e3550000 	cmp	r5, #0
 c106e60:	e5813000 	str	r3, [r1]
 c106e64:	159f0430 	ldrne	r0, [pc, #1072]	; c10729c <_dtoa_r+0x51c>
 c106e68:	0a000086 	beq	c107088 <_dtoa_r+0x308>
 c106e6c:	e35b0000 	cmp	fp, #0
 c106e70:	0afffff4 	beq	c106e48 <_dtoa_r+0xc8>
 c106e74:	e5d03003 	ldrb	r3, [r0, #3]
 c106e78:	e3530000 	cmp	r3, #0
 c106e7c:	e2803003 	add	r3, r0, #3
 c106e80:	12803008 	addne	r3, r0, #8
 c106e84:	e58b3000 	str	r3, [fp]
 c106e88:	eaffffee 	b	c106e48 <_dtoa_r+0xc8>
 c106e8c:	e28d1080 	add	r1, sp, #128	; 0x80
 c106e90:	e1a03006 	mov	r3, r6
 c106e94:	e58d1000 	str	r1, [sp]
 c106e98:	e1a00004 	mov	r0, r4
 c106e9c:	e28d1084 	add	r1, sp, #132	; 0x84
 c106ea0:	e1a02005 	mov	r2, r5
 c106ea4:	e58d1004 	str	r1, [sp, #4]
 c106ea8:	eb000a69 	bl	c109854 <__d2b>
 c106eac:	e1a03087 	lsl	r3, r7, #1
 c106eb0:	e1b03aa3 	lsrs	r3, r3, #21
 c106eb4:	e1a08000 	mov	r8, r0
 c106eb8:	1a00007a 	bne	c1070a8 <_dtoa_r+0x328>
 c106ebc:	e28d3080 	add	r3, sp, #128	; 0x80
 c106ec0:	e8930208 	ldm	r3, {r3, r9}
 c106ec4:	e0893003 	add	r3, r9, r3
 c106ec8:	e2833e43 	add	r3, r3, #1072	; 0x430
 c106ecc:	e283a002 	add	sl, r3, #2
 c106ed0:	e35a0020 	cmp	sl, #32
 c106ed4:	c243301e 	subgt	r3, r3, #30
 c106ed8:	c1a03335 	lsrgt	r3, r5, r3
 c106edc:	c26a0040 	rsbgt	r0, sl, #64	; 0x40
 c106ee0:	d26a0020 	rsble	r0, sl, #32
 c106ee4:	c1830017 	orrgt	r0, r3, r7, lsl r0
 c106ee8:	d1a00015 	lslle	r0, r5, r0
 c106eec:	ebfff531 	bl	c1043b8 <__aeabi_ui2d>
 c106ef0:	e1a03001 	mov	r3, r1
 c106ef4:	e1a02000 	mov	r2, r0
 c106ef8:	e58d2038 	str	r2, [sp, #56]	; 0x38
 c106efc:	e58d303c 	str	r3, [sp, #60]	; 0x3c
 c106f00:	e59d303c 	ldr	r3, [sp, #60]	; 0x3c
 c106f04:	e3a0c001 	mov	ip, #1
 c106f08:	e243361f 	sub	r3, r3, #32505856	; 0x1f00000
 c106f0c:	e24aae43 	sub	sl, sl, #1072	; 0x430
 c106f10:	e58d303c 	str	r3, [sp, #60]	; 0x3c
 c106f14:	e58dc068 	str	ip, [sp, #104]	; 0x68
 c106f18:	e24aa003 	sub	sl, sl, #3
 c106f1c:	e3a02000 	mov	r2, #0
 c106f20:	e59f3378 	ldr	r3, [pc, #888]	; c1072a0 <_dtoa_r+0x520>
 c106f24:	e28d1038 	add	r1, sp, #56	; 0x38
 c106f28:	e8910003 	ldm	r1, {r0, r1}
 c106f2c:	ebfff45c 	bl	c1040a4 <__aeabi_dsub>
 c106f30:	e28f3d0d 	add	r3, pc, #832	; 0x340
 c106f34:	e893000c 	ldm	r3, {r2, r3}
 c106f38:	ebfff55e 	bl	c1044b8 <__aeabi_dmul>
 c106f3c:	e28f3fcf 	add	r3, pc, #828	; 0x33c
 c106f40:	e893000c 	ldm	r3, {r2, r3}
 c106f44:	ebfff457 	bl	c1040a8 <__adddf3>
 c106f48:	e58d0020 	str	r0, [sp, #32]
 c106f4c:	e58d1024 	str	r1, [sp, #36]	; 0x24
 c106f50:	e1a0000a 	mov	r0, sl
 c106f54:	ebfff520 	bl	c1043dc <__aeabi_i2d>
 c106f58:	e28f3fca 	add	r3, pc, #808	; 0x328
 c106f5c:	e893000c 	ldm	r3, {r2, r3}
 c106f60:	ebfff554 	bl	c1044b8 <__aeabi_dmul>
 c106f64:	e1a02000 	mov	r2, r0
 c106f68:	e1a03001 	mov	r3, r1
 c106f6c:	e28d1020 	add	r1, sp, #32
 c106f70:	e8910003 	ldm	r1, {r0, r1}
 c106f74:	ebfff44b 	bl	c1040a8 <__adddf3>
 c106f78:	e58d0020 	str	r0, [sp, #32]
 c106f7c:	e58d1024 	str	r1, [sp, #36]	; 0x24
 c106f80:	ebfff673 	bl	c104954 <__aeabi_d2iz>
 c106f84:	e3a02000 	mov	r2, #0
 c106f88:	e1a07000 	mov	r7, r0
 c106f8c:	e3a03000 	mov	r3, #0
 c106f90:	e28d1020 	add	r1, sp, #32
 c106f94:	e8910003 	ldm	r1, {r0, r1}
 c106f98:	eb001428 	bl	c10c040 <__aeabi_dcmplt>
 c106f9c:	e3500000 	cmp	r0, #0
 c106fa0:	0a000006 	beq	c106fc0 <_dtoa_r+0x240>
 c106fa4:	e1a00007 	mov	r0, r7
 c106fa8:	ebfff50b 	bl	c1043dc <__aeabi_i2d>
 c106fac:	e28d3020 	add	r3, sp, #32
 c106fb0:	e893000c 	ldm	r3, {r2, r3}
 c106fb4:	eb00141b 	bl	c10c028 <__aeabi_dcmpeq>
 c106fb8:	e3500000 	cmp	r0, #0
 c106fbc:	02477001 	subeq	r7, r7, #1
 c106fc0:	e3570016 	cmp	r7, #22
 c106fc4:	83a02001 	movhi	r2, #1
 c106fc8:	858d2064 	strhi	r2, [sp, #100]	; 0x64
 c106fcc:	8a00000b 	bhi	c107000 <_dtoa_r+0x280>
 c106fd0:	e59f32e0 	ldr	r3, [pc, #736]	; c1072b8 <_dtoa_r+0x538>
 c106fd4:	e0833187 	add	r3, r3, r7, lsl #3
 c106fd8:	e8930003 	ldm	r3, {r0, r1}
 c106fdc:	e1a02005 	mov	r2, r5
 c106fe0:	e1a03006 	mov	r3, r6
 c106fe4:	eb001427 	bl	c10c088 <__aeabi_dcmpgt>
 c106fe8:	e3500000 	cmp	r0, #0
 c106fec:	13a01000 	movne	r1, #0
 c106ff0:	03a03000 	moveq	r3, #0
 c106ff4:	158d1064 	strne	r1, [sp, #100]	; 0x64
 c106ff8:	058d3064 	streq	r3, [sp, #100]	; 0x64
 c106ffc:	12477001 	subne	r7, r7, #1
 c107000:	e2499001 	sub	r9, r9, #1
 c107004:	e059900a 	subs	r9, r9, sl
 c107008:	42699000 	rsbmi	r9, r9, #0
 c10700c:	43a0c000 	movmi	ip, #0
 c107010:	53a01000 	movpl	r1, #0
 c107014:	458d9044 	strmi	r9, [sp, #68]	; 0x44
 c107018:	458dc034 	strmi	ip, [sp, #52]	; 0x34
 c10701c:	558d9034 	strpl	r9, [sp, #52]	; 0x34
 c107020:	558d1044 	strpl	r1, [sp, #68]	; 0x44
 c107024:	e3570000 	cmp	r7, #0
 c107028:	ba000203 	blt	c10783c <_dtoa_r+0xabc>
 c10702c:	e59d2034 	ldr	r2, [sp, #52]	; 0x34
 c107030:	e3a03000 	mov	r3, #0
 c107034:	e0822007 	add	r2, r2, r7
 c107038:	e58d2034 	str	r2, [sp, #52]	; 0x34
 c10703c:	e58d7054 	str	r7, [sp, #84]	; 0x54
 c107040:	e58d304c 	str	r3, [sp, #76]	; 0x4c
 c107044:	e59d30b0 	ldr	r3, [sp, #176]	; 0xb0
 c107048:	e3530009 	cmp	r3, #9
 c10704c:	8a000025 	bhi	c1070e8 <_dtoa_r+0x368>
 c107050:	e3530005 	cmp	r3, #5
 c107054:	c2433004 	subgt	r3, r3, #4
 c107058:	c58d30b0 	strgt	r3, [sp, #176]	; 0xb0
 c10705c:	e59dc0b0 	ldr	ip, [sp, #176]	; 0xb0
 c107060:	e24c3002 	sub	r3, ip, #2
 c107064:	c3a0a000 	movgt	sl, #0
 c107068:	d3a0a001 	movle	sl, #1
 c10706c:	e3530003 	cmp	r3, #3
 c107070:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
 c107074:	ea0002d3 	b	c107bc8 <_dtoa_r+0xe48>
 c107078:	0c107b78 	.word	0x0c107b78
 c10707c:	0c107bbc 	.word	0x0c107bbc
 c107080:	0c107bb0 	.word	0x0c107bb0
 c107084:	0c107b14 	.word	0x0c107b14
 c107088:	e3c704ff 	bic	r0, r7, #-16777216	; 0xff000000
 c10708c:	e3c0060f 	bic	r0, r0, #15728640	; 0xf00000
 c107090:	e59f3204 	ldr	r3, [pc, #516]	; c10729c <_dtoa_r+0x51c>
 c107094:	e59f2208 	ldr	r2, [pc, #520]	; c1072a4 <_dtoa_r+0x524>
 c107098:	e3500000 	cmp	r0, #0
 c10709c:	01a00002 	moveq	r0, r2
 c1070a0:	11a00003 	movne	r0, r3
 c1070a4:	eaffff70 	b	c106e6c <_dtoa_r+0xec>
 c1070a8:	e1a01005 	mov	r1, r5
 c1070ac:	e1a02006 	mov	r2, r6
 c1070b0:	e58d1038 	str	r1, [sp, #56]	; 0x38
 c1070b4:	e58d203c 	str	r2, [sp, #60]	; 0x3c
 c1070b8:	e59dc03c 	ldr	ip, [sp, #60]	; 0x3c
 c1070bc:	e3cc24ff 	bic	r2, ip, #-16777216	; 0xff000000
 c1070c0:	e3c2260f 	bic	r2, r2, #15728640	; 0xf00000
 c1070c4:	e38225ff 	orr	r2, r2, #1069547520	; 0x3fc00000
 c1070c8:	e2433fff 	sub	r3, r3, #1020	; 0x3fc
 c1070cc:	e3822603 	orr	r2, r2, #3145728	; 0x300000
 c1070d0:	e3a01000 	mov	r1, #0
 c1070d4:	e58d203c 	str	r2, [sp, #60]	; 0x3c
 c1070d8:	e243a003 	sub	sl, r3, #3
 c1070dc:	e59d9084 	ldr	r9, [sp, #132]	; 0x84
 c1070e0:	e58d1068 	str	r1, [sp, #104]	; 0x68
 c1070e4:	eaffff8c 	b	c106f1c <_dtoa_r+0x19c>
 c1070e8:	e3a01000 	mov	r1, #0
 c1070ec:	e3e02000 	mvn	r2, #0
 c1070f0:	e3a03001 	mov	r3, #1
 c1070f4:	e58d10b0 	str	r1, [sp, #176]	; 0xb0
 c1070f8:	e58d2048 	str	r2, [sp, #72]	; 0x48
 c1070fc:	e58d3050 	str	r3, [sp, #80]	; 0x50
 c107100:	e58d2040 	str	r2, [sp, #64]	; 0x40
 c107104:	e58d10b4 	str	r1, [sp, #180]	; 0xb4
 c107108:	e1a0a001 	mov	sl, r1
 c10710c:	e3a01000 	mov	r1, #0
 c107110:	e5841044 	str	r1, [r4, #68]	; 0x44
 c107114:	e1a00004 	mov	r0, r4
 c107118:	eb000742 	bl	c108e28 <_Balloc>
 c10711c:	e35a0000 	cmp	sl, #0
 c107120:	e58d0020 	str	r0, [sp, #32]
 c107124:	e5840040 	str	r0, [r4, #64]	; 0x40
 c107128:	0a0000ad 	beq	c1073e4 <_dtoa_r+0x664>
 c10712c:	e1a01005 	mov	r1, r5
 c107130:	e1a02006 	mov	r2, r6
 c107134:	e3570000 	cmp	r7, #0
 c107138:	e58d5028 	str	r5, [sp, #40]	; 0x28
 c10713c:	e58d602c 	str	r6, [sp, #44]	; 0x2c
 c107140:	e58d1038 	str	r1, [sp, #56]	; 0x38
 c107144:	e58d203c 	str	r2, [sp, #60]	; 0x3c
 c107148:	da00031d 	ble	c107dc4 <_dtoa_r+0x1044>
 c10714c:	e59f3164 	ldr	r3, [pc, #356]	; c1072b8 <_dtoa_r+0x538>
 c107150:	e207200f 	and	r2, r7, #15
 c107154:	e0833182 	add	r3, r3, r2, lsl #3
 c107158:	e1a05247 	asr	r5, r7, #4
 c10715c:	e8930006 	ldm	r3, {r1, r2}
 c107160:	e3150010 	tst	r5, #16
 c107164:	e58d1058 	str	r1, [sp, #88]	; 0x58
 c107168:	e58d205c 	str	r2, [sp, #92]	; 0x5c
 c10716c:	03a0a002 	moveq	sl, #2
 c107170:	1a0001b9 	bne	c10785c <_dtoa_r+0xadc>
 c107174:	e3550000 	cmp	r5, #0
 c107178:	0a00000c 	beq	c1071b0 <_dtoa_r+0x430>
 c10717c:	e59f6130 	ldr	r6, [pc, #304]	; c1072b4 <_dtoa_r+0x534>
 c107180:	e28d1058 	add	r1, sp, #88	; 0x58
 c107184:	e8910003 	ldm	r1, {r0, r1}
 c107188:	e3150001 	tst	r5, #1
 c10718c:	0a000002 	beq	c10719c <_dtoa_r+0x41c>
 c107190:	e896000c 	ldm	r6, {r2, r3}
 c107194:	ebfff4c7 	bl	c1044b8 <__aeabi_dmul>
 c107198:	e28aa001 	add	sl, sl, #1
 c10719c:	e1b050c5 	asrs	r5, r5, #1
 c1071a0:	e2866008 	add	r6, r6, #8
 c1071a4:	1afffff7 	bne	c107188 <_dtoa_r+0x408>
 c1071a8:	e58d0058 	str	r0, [sp, #88]	; 0x58
 c1071ac:	e58d105c 	str	r1, [sp, #92]	; 0x5c
 c1071b0:	e28d1028 	add	r1, sp, #40	; 0x28
 c1071b4:	e8910003 	ldm	r1, {r0, r1}
 c1071b8:	e28d3058 	add	r3, sp, #88	; 0x58
 c1071bc:	e893000c 	ldm	r3, {r2, r3}
 c1071c0:	ebfff560 	bl	c104748 <__aeabi_ddiv>
 c1071c4:	e58d0028 	str	r0, [sp, #40]	; 0x28
 c1071c8:	e58d102c 	str	r1, [sp, #44]	; 0x2c
 c1071cc:	e59d2064 	ldr	r2, [sp, #100]	; 0x64
 c1071d0:	e3520000 	cmp	r2, #0
 c1071d4:	0a00003b 	beq	c1072c8 <_dtoa_r+0x548>
 c1071d8:	e59f30d0 	ldr	r3, [pc, #208]	; c1072b0 <_dtoa_r+0x530>
 c1071dc:	e28d1028 	add	r1, sp, #40	; 0x28
 c1071e0:	e8910003 	ldm	r1, {r0, r1}
 c1071e4:	e3a02000 	mov	r2, #0
 c1071e8:	eb001394 	bl	c10c040 <__aeabi_dcmplt>
 c1071ec:	e59dc040 	ldr	ip, [sp, #64]	; 0x40
 c1071f0:	e3500000 	cmp	r0, #0
 c1071f4:	e3a03001 	mov	r3, #1
 c1071f8:	03a03000 	moveq	r3, #0
 c1071fc:	e35c0000 	cmp	ip, #0
 c107200:	d3a03000 	movle	r3, #0
 c107204:	c2033001 	andgt	r3, r3, #1
 c107208:	e3530000 	cmp	r3, #0
 c10720c:	0a00002d 	beq	c1072c8 <_dtoa_r+0x548>
 c107210:	e59d1048 	ldr	r1, [sp, #72]	; 0x48
 c107214:	e3510000 	cmp	r1, #0
 c107218:	da00006d 	ble	c1073d4 <_dtoa_r+0x654>
 c10721c:	e3a02000 	mov	r2, #0
 c107220:	e59f3094 	ldr	r3, [pc, #148]	; c1072bc <_dtoa_r+0x53c>
 c107224:	e28d1028 	add	r1, sp, #40	; 0x28
 c107228:	e8910003 	ldm	r1, {r0, r1}
 c10722c:	ebfff4a1 	bl	c1044b8 <__aeabi_dmul>
 c107230:	e58d0028 	str	r0, [sp, #40]	; 0x28
 c107234:	e58d102c 	str	r1, [sp, #44]	; 0x2c
 c107238:	e28a0001 	add	r0, sl, #1
 c10723c:	ebfff466 	bl	c1043dc <__aeabi_i2d>
 c107240:	e1a02000 	mov	r2, r0
 c107244:	e1a03001 	mov	r3, r1
 c107248:	e28d1028 	add	r1, sp, #40	; 0x28
 c10724c:	e8910003 	ldm	r1, {r0, r1}
 c107250:	ebfff498 	bl	c1044b8 <__aeabi_dmul>
 c107254:	e3a02000 	mov	r2, #0
 c107258:	e59f3048 	ldr	r3, [pc, #72]	; c1072a8 <_dtoa_r+0x528>
 c10725c:	ebfff391 	bl	c1040a8 <__adddf3>
 c107260:	e2472001 	sub	r2, r7, #1
 c107264:	e1a09000 	mov	r9, r0
 c107268:	e58d2058 	str	r2, [sp, #88]	; 0x58
 c10726c:	e241a50d 	sub	sl, r1, #54525952	; 0x3400000
 c107270:	e59dc048 	ldr	ip, [sp, #72]	; 0x48
 c107274:	ea0001b6 	b	c107954 <_dtoa_r+0xbd4>
 c107278:	636f4361 	.word	0x636f4361
 c10727c:	3fd287a7 	.word	0x3fd287a7
 c107280:	8b60c8b3 	.word	0x8b60c8b3
 c107284:	3fc68a28 	.word	0x3fc68a28
 c107288:	509f79fb 	.word	0x509f79fb
 c10728c:	3fd34413 	.word	0x3fd34413
 c107290:	0c100a14 	.word	0x0c100a14
 c107294:	0c100a15 	.word	0x0c100a15
 c107298:	0000270f 	.word	0x0000270f
 c10729c:	0c100a24 	.word	0x0c100a24
 c1072a0:	3ff80000 	.word	0x3ff80000
 c1072a4:	0c100a18 	.word	0x0c100a18
 c1072a8:	401c0000 	.word	0x401c0000
 c1072ac:	40140000 	.word	0x40140000
 c1072b0:	3ff00000 	.word	0x3ff00000
 c1072b4:	0c100b10 	.word	0x0c100b10
 c1072b8:	0c100a48 	.word	0x0c100a48
 c1072bc:	40240000 	.word	0x40240000
 c1072c0:	3fe00000 	.word	0x3fe00000
 c1072c4:	7ff00000 	.word	0x7ff00000
 c1072c8:	e1a0000a 	mov	r0, sl
 c1072cc:	ebfff442 	bl	c1043dc <__aeabi_i2d>
 c1072d0:	e28d3028 	add	r3, sp, #40	; 0x28
 c1072d4:	e893000c 	ldm	r3, {r2, r3}
 c1072d8:	ebfff476 	bl	c1044b8 <__aeabi_dmul>
 c1072dc:	e51f303c 	ldr	r3, [pc, #-60]	; c1072a8 <_dtoa_r+0x528>
 c1072e0:	e3a02000 	mov	r2, #0
 c1072e4:	ebfff36f 	bl	c1040a8 <__adddf3>
 c1072e8:	e59d3040 	ldr	r3, [sp, #64]	; 0x40
 c1072ec:	e241550d 	sub	r5, r1, #54525952	; 0x3400000
 c1072f0:	e3530000 	cmp	r3, #0
 c1072f4:	e1a09000 	mov	r9, r0
 c1072f8:	e1a0a005 	mov	sl, r5
 c1072fc:	1a000192 	bne	c10794c <_dtoa_r+0xbcc>
 c107300:	e3a02000 	mov	r2, #0
 c107304:	e51f3060 	ldr	r3, [pc, #-96]	; c1072ac <_dtoa_r+0x52c>
 c107308:	e28d1028 	add	r1, sp, #40	; 0x28
 c10730c:	e8910003 	ldm	r1, {r0, r1}
 c107310:	ebfff363 	bl	c1040a4 <__aeabi_dsub>
 c107314:	e1a02009 	mov	r2, r9
 c107318:	e1a03005 	mov	r3, r5
 c10731c:	e58d0028 	str	r0, [sp, #40]	; 0x28
 c107320:	e58d102c 	str	r1, [sp, #44]	; 0x2c
 c107324:	eb001357 	bl	c10c088 <__aeabi_dcmpgt>
 c107328:	e3500000 	cmp	r0, #0
 c10732c:	1a000183 	bne	c107940 <_dtoa_r+0xbc0>
 c107330:	e1a02009 	mov	r2, r9
 c107334:	e2853102 	add	r3, r5, #-2147483648	; 0x80000000
 c107338:	e28d1028 	add	r1, sp, #40	; 0x28
 c10733c:	e8910003 	ldm	r1, {r0, r1}
 c107340:	eb00133e 	bl	c10c040 <__aeabi_dcmplt>
 c107344:	e3500000 	cmp	r0, #0
 c107348:	0a000021 	beq	c1073d4 <_dtoa_r+0x654>
 c10734c:	e59d9040 	ldr	r9, [sp, #64]	; 0x40
 c107350:	e58d9038 	str	r9, [sp, #56]	; 0x38
 c107354:	e59d20b4 	ldr	r2, [sp, #180]	; 0xb4
 c107358:	e59d5020 	ldr	r5, [sp, #32]
 c10735c:	e1e07002 	mvn	r7, r2
 c107360:	e3a0a000 	mov	sl, #0
 c107364:	e1a00004 	mov	r0, r4
 c107368:	e1a01009 	mov	r1, r9
 c10736c:	eb0006cf 	bl	c108eb0 <_Bfree>
 c107370:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
 c107374:	e3530000 	cmp	r3, #0
 c107378:	0a000005 	beq	c107394 <_dtoa_r+0x614>
 c10737c:	e15a0003 	cmp	sl, r3
 c107380:	135a0000 	cmpne	sl, #0
 c107384:	1a000282 	bne	c107d94 <_dtoa_r+0x1014>
 c107388:	e1a00004 	mov	r0, r4
 c10738c:	e59d1038 	ldr	r1, [sp, #56]	; 0x38
 c107390:	eb0006c6 	bl	c108eb0 <_Bfree>
 c107394:	e1a00004 	mov	r0, r4
 c107398:	e1a01008 	mov	r1, r8
 c10739c:	eb0006c3 	bl	c108eb0 <_Bfree>
 c1073a0:	e3a03000 	mov	r3, #0
 c1073a4:	e5c53000 	strb	r3, [r5]
 c1073a8:	e59dc0b8 	ldr	ip, [sp, #184]	; 0xb8
 c1073ac:	e2877001 	add	r7, r7, #1
 c1073b0:	e35b0000 	cmp	fp, #0
 c1073b4:	e58c7000 	str	r7, [ip]
 c1073b8:	e59d0020 	ldr	r0, [sp, #32]
 c1073bc:	158b5000 	strne	r5, [fp]
 c1073c0:	eafffea0 	b	c106e48 <_dtoa_r+0xc8>
 c1073c4:	e59d707c 	ldr	r7, [sp, #124]	; 0x7c
 c1073c8:	e59d806c 	ldr	r8, [sp, #108]	; 0x6c
 c1073cc:	e59d4028 	ldr	r4, [sp, #40]	; 0x28
 c1073d0:	e59db070 	ldr	fp, [sp, #112]	; 0x70
 c1073d4:	e28d2038 	add	r2, sp, #56	; 0x38
 c1073d8:	e8920006 	ldm	r2, {r1, r2}
 c1073dc:	e1a05001 	mov	r5, r1
 c1073e0:	e1a06002 	mov	r6, r2
 c1073e4:	e59d3080 	ldr	r3, [sp, #128]	; 0x80
 c1073e8:	e357000e 	cmp	r7, #14
 c1073ec:	c3a09000 	movgt	r9, #0
 c1073f0:	d3a09001 	movle	r9, #1
 c1073f4:	e3530000 	cmp	r3, #0
 c1073f8:	b3a09000 	movlt	r9, #0
 c1073fc:	e3590000 	cmp	r9, #0
 c107400:	0a00008f 	beq	c107644 <_dtoa_r+0x8c4>
 c107404:	e59d20b4 	ldr	r2, [sp, #180]	; 0xb4
 c107408:	e59d3040 	ldr	r3, [sp, #64]	; 0x40
 c10740c:	e1a09fa2 	lsr	r9, r2, #31
 c107410:	e3530000 	cmp	r3, #0
 c107414:	c3a09000 	movgt	r9, #0
 c107418:	d2099001 	andle	r9, r9, #1
 c10741c:	e51f316c 	ldr	r3, [pc, #-364]	; c1072b8 <_dtoa_r+0x538>
 c107420:	e0833187 	add	r3, r3, r7, lsl #3
 c107424:	e8930006 	ldm	r3, {r1, r2}
 c107428:	e3590000 	cmp	r9, #0
 c10742c:	e58d1010 	str	r1, [sp, #16]
 c107430:	e58d2014 	str	r2, [sp, #20]
 c107434:	1a000134 	bne	c10790c <_dtoa_r+0xb8c>
 c107438:	e1a03002 	mov	r3, r2
 c10743c:	e1a00005 	mov	r0, r5
 c107440:	e1a02001 	mov	r2, r1
 c107444:	e1a01006 	mov	r1, r6
 c107448:	ebfff4be 	bl	c104748 <__aeabi_ddiv>
 c10744c:	ebfff540 	bl	c104954 <__aeabi_d2iz>
 c107450:	e1a0a000 	mov	sl, r0
 c107454:	ebfff3e0 	bl	c1043dc <__aeabi_i2d>
 c107458:	e28d3010 	add	r3, sp, #16
 c10745c:	e893000c 	ldm	r3, {r2, r3}
 c107460:	ebfff414 	bl	c1044b8 <__aeabi_dmul>
 c107464:	e1a02000 	mov	r2, r0
 c107468:	e1a03001 	mov	r3, r1
 c10746c:	e1a00005 	mov	r0, r5
 c107470:	e1a01006 	mov	r1, r6
 c107474:	ebfff30a 	bl	c1040a4 <__aeabi_dsub>
 c107478:	e59d2040 	ldr	r2, [sp, #64]	; 0x40
 c10747c:	e59d5020 	ldr	r5, [sp, #32]
 c107480:	e28a3030 	add	r3, sl, #48	; 0x30
 c107484:	e3520001 	cmp	r2, #1
 c107488:	e58d0018 	str	r0, [sp, #24]
 c10748c:	e58d101c 	str	r1, [sp, #28]
 c107490:	e4c53001 	strb	r3, [r5], #1
 c107494:	0a000040 	beq	c10759c <_dtoa_r+0x81c>
 c107498:	e3a02000 	mov	r2, #0
 c10749c:	e51f31e8 	ldr	r3, [pc, #-488]	; c1072bc <_dtoa_r+0x53c>
 c1074a0:	ebfff404 	bl	c1044b8 <__aeabi_dmul>
 c1074a4:	e3a03000 	mov	r3, #0
 c1074a8:	e3a02000 	mov	r2, #0
 c1074ac:	e58d0018 	str	r0, [sp, #24]
 c1074b0:	e58d101c 	str	r1, [sp, #28]
 c1074b4:	eb0012db 	bl	c10c028 <__aeabi_dcmpeq>
 c1074b8:	e3500000 	cmp	r0, #0
 c1074bc:	e3a03001 	mov	r3, #1
 c1074c0:	11a03009 	movne	r3, r9
 c1074c4:	e31300ff 	tst	r3, #255	; 0xff
 c1074c8:	0affffb1 	beq	c107394 <_dtoa_r+0x614>
 c1074cc:	e59d1040 	ldr	r1, [sp, #64]	; 0x40
 c1074d0:	e59dc020 	ldr	ip, [sp, #32]
 c1074d4:	e1a06005 	mov	r6, r5
 c1074d8:	e58d8034 	str	r8, [sp, #52]	; 0x34
 c1074dc:	e08c9001 	add	r9, ip, r1
 c1074e0:	e1a08004 	mov	r8, r4
 c1074e4:	e58d7040 	str	r7, [sp, #64]	; 0x40
 c1074e8:	e28d5018 	add	r5, sp, #24
 c1074ec:	e8950030 	ldm	r5, {r4, r5}
 c1074f0:	ea00000a 	b	c107520 <_dtoa_r+0x7a0>
 c1074f4:	ebfff3ef 	bl	c1044b8 <__aeabi_dmul>
 c1074f8:	e3a03000 	mov	r3, #0
 c1074fc:	e3a02000 	mov	r2, #0
 c107500:	e1a04000 	mov	r4, r0
 c107504:	e1a05001 	mov	r5, r1
 c107508:	eb0012c6 	bl	c10c028 <__aeabi_dcmpeq>
 c10750c:	e3500000 	cmp	r0, #0
 c107510:	e3a03001 	mov	r3, #1
 c107514:	13a03000 	movne	r3, #0
 c107518:	e31300ff 	tst	r3, #255	; 0xff
 c10751c:	0a000316 	beq	c10817c <_dtoa_r+0x13fc>
 c107520:	e28d3010 	add	r3, sp, #16
 c107524:	e893000c 	ldm	r3, {r2, r3}
 c107528:	e1a00004 	mov	r0, r4
 c10752c:	e1a01005 	mov	r1, r5
 c107530:	ebfff484 	bl	c104748 <__aeabi_ddiv>
 c107534:	ebfff506 	bl	c104954 <__aeabi_d2iz>
 c107538:	e1a0a000 	mov	sl, r0
 c10753c:	ebfff3a6 	bl	c1043dc <__aeabi_i2d>
 c107540:	e28d3010 	add	r3, sp, #16
 c107544:	e893000c 	ldm	r3, {r2, r3}
 c107548:	ebfff3da 	bl	c1044b8 <__aeabi_dmul>
 c10754c:	e1a02000 	mov	r2, r0
 c107550:	e1a03001 	mov	r3, r1
 c107554:	e1a00004 	mov	r0, r4
 c107558:	e1a01005 	mov	r1, r5
 c10755c:	ebfff2d0 	bl	c1040a4 <__aeabi_dsub>
 c107560:	e28ac030 	add	ip, sl, #48	; 0x30
 c107564:	e4c6c001 	strb	ip, [r6], #1
 c107568:	e1560009 	cmp	r6, r9
 c10756c:	e1a04000 	mov	r4, r0
 c107570:	e1a05001 	mov	r5, r1
 c107574:	e3a02000 	mov	r2, #0
 c107578:	e51f32c4 	ldr	r3, [pc, #-708]	; c1072bc <_dtoa_r+0x53c>
 c10757c:	e1a07006 	mov	r7, r6
 c107580:	1affffdb 	bne	c1074f4 <_dtoa_r+0x774>
 c107584:	e58d4018 	str	r4, [sp, #24]
 c107588:	e58d501c 	str	r5, [sp, #28]
 c10758c:	e59d7040 	ldr	r7, [sp, #64]	; 0x40
 c107590:	e1a04008 	mov	r4, r8
 c107594:	e59d8034 	ldr	r8, [sp, #52]	; 0x34
 c107598:	e1a05006 	mov	r5, r6
 c10759c:	e28d1018 	add	r1, sp, #24
 c1075a0:	e8910003 	ldm	r1, {r0, r1}
 c1075a4:	e1a02000 	mov	r2, r0
 c1075a8:	e1a03001 	mov	r3, r1
 c1075ac:	ebfff2bd 	bl	c1040a8 <__adddf3>
 c1075b0:	e58d0018 	str	r0, [sp, #24]
 c1075b4:	e58d101c 	str	r1, [sp, #28]
 c1075b8:	e28d3018 	add	r3, sp, #24
 c1075bc:	e893000c 	ldm	r3, {r2, r3}
 c1075c0:	e28d1010 	add	r1, sp, #16
 c1075c4:	e8910003 	ldm	r1, {r0, r1}
 c1075c8:	eb00129c 	bl	c10c040 <__aeabi_dcmplt>
 c1075cc:	e3500000 	cmp	r0, #0
 c1075d0:	1a000008 	bne	c1075f8 <_dtoa_r+0x878>
 c1075d4:	e28d1010 	add	r1, sp, #16
 c1075d8:	e8910003 	ldm	r1, {r0, r1}
 c1075dc:	e28d3018 	add	r3, sp, #24
 c1075e0:	e893000c 	ldm	r3, {r2, r3}
 c1075e4:	eb00128f 	bl	c10c028 <__aeabi_dcmpeq>
 c1075e8:	e3500000 	cmp	r0, #0
 c1075ec:	0affff68 	beq	c107394 <_dtoa_r+0x614>
 c1075f0:	e31a0001 	tst	sl, #1
 c1075f4:	0affff66 	beq	c107394 <_dtoa_r+0x614>
 c1075f8:	e58d7058 	str	r7, [sp, #88]	; 0x58
 c1075fc:	e59d0020 	ldr	r0, [sp, #32]
 c107600:	e1a03005 	mov	r3, r5
 c107604:	e5531001 	ldrb	r1, [r3, #-1]
 c107608:	e2432001 	sub	r2, r3, #1
 c10760c:	e3510039 	cmp	r1, #57	; 0x39
 c107610:	e1a05003 	mov	r5, r3
 c107614:	e1a03002 	mov	r3, r2
 c107618:	1a0002f4 	bne	c1081f0 <_dtoa_r+0x1470>
 c10761c:	e1530000 	cmp	r3, r0
 c107620:	1afffff7 	bne	c107604 <_dtoa_r+0x884>
 c107624:	e59d3058 	ldr	r3, [sp, #88]	; 0x58
 c107628:	e59dc020 	ldr	ip, [sp, #32]
 c10762c:	e2837001 	add	r7, r3, #1
 c107630:	e3a01031 	mov	r1, #49	; 0x31
 c107634:	e3a03030 	mov	r3, #48	; 0x30
 c107638:	e5cc3000 	strb	r3, [ip]
 c10763c:	e5c21000 	strb	r1, [r2]
 c107640:	eaffff53 	b	c107394 <_dtoa_r+0x614>
 c107644:	e59d1050 	ldr	r1, [sp, #80]	; 0x50
 c107648:	e3510000 	cmp	r1, #0
 c10764c:	1a00008d 	bne	c107888 <_dtoa_r+0xb08>
 c107650:	e59d3050 	ldr	r3, [sp, #80]	; 0x50
 c107654:	e59d904c 	ldr	r9, [sp, #76]	; 0x4c
 c107658:	e59da044 	ldr	sl, [sp, #68]	; 0x44
 c10765c:	e58d3038 	str	r3, [sp, #56]	; 0x38
 c107660:	e59dc034 	ldr	ip, [sp, #52]	; 0x34
 c107664:	e35c0000 	cmp	ip, #0
 c107668:	c35a0000 	cmpgt	sl, #0
 c10766c:	da000008 	ble	c107694 <_dtoa_r+0x914>
 c107670:	e1a0300c 	mov	r3, ip
 c107674:	e59d1044 	ldr	r1, [sp, #68]	; 0x44
 c107678:	e153000a 	cmp	r3, sl
 c10767c:	a1a0300a 	movge	r3, sl
 c107680:	e0631001 	rsb	r1, r3, r1
 c107684:	e063c00c 	rsb	ip, r3, ip
 c107688:	e58d1044 	str	r1, [sp, #68]	; 0x44
 c10768c:	e58dc034 	str	ip, [sp, #52]	; 0x34
 c107690:	e063a00a 	rsb	sl, r3, sl
 c107694:	e59d204c 	ldr	r2, [sp, #76]	; 0x4c
 c107698:	e3520000 	cmp	r2, #0
 c10769c:	da000017 	ble	c107700 <_dtoa_r+0x980>
 c1076a0:	e59d3050 	ldr	r3, [sp, #80]	; 0x50
 c1076a4:	e3530000 	cmp	r3, #0
 c1076a8:	0a0002b8 	beq	c108190 <_dtoa_r+0x1410>
 c1076ac:	e3590000 	cmp	r9, #0
 c1076b0:	da00000f 	ble	c1076f4 <_dtoa_r+0x974>
 c1076b4:	e59d1038 	ldr	r1, [sp, #56]	; 0x38
 c1076b8:	e1a02009 	mov	r2, r9
 c1076bc:	e1a00004 	mov	r0, r4
 c1076c0:	eb00072e 	bl	c109380 <__pow5mult>
 c1076c4:	e58d0038 	str	r0, [sp, #56]	; 0x38
 c1076c8:	e1a02008 	mov	r2, r8
 c1076cc:	e59d1038 	ldr	r1, [sp, #56]	; 0x38
 c1076d0:	e1a00004 	mov	r0, r4
 c1076d4:	eb0006af 	bl	c109198 <__multiply>
 c1076d8:	e1a01008 	mov	r1, r8
 c1076dc:	e1a03000 	mov	r3, r0
 c1076e0:	e1a00004 	mov	r0, r4
 c1076e4:	e58d300c 	str	r3, [sp, #12]
 c1076e8:	eb0005f0 	bl	c108eb0 <_Bfree>
 c1076ec:	e59d300c 	ldr	r3, [sp, #12]
 c1076f0:	e1a08003 	mov	r8, r3
 c1076f4:	e59dc04c 	ldr	ip, [sp, #76]	; 0x4c
 c1076f8:	e05c2009 	subs	r2, ip, r9
 c1076fc:	1a0002a9 	bne	c1081a8 <_dtoa_r+0x1428>
 c107700:	e3a01001 	mov	r1, #1
 c107704:	e1a00004 	mov	r0, r4
 c107708:	eb000699 	bl	c109174 <__i2b>
 c10770c:	e59d1054 	ldr	r1, [sp, #84]	; 0x54
 c107710:	e3510000 	cmp	r1, #0
 c107714:	e1a09000 	mov	r9, r0
 c107718:	da000004 	ble	c107730 <_dtoa_r+0x9b0>
 c10771c:	e1a01009 	mov	r1, r9
 c107720:	e1a00004 	mov	r0, r4
 c107724:	e59d2054 	ldr	r2, [sp, #84]	; 0x54
 c107728:	eb000714 	bl	c109380 <__pow5mult>
 c10772c:	e1a09000 	mov	r9, r0
 c107730:	e59d20b0 	ldr	r2, [sp, #176]	; 0xb0
 c107734:	e3520001 	cmp	r2, #1
 c107738:	c3a02000 	movgt	r2, #0
 c10773c:	c58d2028 	strgt	r2, [sp, #40]	; 0x28
 c107740:	da00023d 	ble	c10803c <_dtoa_r+0x12bc>
 c107744:	e59dc054 	ldr	ip, [sp, #84]	; 0x54
 c107748:	e35c0000 	cmp	ip, #0
 c10774c:	03a03001 	moveq	r3, #1
 c107750:	1a00022e 	bne	c108010 <_dtoa_r+0x1290>
 c107754:	e59d1034 	ldr	r1, [sp, #52]	; 0x34
 c107758:	e0833001 	add	r3, r3, r1
 c10775c:	e213301f 	ands	r3, r3, #31
 c107760:	03a0301c 	moveq	r3, #28
 c107764:	1a00011f 	bne	c107be8 <_dtoa_r+0xe68>
 c107768:	e59dc044 	ldr	ip, [sp, #68]	; 0x44
 c10776c:	e59d1034 	ldr	r1, [sp, #52]	; 0x34
 c107770:	e08cc003 	add	ip, ip, r3
 c107774:	e0811003 	add	r1, r1, r3
 c107778:	e58dc044 	str	ip, [sp, #68]	; 0x44
 c10777c:	e58d1034 	str	r1, [sp, #52]	; 0x34
 c107780:	e08aa003 	add	sl, sl, r3
 c107784:	e59d2044 	ldr	r2, [sp, #68]	; 0x44
 c107788:	e3520000 	cmp	r2, #0
 c10778c:	da000003 	ble	c1077a0 <_dtoa_r+0xa20>
 c107790:	e1a01008 	mov	r1, r8
 c107794:	e1a00004 	mov	r0, r4
 c107798:	eb000735 	bl	c109474 <__lshift>
 c10779c:	e1a08000 	mov	r8, r0
 c1077a0:	e59d3034 	ldr	r3, [sp, #52]	; 0x34
 c1077a4:	e3530000 	cmp	r3, #0
 c1077a8:	da000004 	ble	c1077c0 <_dtoa_r+0xa40>
 c1077ac:	e1a01009 	mov	r1, r9
 c1077b0:	e1a00004 	mov	r0, r4
 c1077b4:	e1a02003 	mov	r2, r3
 c1077b8:	eb00072d 	bl	c109474 <__lshift>
 c1077bc:	e1a09000 	mov	r9, r0
 c1077c0:	e59dc064 	ldr	ip, [sp, #100]	; 0x64
 c1077c4:	e35c0000 	cmp	ip, #0
 c1077c8:	1a0001f6 	bne	c107fa8 <_dtoa_r+0x1228>
 c1077cc:	e59dc040 	ldr	ip, [sp, #64]	; 0x40
 c1077d0:	e59d10b0 	ldr	r1, [sp, #176]	; 0xb0
 c1077d4:	e35c0000 	cmp	ip, #0
 c1077d8:	c3a03000 	movgt	r3, #0
 c1077dc:	d3a03001 	movle	r3, #1
 c1077e0:	e3510002 	cmp	r1, #2
 c1077e4:	d3a03000 	movle	r3, #0
 c1077e8:	e3530000 	cmp	r3, #0
 c1077ec:	0a000108 	beq	c107c14 <_dtoa_r+0xe94>
 c1077f0:	e35c0000 	cmp	ip, #0
 c1077f4:	1afffed6 	bne	c107354 <_dtoa_r+0x5d4>
 c1077f8:	e1a01009 	mov	r1, r9
 c1077fc:	e3a02005 	mov	r2, #5
 c107800:	e1a0300c 	mov	r3, ip
 c107804:	e1a00004 	mov	r0, r4
 c107808:	eb0005af 	bl	c108ecc <__multadd>
 c10780c:	e1a09000 	mov	r9, r0
 c107810:	e1a01009 	mov	r1, r9
 c107814:	e1a00008 	mov	r0, r8
 c107818:	eb000756 	bl	c109578 <__mcmp>
 c10781c:	e3500000 	cmp	r0, #0
 c107820:	dafffecb 	ble	c107354 <_dtoa_r+0x5d4>
 c107824:	e59d5020 	ldr	r5, [sp, #32]
 c107828:	e3a03031 	mov	r3, #49	; 0x31
 c10782c:	e4c53001 	strb	r3, [r5], #1
 c107830:	e2877001 	add	r7, r7, #1
 c107834:	e3a0a000 	mov	sl, #0
 c107838:	eafffec9 	b	c107364 <_dtoa_r+0x5e4>
 c10783c:	e59dc044 	ldr	ip, [sp, #68]	; 0x44
 c107840:	e2671000 	rsb	r1, r7, #0
 c107844:	e067c00c 	rsb	ip, r7, ip
 c107848:	e3a02000 	mov	r2, #0
 c10784c:	e58dc044 	str	ip, [sp, #68]	; 0x44
 c107850:	e58d104c 	str	r1, [sp, #76]	; 0x4c
 c107854:	e58d2054 	str	r2, [sp, #84]	; 0x54
 c107858:	eafffdf9 	b	c107044 <_dtoa_r+0x2c4>
 c10785c:	e51f35b0 	ldr	r3, [pc, #-1456]	; c1072b4 <_dtoa_r+0x534>
 c107860:	e28d1028 	add	r1, sp, #40	; 0x28
 c107864:	e8910003 	ldm	r1, {r0, r1}
 c107868:	e2833020 	add	r3, r3, #32
 c10786c:	e893000c 	ldm	r3, {r2, r3}
 c107870:	ebfff3b4 	bl	c104748 <__aeabi_ddiv>
 c107874:	e205500f 	and	r5, r5, #15
 c107878:	e58d0028 	str	r0, [sp, #40]	; 0x28
 c10787c:	e58d102c 	str	r1, [sp, #44]	; 0x2c
 c107880:	e3a0a003 	mov	sl, #3
 c107884:	eafffe3a 	b	c107174 <_dtoa_r+0x3f4>
 c107888:	e59d20b0 	ldr	r2, [sp, #176]	; 0xb0
 c10788c:	e3520001 	cmp	r2, #1
 c107890:	da00024c 	ble	c1081c8 <_dtoa_r+0x1448>
 c107894:	e59d1040 	ldr	r1, [sp, #64]	; 0x40
 c107898:	e59d204c 	ldr	r2, [sp, #76]	; 0x4c
 c10789c:	e2413001 	sub	r3, r1, #1
 c1078a0:	e1520003 	cmp	r2, r3
 c1078a4:	b59dc04c 	ldrlt	ip, [sp, #76]	; 0x4c
 c1078a8:	b59d1054 	ldrlt	r1, [sp, #84]	; 0x54
 c1078ac:	b06c3003 	rsblt	r3, ip, r3
 c1078b0:	a0639002 	rsbge	r9, r3, r2
 c1078b4:	e59d2040 	ldr	r2, [sp, #64]	; 0x40
 c1078b8:	b0811003 	addlt	r1, r1, r3
 c1078bc:	b08cc003 	addlt	ip, ip, r3
 c1078c0:	b58d1054 	strlt	r1, [sp, #84]	; 0x54
 c1078c4:	b58dc04c 	strlt	ip, [sp, #76]	; 0x4c
 c1078c8:	e3520000 	cmp	r2, #0
 c1078cc:	b59d3044 	ldrlt	r3, [sp, #68]	; 0x44
 c1078d0:	a59da044 	ldrge	sl, [sp, #68]	; 0x44
 c1078d4:	a59d3040 	ldrge	r3, [sp, #64]	; 0x40
 c1078d8:	b062a003 	rsblt	sl, r2, r3
 c1078dc:	b3a03000 	movlt	r3, #0
 c1078e0:	e59dc044 	ldr	ip, [sp, #68]	; 0x44
 c1078e4:	e59d2034 	ldr	r2, [sp, #52]	; 0x34
 c1078e8:	e08cc003 	add	ip, ip, r3
 c1078ec:	e0822003 	add	r2, r2, r3
 c1078f0:	e1a00004 	mov	r0, r4
 c1078f4:	e3a01001 	mov	r1, #1
 c1078f8:	e58dc044 	str	ip, [sp, #68]	; 0x44
 c1078fc:	e58d2034 	str	r2, [sp, #52]	; 0x34
 c107900:	eb00061b 	bl	c109174 <__i2b>
 c107904:	e58d0038 	str	r0, [sp, #56]	; 0x38
 c107908:	eaffff54 	b	c107660 <_dtoa_r+0x8e0>
 c10790c:	e59d3040 	ldr	r3, [sp, #64]	; 0x40
 c107910:	e3530000 	cmp	r3, #0
 c107914:	1a000228 	bne	c1081bc <_dtoa_r+0x143c>
 c107918:	e3a02000 	mov	r2, #0
 c10791c:	e51f3678 	ldr	r3, [pc, #-1656]	; c1072ac <_dtoa_r+0x52c>
 c107920:	e28d1010 	add	r1, sp, #16
 c107924:	e8910003 	ldm	r1, {r0, r1}
 c107928:	ebfff2e2 	bl	c1044b8 <__aeabi_dmul>
 c10792c:	e1a02005 	mov	r2, r5
 c107930:	e1a03006 	mov	r3, r6
 c107934:	eb0011cd 	bl	c10c070 <__aeabi_dcmpge>
 c107938:	e3500000 	cmp	r0, #0
 c10793c:	1afffe82 	bne	c10734c <_dtoa_r+0x5cc>
 c107940:	e59d9040 	ldr	r9, [sp, #64]	; 0x40
 c107944:	e58d9038 	str	r9, [sp, #56]	; 0x38
 c107948:	eaffffb5 	b	c107824 <_dtoa_r+0xaa4>
 c10794c:	e58d7058 	str	r7, [sp, #88]	; 0x58
 c107950:	e59dc040 	ldr	ip, [sp, #64]	; 0x40
 c107954:	e59d1050 	ldr	r1, [sp, #80]	; 0x50
 c107958:	e3510000 	cmp	r1, #0
 c10795c:	0a000133 	beq	c107e30 <_dtoa_r+0x10b0>
 c107960:	e51f36b0 	ldr	r3, [pc, #-1712]	; c1072b8 <_dtoa_r+0x538>
 c107964:	e083318c 	add	r3, r3, ip, lsl #3
 c107968:	e913000c 	ldmdb	r3, {r2, r3}
 c10796c:	e3a00000 	mov	r0, #0
 c107970:	e51f16b8 	ldr	r1, [pc, #-1720]	; c1072c0 <_dtoa_r+0x540>
 c107974:	e58dc00c 	str	ip, [sp, #12]
 c107978:	ebfff372 	bl	c104748 <__aeabi_ddiv>
 c10797c:	e1a02009 	mov	r2, r9
 c107980:	e1a0300a 	mov	r3, sl
 c107984:	ebfff1c6 	bl	c1040a4 <__aeabi_dsub>
 c107988:	e1a09000 	mov	r9, r0
 c10798c:	e1a0a001 	mov	sl, r1
 c107990:	e28d1028 	add	r1, sp, #40	; 0x28
 c107994:	e8910003 	ldm	r1, {r0, r1}
 c107998:	ebfff3ed 	bl	c104954 <__aeabi_d2iz>
 c10799c:	e1a05000 	mov	r5, r0
 c1079a0:	ebfff28d 	bl	c1043dc <__aeabi_i2d>
 c1079a4:	e1a02000 	mov	r2, r0
 c1079a8:	e1a03001 	mov	r3, r1
 c1079ac:	e28d1028 	add	r1, sp, #40	; 0x28
 c1079b0:	e8910003 	ldm	r1, {r0, r1}
 c1079b4:	ebfff1ba 	bl	c1040a4 <__aeabi_dsub>
 c1079b8:	e2853030 	add	r3, r5, #48	; 0x30
 c1079bc:	e59d5020 	ldr	r5, [sp, #32]
 c1079c0:	e58d0028 	str	r0, [sp, #40]	; 0x28
 c1079c4:	e58d102c 	str	r1, [sp, #44]	; 0x2c
 c1079c8:	e4c53001 	strb	r3, [r5], #1
 c1079cc:	e1a00009 	mov	r0, r9
 c1079d0:	e1a0100a 	mov	r1, sl
 c1079d4:	e28d3028 	add	r3, sp, #40	; 0x28
 c1079d8:	e893000c 	ldm	r3, {r2, r3}
 c1079dc:	eb0011a9 	bl	c10c088 <__aeabi_dcmpgt>
 c1079e0:	e3500000 	cmp	r0, #0
 c1079e4:	1a00016d 	bne	c107fa0 <_dtoa_r+0x1220>
 c1079e8:	e28d3028 	add	r3, sp, #40	; 0x28
 c1079ec:	e893000c 	ldm	r3, {r2, r3}
 c1079f0:	e3a00000 	mov	r0, #0
 c1079f4:	e51f174c 	ldr	r1, [pc, #-1868]	; c1072b0 <_dtoa_r+0x530>
 c1079f8:	ebfff1a9 	bl	c1040a4 <__aeabi_dsub>
 c1079fc:	e1a02000 	mov	r2, r0
 c107a00:	e1a03001 	mov	r3, r1
 c107a04:	e1a00009 	mov	r0, r9
 c107a08:	e1a0100a 	mov	r1, sl
 c107a0c:	eb00119d 	bl	c10c088 <__aeabi_dcmpgt>
 c107a10:	e3500000 	cmp	r0, #0
 c107a14:	e59dc00c 	ldr	ip, [sp, #12]
 c107a18:	1afffef7 	bne	c1075fc <_dtoa_r+0x87c>
 c107a1c:	e35c0001 	cmp	ip, #1
 c107a20:	dafffe6b 	ble	c1073d4 <_dtoa_r+0x654>
 c107a24:	e59d2020 	ldr	r2, [sp, #32]
 c107a28:	e082c00c 	add	ip, r2, ip
 c107a2c:	e58d707c 	str	r7, [sp, #124]	; 0x7c
 c107a30:	e58d806c 	str	r8, [sp, #108]	; 0x6c
 c107a34:	e58db070 	str	fp, [sp, #112]	; 0x70
 c107a38:	e28d8028 	add	r8, sp, #40	; 0x28
 c107a3c:	e8980180 	ldm	r8, {r7, r8}
 c107a40:	e1a06005 	mov	r6, r5
 c107a44:	e58d4028 	str	r4, [sp, #40]	; 0x28
 c107a48:	e1a0b00c 	mov	fp, ip
 c107a4c:	ea000007 	b	c107a70 <_dtoa_r+0xcf0>
 c107a50:	ebfff193 	bl	c1040a4 <__aeabi_dsub>
 c107a54:	e1a02009 	mov	r2, r9
 c107a58:	e1a0300a 	mov	r3, sl
 c107a5c:	eb001177 	bl	c10c040 <__aeabi_dcmplt>
 c107a60:	e3500000 	cmp	r0, #0
 c107a64:	1a0001e5 	bne	c108200 <_dtoa_r+0x1480>
 c107a68:	e156000b 	cmp	r6, fp
 c107a6c:	0afffe54 	beq	c1073c4 <_dtoa_r+0x644>
 c107a70:	e3a02000 	mov	r2, #0
 c107a74:	e51f37c0 	ldr	r3, [pc, #-1984]	; c1072bc <_dtoa_r+0x53c>
 c107a78:	e1a00009 	mov	r0, r9
 c107a7c:	e1a0100a 	mov	r1, sl
 c107a80:	ebfff28c 	bl	c1044b8 <__aeabi_dmul>
 c107a84:	e3a02000 	mov	r2, #0
 c107a88:	e51f37d4 	ldr	r3, [pc, #-2004]	; c1072bc <_dtoa_r+0x53c>
 c107a8c:	e1a09000 	mov	r9, r0
 c107a90:	e1a0a001 	mov	sl, r1
 c107a94:	e1a00007 	mov	r0, r7
 c107a98:	e1a01008 	mov	r1, r8
 c107a9c:	ebfff285 	bl	c1044b8 <__aeabi_dmul>
 c107aa0:	e1a08001 	mov	r8, r1
 c107aa4:	e1a07000 	mov	r7, r0
 c107aa8:	ebfff3a9 	bl	c104954 <__aeabi_d2iz>
 c107aac:	e1a04000 	mov	r4, r0
 c107ab0:	ebfff249 	bl	c1043dc <__aeabi_i2d>
 c107ab4:	e1a02000 	mov	r2, r0
 c107ab8:	e1a03001 	mov	r3, r1
 c107abc:	e1a00007 	mov	r0, r7
 c107ac0:	e1a01008 	mov	r1, r8
 c107ac4:	ebfff176 	bl	c1040a4 <__aeabi_dsub>
 c107ac8:	e2844030 	add	r4, r4, #48	; 0x30
 c107acc:	e4c64001 	strb	r4, [r6], #1
 c107ad0:	e1a02009 	mov	r2, r9
 c107ad4:	e1a0300a 	mov	r3, sl
 c107ad8:	e1a08001 	mov	r8, r1
 c107adc:	e1a07000 	mov	r7, r0
 c107ae0:	eb001156 	bl	c10c040 <__aeabi_dcmplt>
 c107ae4:	e3500000 	cmp	r0, #0
 c107ae8:	e1a02007 	mov	r2, r7
 c107aec:	e1a03008 	mov	r3, r8
 c107af0:	e3a00000 	mov	r0, #0
 c107af4:	e51f184c 	ldr	r1, [pc, #-2124]	; c1072b0 <_dtoa_r+0x530>
 c107af8:	e1a05006 	mov	r5, r6
 c107afc:	0affffd3 	beq	c107a50 <_dtoa_r+0xcd0>
 c107b00:	e59d806c 	ldr	r8, [sp, #108]	; 0x6c
 c107b04:	e59d4028 	ldr	r4, [sp, #40]	; 0x28
 c107b08:	e59db070 	ldr	fp, [sp, #112]	; 0x70
 c107b0c:	e59d7058 	ldr	r7, [sp, #88]	; 0x58
 c107b10:	eafffe1f 	b	c107394 <_dtoa_r+0x614>
 c107b14:	e3a01001 	mov	r1, #1
 c107b18:	e58d1050 	str	r1, [sp, #80]	; 0x50
 c107b1c:	e59d30b4 	ldr	r3, [sp, #180]	; 0xb4
 c107b20:	e0873003 	add	r3, r7, r3
 c107b24:	e2830001 	add	r0, r3, #1
 c107b28:	e3500000 	cmp	r0, #0
 c107b2c:	e58d3048 	str	r3, [sp, #72]	; 0x48
 c107b30:	c58d0040 	strgt	r0, [sp, #64]	; 0x40
 c107b34:	da00013b 	ble	c108028 <_dtoa_r+0x12a8>
 c107b38:	e3a01000 	mov	r1, #0
 c107b3c:	e3500017 	cmp	r0, #23
 c107b40:	e5841044 	str	r1, [r4, #68]	; 0x44
 c107b44:	83a03004 	movhi	r3, #4
 c107b48:	9a000206 	bls	c108368 <_dtoa_r+0x15e8>
 c107b4c:	e1a03083 	lsl	r3, r3, #1
 c107b50:	e2832014 	add	r2, r3, #20
 c107b54:	e1520000 	cmp	r2, r0
 c107b58:	e2811001 	add	r1, r1, #1
 c107b5c:	9afffffa 	bls	c107b4c <_dtoa_r+0xdcc>
 c107b60:	e59d2040 	ldr	r2, [sp, #64]	; 0x40
 c107b64:	e5841044 	str	r1, [r4, #68]	; 0x44
 c107b68:	e352000e 	cmp	r2, #14
 c107b6c:	83a0a000 	movhi	sl, #0
 c107b70:	920aa001 	andls	sl, sl, #1
 c107b74:	eafffd66 	b	c107114 <_dtoa_r+0x394>
 c107b78:	e3a03000 	mov	r3, #0
 c107b7c:	e58d3050 	str	r3, [sp, #80]	; 0x50
 c107b80:	e59dc0b4 	ldr	ip, [sp, #180]	; 0xb4
 c107b84:	e35c0000 	cmp	ip, #0
 c107b88:	c1a0000c 	movgt	r0, ip
 c107b8c:	c58dc048 	strgt	ip, [sp, #72]	; 0x48
 c107b90:	c58dc040 	strgt	ip, [sp, #64]	; 0x40
 c107b94:	caffffe7 	bgt	c107b38 <_dtoa_r+0xdb8>
 c107b98:	e3a01001 	mov	r1, #1
 c107b9c:	e58d1048 	str	r1, [sp, #72]	; 0x48
 c107ba0:	e00aa001 	and	sl, sl, r1
 c107ba4:	e58d1040 	str	r1, [sp, #64]	; 0x40
 c107ba8:	e58d10b4 	str	r1, [sp, #180]	; 0xb4
 c107bac:	eafffd56 	b	c10710c <_dtoa_r+0x38c>
 c107bb0:	e3a02001 	mov	r2, #1
 c107bb4:	e58d2050 	str	r2, [sp, #80]	; 0x50
 c107bb8:	eafffff0 	b	c107b80 <_dtoa_r+0xe00>
 c107bbc:	e3a02000 	mov	r2, #0
 c107bc0:	e58d2050 	str	r2, [sp, #80]	; 0x50
 c107bc4:	eaffffd4 	b	c107b1c <_dtoa_r+0xd9c>
 c107bc8:	e3e0c000 	mvn	ip, #0
 c107bcc:	e3a0a000 	mov	sl, #0
 c107bd0:	e3a01001 	mov	r1, #1
 c107bd4:	e58dc048 	str	ip, [sp, #72]	; 0x48
 c107bd8:	e58d1050 	str	r1, [sp, #80]	; 0x50
 c107bdc:	e58dc040 	str	ip, [sp, #64]	; 0x40
 c107be0:	e58da0b4 	str	sl, [sp, #180]	; 0xb4
 c107be4:	eafffd48 	b	c10710c <_dtoa_r+0x38c>
 c107be8:	e2633020 	rsb	r3, r3, #32
 c107bec:	e3530004 	cmp	r3, #4
 c107bf0:	da0001d9 	ble	c10835c <_dtoa_r+0x15dc>
 c107bf4:	e59d2044 	ldr	r2, [sp, #68]	; 0x44
 c107bf8:	e2433004 	sub	r3, r3, #4
 c107bfc:	e0822003 	add	r2, r2, r3
 c107c00:	e0811003 	add	r1, r1, r3
 c107c04:	e58d2044 	str	r2, [sp, #68]	; 0x44
 c107c08:	e08aa003 	add	sl, sl, r3
 c107c0c:	e58d1034 	str	r1, [sp, #52]	; 0x34
 c107c10:	eafffedb 	b	c107784 <_dtoa_r+0xa04>
 c107c14:	e59d3050 	ldr	r3, [sp, #80]	; 0x50
 c107c18:	e3530000 	cmp	r3, #0
 c107c1c:	0a00011c 	beq	c108094 <_dtoa_r+0x1314>
 c107c20:	e35a0000 	cmp	sl, #0
 c107c24:	da000004 	ble	c107c3c <_dtoa_r+0xebc>
 c107c28:	e1a00004 	mov	r0, r4
 c107c2c:	e59d1038 	ldr	r1, [sp, #56]	; 0x38
 c107c30:	e1a0200a 	mov	r2, sl
 c107c34:	eb00060e 	bl	c109474 <__lshift>
 c107c38:	e58d0038 	str	r0, [sp, #56]	; 0x38
 c107c3c:	e59dc028 	ldr	ip, [sp, #40]	; 0x28
 c107c40:	e35c0000 	cmp	ip, #0
 c107c44:	1a00018b 	bne	c108278 <_dtoa_r+0x14f8>
 c107c48:	e59dc038 	ldr	ip, [sp, #56]	; 0x38
 c107c4c:	e58dc034 	str	ip, [sp, #52]	; 0x34
 c107c50:	e59d1020 	ldr	r1, [sp, #32]
 c107c54:	e59d2040 	ldr	r2, [sp, #64]	; 0x40
 c107c58:	e2053001 	and	r3, r5, #1
 c107c5c:	e0812002 	add	r2, r1, r2
 c107c60:	e59da038 	ldr	sl, [sp, #56]	; 0x38
 c107c64:	e58d1018 	str	r1, [sp, #24]
 c107c68:	e58d2028 	str	r2, [sp, #40]	; 0x28
 c107c6c:	e58d3038 	str	r3, [sp, #56]	; 0x38
 c107c70:	e58d7044 	str	r7, [sp, #68]	; 0x44
 c107c74:	e1a01009 	mov	r1, r9
 c107c78:	e1a00008 	mov	r0, r8
 c107c7c:	ebfffbcb 	bl	c106bb0 <quorem>
 c107c80:	e2800030 	add	r0, r0, #48	; 0x30
 c107c84:	e1a0100a 	mov	r1, sl
 c107c88:	e58d0040 	str	r0, [sp, #64]	; 0x40
 c107c8c:	e1a00008 	mov	r0, r8
 c107c90:	eb000638 	bl	c109578 <__mcmp>
 c107c94:	e1a01009 	mov	r1, r9
 c107c98:	e1a05000 	mov	r5, r0
 c107c9c:	e59d2034 	ldr	r2, [sp, #52]	; 0x34
 c107ca0:	e1a00004 	mov	r0, r4
 c107ca4:	eb00064b 	bl	c1095d8 <__mdiff>
 c107ca8:	e590300c 	ldr	r3, [r0, #12]
 c107cac:	e3530000 	cmp	r3, #0
 c107cb0:	e1a07000 	mov	r7, r0
 c107cb4:	13a06001 	movne	r6, #1
 c107cb8:	0a000030 	beq	c107d80 <_dtoa_r+0x1000>
 c107cbc:	e1a00004 	mov	r0, r4
 c107cc0:	e1a01007 	mov	r1, r7
 c107cc4:	eb000479 	bl	c108eb0 <_Bfree>
 c107cc8:	e59dc0b0 	ldr	ip, [sp, #176]	; 0xb0
 c107ccc:	e196c00c 	orrs	ip, r6, ip
 c107cd0:	1a000002 	bne	c107ce0 <_dtoa_r+0xf60>
 c107cd4:	e59d1038 	ldr	r1, [sp, #56]	; 0x38
 c107cd8:	e3510000 	cmp	r1, #0
 c107cdc:	0a00018c 	beq	c108314 <_dtoa_r+0x1594>
 c107ce0:	e3550000 	cmp	r5, #0
 c107ce4:	ba000149 	blt	c108210 <_dtoa_r+0x1490>
 c107ce8:	e59d10b0 	ldr	r1, [sp, #176]	; 0xb0
 c107cec:	e1951001 	orrs	r1, r5, r1
 c107cf0:	1a000002 	bne	c107d00 <_dtoa_r+0xf80>
 c107cf4:	e59d2038 	ldr	r2, [sp, #56]	; 0x38
 c107cf8:	e3520000 	cmp	r2, #0
 c107cfc:	0a000143 	beq	c108210 <_dtoa_r+0x1490>
 c107d00:	e3560000 	cmp	r6, #0
 c107d04:	ca000171 	bgt	c1082d0 <_dtoa_r+0x1550>
 c107d08:	e59dc018 	ldr	ip, [sp, #24]
 c107d0c:	e59d3040 	ldr	r3, [sp, #64]	; 0x40
 c107d10:	e4cc3001 	strb	r3, [ip], #1
 c107d14:	e59d1028 	ldr	r1, [sp, #40]	; 0x28
 c107d18:	e15c0001 	cmp	ip, r1
 c107d1c:	e58dc018 	str	ip, [sp, #24]
 c107d20:	e1a0300c 	mov	r3, ip
 c107d24:	0a000165 	beq	c1082c0 <_dtoa_r+0x1540>
 c107d28:	e1a01008 	mov	r1, r8
 c107d2c:	e3a0200a 	mov	r2, #10
 c107d30:	e1a00004 	mov	r0, r4
 c107d34:	e3a03000 	mov	r3, #0
 c107d38:	eb000463 	bl	c108ecc <__multadd>
 c107d3c:	e59d2034 	ldr	r2, [sp, #52]	; 0x34
 c107d40:	e15a0002 	cmp	sl, r2
 c107d44:	e1a08000 	mov	r8, r0
 c107d48:	0a000015 	beq	c107da4 <_dtoa_r+0x1024>
 c107d4c:	e1a0100a 	mov	r1, sl
 c107d50:	e3a0200a 	mov	r2, #10
 c107d54:	e3a03000 	mov	r3, #0
 c107d58:	e1a00004 	mov	r0, r4
 c107d5c:	eb00045a 	bl	c108ecc <__multadd>
 c107d60:	e59d1034 	ldr	r1, [sp, #52]	; 0x34
 c107d64:	e1a0a000 	mov	sl, r0
 c107d68:	e3a0200a 	mov	r2, #10
 c107d6c:	e1a00004 	mov	r0, r4
 c107d70:	e3a03000 	mov	r3, #0
 c107d74:	eb000454 	bl	c108ecc <__multadd>
 c107d78:	e58d0034 	str	r0, [sp, #52]	; 0x34
 c107d7c:	eaffffbc 	b	c107c74 <_dtoa_r+0xef4>
 c107d80:	e1a00008 	mov	r0, r8
 c107d84:	e1a01007 	mov	r1, r7
 c107d88:	eb0005fa 	bl	c109578 <__mcmp>
 c107d8c:	e1a06000 	mov	r6, r0
 c107d90:	eaffffc9 	b	c107cbc <_dtoa_r+0xf3c>
 c107d94:	e1a00004 	mov	r0, r4
 c107d98:	e1a0100a 	mov	r1, sl
 c107d9c:	eb000443 	bl	c108eb0 <_Bfree>
 c107da0:	eafffd78 	b	c107388 <_dtoa_r+0x608>
 c107da4:	e1a0100a 	mov	r1, sl
 c107da8:	e1a00004 	mov	r0, r4
 c107dac:	e3a0200a 	mov	r2, #10
 c107db0:	e3a03000 	mov	r3, #0
 c107db4:	eb000444 	bl	c108ecc <__multadd>
 c107db8:	e1a0a000 	mov	sl, r0
 c107dbc:	e58d0034 	str	r0, [sp, #52]	; 0x34
 c107dc0:	eaffffab 	b	c107c74 <_dtoa_r+0xef4>
 c107dc4:	e2675000 	rsb	r5, r7, #0
 c107dc8:	e3550000 	cmp	r5, #0
 c107dcc:	0a0000e8 	beq	c108174 <_dtoa_r+0x13f4>
 c107dd0:	e51f3b20 	ldr	r3, [pc, #-2848]	; c1072b8 <_dtoa_r+0x538>
 c107dd4:	e205200f 	and	r2, r5, #15
 c107dd8:	e0833182 	add	r3, r3, r2, lsl #3
 c107ddc:	e28d1028 	add	r1, sp, #40	; 0x28
 c107de0:	e8910003 	ldm	r1, {r0, r1}
 c107de4:	e893000c 	ldm	r3, {r2, r3}
 c107de8:	ebfff1b2 	bl	c1044b8 <__aeabi_dmul>
 c107dec:	e1b05245 	asrs	r5, r5, #4
 c107df0:	e58d0028 	str	r0, [sp, #40]	; 0x28
 c107df4:	e58d102c 	str	r1, [sp, #44]	; 0x2c
 c107df8:	0a0000dd 	beq	c108174 <_dtoa_r+0x13f4>
 c107dfc:	e51f6b50 	ldr	r6, [pc, #-2896]	; c1072b4 <_dtoa_r+0x534>
 c107e00:	e3a0a002 	mov	sl, #2
 c107e04:	e3150001 	tst	r5, #1
 c107e08:	0a000002 	beq	c107e18 <_dtoa_r+0x1098>
 c107e0c:	e896000c 	ldm	r6, {r2, r3}
 c107e10:	ebfff1a8 	bl	c1044b8 <__aeabi_dmul>
 c107e14:	e28aa001 	add	sl, sl, #1
 c107e18:	e1b050c5 	asrs	r5, r5, #1
 c107e1c:	e2866008 	add	r6, r6, #8
 c107e20:	1afffff7 	bne	c107e04 <_dtoa_r+0x1084>
 c107e24:	e58d0028 	str	r0, [sp, #40]	; 0x28
 c107e28:	e58d102c 	str	r1, [sp, #44]	; 0x2c
 c107e2c:	eafffce6 	b	c1071cc <_dtoa_r+0x44c>
 c107e30:	e51f1b80 	ldr	r1, [pc, #-2944]	; c1072b8 <_dtoa_r+0x538>
 c107e34:	e24c3001 	sub	r3, ip, #1
 c107e38:	e0811183 	add	r1, r1, r3, lsl #3
 c107e3c:	e1a02009 	mov	r2, r9
 c107e40:	e58d306c 	str	r3, [sp, #108]	; 0x6c
 c107e44:	e8910003 	ldm	r1, {r0, r1}
 c107e48:	e1a0300a 	mov	r3, sl
 c107e4c:	e58dc00c 	str	ip, [sp, #12]
 c107e50:	ebfff198 	bl	c1044b8 <__aeabi_dmul>
 c107e54:	e58d0070 	str	r0, [sp, #112]	; 0x70
 c107e58:	e58d1074 	str	r1, [sp, #116]	; 0x74
 c107e5c:	e28d1028 	add	r1, sp, #40	; 0x28
 c107e60:	e8910003 	ldm	r1, {r0, r1}
 c107e64:	ebfff2ba 	bl	c104954 <__aeabi_d2iz>
 c107e68:	e1a05000 	mov	r5, r0
 c107e6c:	ebfff15a 	bl	c1043dc <__aeabi_i2d>
 c107e70:	e1a03001 	mov	r3, r1
 c107e74:	e1a02000 	mov	r2, r0
 c107e78:	e28d1028 	add	r1, sp, #40	; 0x28
 c107e7c:	e8910003 	ldm	r1, {r0, r1}
 c107e80:	ebfff087 	bl	c1040a4 <__aeabi_dsub>
 c107e84:	e59dc00c 	ldr	ip, [sp, #12]
 c107e88:	e2853030 	add	r3, r5, #48	; 0x30
 c107e8c:	e59d5020 	ldr	r5, [sp, #32]
 c107e90:	e35c0001 	cmp	ip, #1
 c107e94:	e58d0028 	str	r0, [sp, #40]	; 0x28
 c107e98:	e58d102c 	str	r1, [sp, #44]	; 0x2c
 c107e9c:	e4c53001 	strb	r3, [r5], #1
 c107ea0:	0a000020 	beq	c107f28 <_dtoa_r+0x11a8>
 c107ea4:	e59d1020 	ldr	r1, [sp, #32]
 c107ea8:	e2419001 	sub	r9, r1, #1
 c107eac:	e1a06001 	mov	r6, r1
 c107eb0:	e28d1028 	add	r1, sp, #40	; 0x28
 c107eb4:	e8910003 	ldm	r1, {r0, r1}
 c107eb8:	e1a0a007 	mov	sl, r7
 c107ebc:	e089900c 	add	r9, r9, ip
 c107ec0:	e1a07005 	mov	r7, r5
 c107ec4:	e1a05004 	mov	r5, r4
 c107ec8:	e3a02000 	mov	r2, #0
 c107ecc:	e51f3c18 	ldr	r3, [pc, #-3096]	; c1072bc <_dtoa_r+0x53c>
 c107ed0:	ebfff178 	bl	c1044b8 <__aeabi_dmul>
 c107ed4:	e58d0028 	str	r0, [sp, #40]	; 0x28
 c107ed8:	e58d102c 	str	r1, [sp, #44]	; 0x2c
 c107edc:	ebfff29c 	bl	c104954 <__aeabi_d2iz>
 c107ee0:	e1a04000 	mov	r4, r0
 c107ee4:	ebfff13c 	bl	c1043dc <__aeabi_i2d>
 c107ee8:	e2844030 	add	r4, r4, #48	; 0x30
 c107eec:	e1a02000 	mov	r2, r0
 c107ef0:	e1a03001 	mov	r3, r1
 c107ef4:	e28d1028 	add	r1, sp, #40	; 0x28
 c107ef8:	e8910003 	ldm	r1, {r0, r1}
 c107efc:	ebfff068 	bl	c1040a4 <__aeabi_dsub>
 c107f00:	e5e64001 	strb	r4, [r6, #1]!
 c107f04:	e1560009 	cmp	r6, r9
 c107f08:	1affffee 	bne	c107ec8 <_dtoa_r+0x1148>
 c107f0c:	e59d206c 	ldr	r2, [sp, #108]	; 0x6c
 c107f10:	e58d0028 	str	r0, [sp, #40]	; 0x28
 c107f14:	e58d102c 	str	r1, [sp, #44]	; 0x2c
 c107f18:	e1a04005 	mov	r4, r5
 c107f1c:	e1a05007 	mov	r5, r7
 c107f20:	e0855002 	add	r5, r5, r2
 c107f24:	e1a0700a 	mov	r7, sl
 c107f28:	e3a02000 	mov	r2, #0
 c107f2c:	e51f3c74 	ldr	r3, [pc, #-3188]	; c1072c0 <_dtoa_r+0x540>
 c107f30:	e28d1070 	add	r1, sp, #112	; 0x70
 c107f34:	e8910003 	ldm	r1, {r0, r1}
 c107f38:	ebfff05a 	bl	c1040a8 <__adddf3>
 c107f3c:	e1a02000 	mov	r2, r0
 c107f40:	e1a03001 	mov	r3, r1
 c107f44:	e28d1028 	add	r1, sp, #40	; 0x28
 c107f48:	e8910003 	ldm	r1, {r0, r1}
 c107f4c:	eb00104d 	bl	c10c088 <__aeabi_dcmpgt>
 c107f50:	e3500000 	cmp	r0, #0
 c107f54:	1afffda8 	bne	c1075fc <_dtoa_r+0x87c>
 c107f58:	e28d3070 	add	r3, sp, #112	; 0x70
 c107f5c:	e893000c 	ldm	r3, {r2, r3}
 c107f60:	e3a00000 	mov	r0, #0
 c107f64:	e51f1cac 	ldr	r1, [pc, #-3244]	; c1072c0 <_dtoa_r+0x540>
 c107f68:	ebfff04d 	bl	c1040a4 <__aeabi_dsub>
 c107f6c:	e1a02000 	mov	r2, r0
 c107f70:	e1a03001 	mov	r3, r1
 c107f74:	e28d1028 	add	r1, sp, #40	; 0x28
 c107f78:	e8910003 	ldm	r1, {r0, r1}
 c107f7c:	eb00102f 	bl	c10c040 <__aeabi_dcmplt>
 c107f80:	e3500000 	cmp	r0, #0
 c107f84:	0afffd12 	beq	c1073d4 <_dtoa_r+0x654>
 c107f88:	e1a03005 	mov	r3, r5
 c107f8c:	e1a05003 	mov	r5, r3
 c107f90:	e5533001 	ldrb	r3, [r3, #-1]
 c107f94:	e3530030 	cmp	r3, #48	; 0x30
 c107f98:	e2453001 	sub	r3, r5, #1
 c107f9c:	0afffffa 	beq	c107f8c <_dtoa_r+0x120c>
 c107fa0:	e59d7058 	ldr	r7, [sp, #88]	; 0x58
 c107fa4:	eafffcfa 	b	c107394 <_dtoa_r+0x614>
 c107fa8:	e1a00008 	mov	r0, r8
 c107fac:	e1a01009 	mov	r1, r9
 c107fb0:	eb000570 	bl	c109578 <__mcmp>
 c107fb4:	e3500000 	cmp	r0, #0
 c107fb8:	aafffe03 	bge	c1077cc <_dtoa_r+0xa4c>
 c107fbc:	e1a01008 	mov	r1, r8
 c107fc0:	e3a03000 	mov	r3, #0
 c107fc4:	e1a00004 	mov	r0, r4
 c107fc8:	e3a0200a 	mov	r2, #10
 c107fcc:	eb0003be 	bl	c108ecc <__multadd>
 c107fd0:	e59d1050 	ldr	r1, [sp, #80]	; 0x50
 c107fd4:	e3510000 	cmp	r1, #0
 c107fd8:	059d3048 	ldreq	r3, [sp, #72]	; 0x48
 c107fdc:	e1a08000 	mov	r8, r0
 c107fe0:	e2477001 	sub	r7, r7, #1
 c107fe4:	058d3040 	streq	r3, [sp, #64]	; 0x40
 c107fe8:	0afffdf7 	beq	c1077cc <_dtoa_r+0xa4c>
 c107fec:	e3a0200a 	mov	r2, #10
 c107ff0:	e1a00004 	mov	r0, r4
 c107ff4:	e59d1038 	ldr	r1, [sp, #56]	; 0x38
 c107ff8:	e3a03000 	mov	r3, #0
 c107ffc:	eb0003b2 	bl	c108ecc <__multadd>
 c108000:	e59d2048 	ldr	r2, [sp, #72]	; 0x48
 c108004:	e58d0038 	str	r0, [sp, #56]	; 0x38
 c108008:	e58d2040 	str	r2, [sp, #64]	; 0x40
 c10800c:	eafffdee 	b	c1077cc <_dtoa_r+0xa4c>
 c108010:	e5993010 	ldr	r3, [r9, #16]
 c108014:	e0893103 	add	r3, r9, r3, lsl #2
 c108018:	e5930010 	ldr	r0, [r3, #16]
 c10801c:	eb00041c 	bl	c109094 <__hi0bits>
 c108020:	e2603020 	rsb	r3, r0, #32
 c108024:	eafffdca 	b	c107754 <_dtoa_r+0x9d4>
 c108028:	e350000e 	cmp	r0, #14
 c10802c:	83a0a000 	movhi	sl, #0
 c108030:	920aa001 	andls	sl, sl, #1
 c108034:	e58d0040 	str	r0, [sp, #64]	; 0x40
 c108038:	eafffc33 	b	c10710c <_dtoa_r+0x38c>
 c10803c:	e3550000 	cmp	r5, #0
 c108040:	13a03000 	movne	r3, #0
 c108044:	158d3028 	strne	r3, [sp, #40]	; 0x28
 c108048:	1afffdbd 	bne	c107744 <_dtoa_r+0x9c4>
 c10804c:	e3c634ff 	bic	r3, r6, #-16777216	; 0xff000000
 c108050:	e3c3360f 	bic	r3, r3, #15728640	; 0xf00000
 c108054:	e3530000 	cmp	r3, #0
 c108058:	158d5028 	strne	r5, [sp, #40]	; 0x28
 c10805c:	1afffdb8 	bne	c107744 <_dtoa_r+0x9c4>
 c108060:	e51f3da4 	ldr	r3, [pc, #-3492]	; c1072c4 <_dtoa_r+0x544>
 c108064:	e0063003 	and	r3, r6, r3
 c108068:	e3530000 	cmp	r3, #0
 c10806c:	159d3044 	ldrne	r3, [sp, #68]	; 0x44
 c108070:	159dc034 	ldrne	ip, [sp, #52]	; 0x34
 c108074:	12833001 	addne	r3, r3, #1
 c108078:	128cc001 	addne	ip, ip, #1
 c10807c:	13a01001 	movne	r1, #1
 c108080:	158d3044 	strne	r3, [sp, #68]	; 0x44
 c108084:	158dc034 	strne	ip, [sp, #52]	; 0x34
 c108088:	158d1028 	strne	r1, [sp, #40]	; 0x28
 c10808c:	058d3028 	streq	r3, [sp, #40]	; 0x28
 c108090:	eafffdab 	b	c107744 <_dtoa_r+0x9c4>
 c108094:	e1a0a007 	mov	sl, r7
 c108098:	e59d5020 	ldr	r5, [sp, #32]
 c10809c:	e3a06001 	mov	r6, #1
 c1080a0:	e59d7040 	ldr	r7, [sp, #64]	; 0x40
 c1080a4:	ea000006 	b	c1080c4 <_dtoa_r+0x1344>
 c1080a8:	e1a01008 	mov	r1, r8
 c1080ac:	e1a00004 	mov	r0, r4
 c1080b0:	e3a0200a 	mov	r2, #10
 c1080b4:	e3a03000 	mov	r3, #0
 c1080b8:	eb000383 	bl	c108ecc <__multadd>
 c1080bc:	e2866001 	add	r6, r6, #1
 c1080c0:	e1a08000 	mov	r8, r0
 c1080c4:	e1a01009 	mov	r1, r9
 c1080c8:	e1a00008 	mov	r0, r8
 c1080cc:	ebfffab7 	bl	c106bb0 <quorem>
 c1080d0:	e2800030 	add	r0, r0, #48	; 0x30
 c1080d4:	e4c50001 	strb	r0, [r5], #1
 c1080d8:	e1560007 	cmp	r6, r7
 c1080dc:	e1a03005 	mov	r3, r5
 c1080e0:	bafffff0 	blt	c1080a8 <_dtoa_r+0x1328>
 c1080e4:	e58d0040 	str	r0, [sp, #64]	; 0x40
 c1080e8:	e1a0700a 	mov	r7, sl
 c1080ec:	e3a0a000 	mov	sl, #0
 c1080f0:	e1a01008 	mov	r1, r8
 c1080f4:	e3a02001 	mov	r2, #1
 c1080f8:	e1a00004 	mov	r0, r4
 c1080fc:	e58d300c 	str	r3, [sp, #12]
 c108100:	eb0004db 	bl	c109474 <__lshift>
 c108104:	e1a01009 	mov	r1, r9
 c108108:	e1a08000 	mov	r8, r0
 c10810c:	eb000519 	bl	c109578 <__mcmp>
 c108110:	e3500000 	cmp	r0, #0
 c108114:	e59d300c 	ldr	r3, [sp, #12]
 c108118:	da00000c 	ble	c108150 <_dtoa_r+0x13d0>
 c10811c:	e59d1020 	ldr	r1, [sp, #32]
 c108120:	e5532001 	ldrb	r2, [r3, #-1]
 c108124:	e3520039 	cmp	r2, #57	; 0x39
 c108128:	e1a05003 	mov	r5, r3
 c10812c:	e2433001 	sub	r3, r3, #1
 c108130:	1a00004d 	bne	c10826c <_dtoa_r+0x14ec>
 c108134:	e1530001 	cmp	r3, r1
 c108138:	1afffff8 	bne	c108120 <_dtoa_r+0x13a0>
 c10813c:	e59d2020 	ldr	r2, [sp, #32]
 c108140:	e3a03031 	mov	r3, #49	; 0x31
 c108144:	e2877001 	add	r7, r7, #1
 c108148:	e5c23000 	strb	r3, [r2]
 c10814c:	eafffc84 	b	c107364 <_dtoa_r+0x5e4>
 c108150:	1a000002 	bne	c108160 <_dtoa_r+0x13e0>
 c108154:	e59d1040 	ldr	r1, [sp, #64]	; 0x40
 c108158:	e3110001 	tst	r1, #1
 c10815c:	1affffee 	bne	c10811c <_dtoa_r+0x139c>
 c108160:	e1a05003 	mov	r5, r3
 c108164:	e5732001 	ldrb	r2, [r3, #-1]!
 c108168:	e3520030 	cmp	r2, #48	; 0x30
 c10816c:	0afffffb 	beq	c108160 <_dtoa_r+0x13e0>
 c108170:	eafffc7b 	b	c107364 <_dtoa_r+0x5e4>
 c108174:	e3a0a002 	mov	sl, #2
 c108178:	eafffc13 	b	c1071cc <_dtoa_r+0x44c>
 c10817c:	e1a05007 	mov	r5, r7
 c108180:	e1a04008 	mov	r4, r8
 c108184:	e59d7040 	ldr	r7, [sp, #64]	; 0x40
 c108188:	e59d8034 	ldr	r8, [sp, #52]	; 0x34
 c10818c:	eafffc80 	b	c107394 <_dtoa_r+0x614>
 c108190:	e1a01008 	mov	r1, r8
 c108194:	e1a00004 	mov	r0, r4
 c108198:	e59d204c 	ldr	r2, [sp, #76]	; 0x4c
 c10819c:	eb000477 	bl	c109380 <__pow5mult>
 c1081a0:	e1a08000 	mov	r8, r0
 c1081a4:	eafffd55 	b	c107700 <_dtoa_r+0x980>
 c1081a8:	e1a01008 	mov	r1, r8
 c1081ac:	e1a00004 	mov	r0, r4
 c1081b0:	eb000472 	bl	c109380 <__pow5mult>
 c1081b4:	e1a08000 	mov	r8, r0
 c1081b8:	eafffd50 	b	c107700 <_dtoa_r+0x980>
 c1081bc:	e3a09000 	mov	r9, #0
 c1081c0:	e58d9038 	str	r9, [sp, #56]	; 0x38
 c1081c4:	eafffc62 	b	c107354 <_dtoa_r+0x5d4>
 c1081c8:	e59dc068 	ldr	ip, [sp, #104]	; 0x68
 c1081cc:	e35c0000 	cmp	ip, #0
 c1081d0:	059d3084 	ldreq	r3, [sp, #132]	; 0x84
 c1081d4:	12833e43 	addne	r3, r3, #1072	; 0x430
 c1081d8:	12833003 	addne	r3, r3, #3
 c1081dc:	159d904c 	ldrne	r9, [sp, #76]	; 0x4c
 c1081e0:	059d904c 	ldreq	r9, [sp, #76]	; 0x4c
 c1081e4:	02633036 	rsbeq	r3, r3, #54	; 0x36
 c1081e8:	e59da044 	ldr	sl, [sp, #68]	; 0x44
 c1081ec:	eafffdbb 	b	c1078e0 <_dtoa_r+0xb60>
 c1081f0:	e2811001 	add	r1, r1, #1
 c1081f4:	e59d7058 	ldr	r7, [sp, #88]	; 0x58
 c1081f8:	e5c21000 	strb	r1, [r2]
 c1081fc:	eafffc64 	b	c107394 <_dtoa_r+0x614>
 c108200:	e59d806c 	ldr	r8, [sp, #108]	; 0x6c
 c108204:	e59d4028 	ldr	r4, [sp, #40]	; 0x28
 c108208:	e59db070 	ldr	fp, [sp, #112]	; 0x70
 c10820c:	eafffcfa 	b	c1075fc <_dtoa_r+0x87c>
 c108210:	e3560000 	cmp	r6, #0
 c108214:	e59d7044 	ldr	r7, [sp, #68]	; 0x44
 c108218:	da00000d 	ble	c108254 <_dtoa_r+0x14d4>
 c10821c:	e1a01008 	mov	r1, r8
 c108220:	e3a02001 	mov	r2, #1
 c108224:	e1a00004 	mov	r0, r4
 c108228:	eb000491 	bl	c109474 <__lshift>
 c10822c:	e1a01009 	mov	r1, r9
 c108230:	e1a08000 	mov	r8, r0
 c108234:	eb0004cf 	bl	c109578 <__mcmp>
 c108238:	e3500000 	cmp	r0, #0
 c10823c:	da000041 	ble	c108348 <_dtoa_r+0x15c8>
 c108240:	e59dc040 	ldr	ip, [sp, #64]	; 0x40
 c108244:	e35c0039 	cmp	ip, #57	; 0x39
 c108248:	0a00002b 	beq	c1082fc <_dtoa_r+0x157c>
 c10824c:	e28cc001 	add	ip, ip, #1
 c108250:	e58dc040 	str	ip, [sp, #64]	; 0x40
 c108254:	e59d5018 	ldr	r5, [sp, #24]
 c108258:	e59d1040 	ldr	r1, [sp, #64]	; 0x40
 c10825c:	e4c51001 	strb	r1, [r5], #1
 c108260:	e59d2034 	ldr	r2, [sp, #52]	; 0x34
 c108264:	e58d2038 	str	r2, [sp, #56]	; 0x38
 c108268:	eafffc3d 	b	c107364 <_dtoa_r+0x5e4>
 c10826c:	e2822001 	add	r2, r2, #1
 c108270:	e5c32000 	strb	r2, [r3]
 c108274:	eafffc3a 	b	c107364 <_dtoa_r+0x5e4>
 c108278:	e59d2038 	ldr	r2, [sp, #56]	; 0x38
 c10827c:	e1a00004 	mov	r0, r4
 c108280:	e5921004 	ldr	r1, [r2, #4]
 c108284:	eb0002e7 	bl	c108e28 <_Balloc>
 c108288:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
 c10828c:	e5932010 	ldr	r2, [r3, #16]
 c108290:	e2822002 	add	r2, r2, #2
 c108294:	e283100c 	add	r1, r3, #12
 c108298:	e1a0a000 	mov	sl, r0
 c10829c:	e1a02102 	lsl	r2, r2, #2
 c1082a0:	e280000c 	add	r0, r0, #12
 c1082a4:	eb00026d 	bl	c108c60 <memcpy>
 c1082a8:	e1a00004 	mov	r0, r4
 c1082ac:	e1a0100a 	mov	r1, sl
 c1082b0:	e3a02001 	mov	r2, #1
 c1082b4:	eb00046e 	bl	c109474 <__lshift>
 c1082b8:	e58d0034 	str	r0, [sp, #52]	; 0x34
 c1082bc:	eafffe63 	b	c107c50 <_dtoa_r+0xed0>
 c1082c0:	e59dc034 	ldr	ip, [sp, #52]	; 0x34
 c1082c4:	e59d7044 	ldr	r7, [sp, #68]	; 0x44
 c1082c8:	e58dc038 	str	ip, [sp, #56]	; 0x38
 c1082cc:	eaffff87 	b	c1080f0 <_dtoa_r+0x1370>
 c1082d0:	e59d3040 	ldr	r3, [sp, #64]	; 0x40
 c1082d4:	e3530039 	cmp	r3, #57	; 0x39
 c1082d8:	e59d7044 	ldr	r7, [sp, #68]	; 0x44
 c1082dc:	0a000006 	beq	c1082fc <_dtoa_r+0x157c>
 c1082e0:	e59d1040 	ldr	r1, [sp, #64]	; 0x40
 c1082e4:	e59d5018 	ldr	r5, [sp, #24]
 c1082e8:	e2813001 	add	r3, r1, #1
 c1082ec:	e4c53001 	strb	r3, [r5], #1
 c1082f0:	e59d2034 	ldr	r2, [sp, #52]	; 0x34
 c1082f4:	e58d2038 	str	r2, [sp, #56]	; 0x38
 c1082f8:	eafffc19 	b	c107364 <_dtoa_r+0x5e4>
 c1082fc:	e59d3018 	ldr	r3, [sp, #24]
 c108300:	e3a02039 	mov	r2, #57	; 0x39
 c108304:	e4c32001 	strb	r2, [r3], #1
 c108308:	e59dc034 	ldr	ip, [sp, #52]	; 0x34
 c10830c:	e58dc038 	str	ip, [sp, #56]	; 0x38
 c108310:	eaffff81 	b	c10811c <_dtoa_r+0x139c>
 c108314:	e59d2040 	ldr	r2, [sp, #64]	; 0x40
 c108318:	e3520039 	cmp	r2, #57	; 0x39
 c10831c:	e59d7044 	ldr	r7, [sp, #68]	; 0x44
 c108320:	0afffff5 	beq	c1082fc <_dtoa_r+0x157c>
 c108324:	e3550000 	cmp	r5, #0
 c108328:	c2822001 	addgt	r2, r2, #1
 c10832c:	c58d2040 	strgt	r2, [sp, #64]	; 0x40
 c108330:	e59d5018 	ldr	r5, [sp, #24]
 c108334:	e59d3040 	ldr	r3, [sp, #64]	; 0x40
 c108338:	e4c53001 	strb	r3, [r5], #1
 c10833c:	e59dc034 	ldr	ip, [sp, #52]	; 0x34
 c108340:	e58dc038 	str	ip, [sp, #56]	; 0x38
 c108344:	eafffc06 	b	c107364 <_dtoa_r+0x5e4>
 c108348:	1affffc1 	bne	c108254 <_dtoa_r+0x14d4>
 c10834c:	e59d3040 	ldr	r3, [sp, #64]	; 0x40
 c108350:	e3130001 	tst	r3, #1
 c108354:	0affffbe 	beq	c108254 <_dtoa_r+0x14d4>
 c108358:	eaffffb8 	b	c108240 <_dtoa_r+0x14c0>
 c10835c:	1283301c 	addne	r3, r3, #28
 c108360:	0afffd07 	beq	c107784 <_dtoa_r+0xa04>
 c108364:	eafffcff 	b	c107768 <_dtoa_r+0x9e8>
 c108368:	e59dc040 	ldr	ip, [sp, #64]	; 0x40
 c10836c:	e35c000e 	cmp	ip, #14
 c108370:	83a0a000 	movhi	sl, #0
 c108374:	920aa001 	andls	sl, sl, #1
 c108378:	eafffb65 	b	c107114 <_dtoa_r+0x394>
 c10837c:	e1a00000 	nop			; (mov r0, r0)

0c108380 <_setlocale_r>:
 c108380:	e92d4010 	push	{r4, lr}
 c108384:	e2524000 	subs	r4, r2, #0
 c108388:	0a000004 	beq	c1083a0 <_setlocale_r+0x20>
 c10838c:	e1a00004 	mov	r0, r4
 c108390:	e59f1048 	ldr	r1, [pc, #72]	; c1083e0 <_setlocale_r+0x60>
 c108394:	eb000615 	bl	c109bf0 <strcmp>
 c108398:	e3500000 	cmp	r0, #0
 c10839c:	1a000002 	bne	c1083ac <_setlocale_r+0x2c>
 c1083a0:	e59f003c 	ldr	r0, [pc, #60]	; c1083e4 <_setlocale_r+0x64>
 c1083a4:	e8bd4010 	pop	{r4, lr}
 c1083a8:	e12fff1e 	bx	lr
 c1083ac:	e1a00004 	mov	r0, r4
 c1083b0:	e59f102c 	ldr	r1, [pc, #44]	; c1083e4 <_setlocale_r+0x64>
 c1083b4:	eb00060d 	bl	c109bf0 <strcmp>
 c1083b8:	e3500000 	cmp	r0, #0
 c1083bc:	0afffff7 	beq	c1083a0 <_setlocale_r+0x20>
 c1083c0:	e1a00004 	mov	r0, r4
 c1083c4:	e59f101c 	ldr	r1, [pc, #28]	; c1083e8 <_setlocale_r+0x68>
 c1083c8:	eb000608 	bl	c109bf0 <strcmp>
 c1083cc:	e59f3010 	ldr	r3, [pc, #16]	; c1083e4 <_setlocale_r+0x64>
 c1083d0:	e3500000 	cmp	r0, #0
 c1083d4:	01a00003 	moveq	r0, r3
 c1083d8:	13a00000 	movne	r0, #0
 c1083dc:	eafffff0 	b	c1083a4 <_setlocale_r+0x24>
 c1083e0:	0c100a28 	.word	0x0c100a28
 c1083e4:	0c1009b0 	.word	0x0c1009b0
 c1083e8:	0c1009f4 	.word	0x0c1009f4

0c1083ec <__locale_charset>:
 c1083ec:	e51f0000 	ldr	r0, [pc, #-0]	; c1083f4 <__locale_charset+0x8>
 c1083f0:	e12fff1e 	bx	lr
 c1083f4:	0c1004a8 	.word	0x0c1004a8

0c1083f8 <__locale_mb_cur_max>:
 c1083f8:	e59f3004 	ldr	r3, [pc, #4]	; c108404 <__locale_mb_cur_max+0xc>
 c1083fc:	e5930020 	ldr	r0, [r3, #32]
 c108400:	e12fff1e 	bx	lr
 c108404:	0c1004a8 	.word	0x0c1004a8

0c108408 <__locale_msgcharset>:
 c108408:	e51f0000 	ldr	r0, [pc, #-0]	; c108410 <__locale_msgcharset+0x8>
 c10840c:	e12fff1e 	bx	lr
 c108410:	0c1004cc 	.word	0x0c1004cc

0c108414 <__locale_cjk_lang>:
 c108414:	e3a00000 	mov	r0, #0
 c108418:	e12fff1e 	bx	lr

0c10841c <_localeconv_r>:
 c10841c:	e51f0000 	ldr	r0, [pc, #-0]	; c108424 <_localeconv_r+0x8>
 c108420:	e12fff1e 	bx	lr
 c108424:	0c1004ec 	.word	0x0c1004ec

0c108428 <setlocale>:
 c108428:	e1a02001 	mov	r2, r1
 c10842c:	e59f100c 	ldr	r1, [pc, #12]	; c108440 <setlocale+0x18>
 c108430:	e1a03000 	mov	r3, r0
 c108434:	e5910000 	ldr	r0, [r1]
 c108438:	e1a01003 	mov	r1, r3
 c10843c:	eaffffcf 	b	c108380 <_setlocale_r>
 c108440:	0c100078 	.word	0x0c100078

0c108444 <localeconv>:
 c108444:	e51f0000 	ldr	r0, [pc, #-0]	; c10844c <localeconv+0x8>
 c108448:	e12fff1e 	bx	lr
 c10844c:	0c1004ec 	.word	0x0c1004ec

0c108450 <_malloc_r>:
 c108450:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 c108454:	e281400b 	add	r4, r1, #11
 c108458:	e3540016 	cmp	r4, #22
 c10845c:	83c44007 	bichi	r4, r4, #7
 c108460:	81a03fa4 	lsrhi	r3, r4, #31
 c108464:	93a03000 	movls	r3, #0
 c108468:	93a04010 	movls	r4, #16
 c10846c:	e1540001 	cmp	r4, r1
 c108470:	21a01003 	movcs	r1, r3
 c108474:	33831001 	orrcc	r1, r3, #1
 c108478:	e3510000 	cmp	r1, #0
 c10847c:	13a0300c 	movne	r3, #12
 c108480:	e24dd00c 	sub	sp, sp, #12
 c108484:	e1a05000 	mov	r5, r0
 c108488:	15803000 	strne	r3, [r0]
 c10848c:	13a08000 	movne	r8, #0
 c108490:	1a000016 	bne	c1084f0 <_malloc_r+0xa0>
 c108494:	eb000261 	bl	c108e20 <__malloc_lock>
 c108498:	e3540f7e 	cmp	r4, #504	; 0x1f8
 c10849c:	2a000017 	bcs	c108500 <_malloc_r+0xb0>
 c1084a0:	e59f66a4 	ldr	r6, [pc, #1700]	; c108b4c <_malloc_r+0x6fc>
 c1084a4:	e1a0a1a4 	lsr	sl, r4, #3
 c1084a8:	e086318a 	add	r3, r6, sl, lsl #3
 c1084ac:	e593800c 	ldr	r8, [r3, #12]
 c1084b0:	e1580003 	cmp	r8, r3
 c1084b4:	e1a07006 	mov	r7, r6
 c1084b8:	0a000157 	beq	c108a1c <_malloc_r+0x5cc>
 c1084bc:	e5983004 	ldr	r3, [r8, #4]
 c1084c0:	e3c33003 	bic	r3, r3, #3
 c1084c4:	e0883003 	add	r3, r8, r3
 c1084c8:	e5930004 	ldr	r0, [r3, #4]
 c1084cc:	e2881008 	add	r1, r8, #8
 c1084d0:	e8910006 	ldm	r1, {r1, r2}
 c1084d4:	e3800001 	orr	r0, r0, #1
 c1084d8:	e5830004 	str	r0, [r3, #4]
 c1084dc:	e581200c 	str	r2, [r1, #12]
 c1084e0:	e5821008 	str	r1, [r2, #8]
 c1084e4:	e1a00005 	mov	r0, r5
 c1084e8:	eb00024d 	bl	c108e24 <__malloc_unlock>
 c1084ec:	e2888008 	add	r8, r8, #8
 c1084f0:	e1a00008 	mov	r0, r8
 c1084f4:	e28dd00c 	add	sp, sp, #12
 c1084f8:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 c1084fc:	e12fff1e 	bx	lr
 c108500:	e1b0a4a4 	lsrs	sl, r4, #9
 c108504:	01a0a1a4 	lsreq	sl, r4, #3
 c108508:	01a0118a 	lsleq	r1, sl, #3
 c10850c:	1a000060 	bne	c108694 <_malloc_r+0x244>
 c108510:	e59f6634 	ldr	r6, [pc, #1588]	; c108b4c <_malloc_r+0x6fc>
 c108514:	e0861001 	add	r1, r6, r1
 c108518:	e591800c 	ldr	r8, [r1, #12]
 c10851c:	e1510008 	cmp	r1, r8
 c108520:	e1a07006 	mov	r7, r6
 c108524:	1a000005 	bne	c108540 <_malloc_r+0xf0>
 c108528:	ea00000a 	b	c108558 <_malloc_r+0x108>
 c10852c:	e3530000 	cmp	r3, #0
 c108530:	aa000110 	bge	c108978 <_malloc_r+0x528>
 c108534:	e598800c 	ldr	r8, [r8, #12]
 c108538:	e1510008 	cmp	r1, r8
 c10853c:	0a000005 	beq	c108558 <_malloc_r+0x108>
 c108540:	e5982004 	ldr	r2, [r8, #4]
 c108544:	e3c22003 	bic	r2, r2, #3
 c108548:	e0643002 	rsb	r3, r4, r2
 c10854c:	e353000f 	cmp	r3, #15
 c108550:	dafffff5 	ble	c10852c <_malloc_r+0xdc>
 c108554:	e24aa001 	sub	sl, sl, #1
 c108558:	e28aa001 	add	sl, sl, #1
 c10855c:	e59f05ec 	ldr	r0, [pc, #1516]	; c108b50 <_malloc_r+0x700>
 c108560:	e5908008 	ldr	r8, [r0, #8]
 c108564:	e1500008 	cmp	r0, r8
 c108568:	0a000092 	beq	c1087b8 <_malloc_r+0x368>
 c10856c:	e5982004 	ldr	r2, [r8, #4]
 c108570:	e3c22003 	bic	r2, r2, #3
 c108574:	e0643002 	rsb	r3, r4, r2
 c108578:	e353000f 	cmp	r3, #15
 c10857c:	ca000113 	bgt	c1089d0 <_malloc_r+0x580>
 c108580:	e3530000 	cmp	r3, #0
 c108584:	e580000c 	str	r0, [r0, #12]
 c108588:	e5800008 	str	r0, [r0, #8]
 c10858c:	aa00005b 	bge	c108700 <_malloc_r+0x2b0>
 c108590:	e3520c02 	cmp	r2, #512	; 0x200
 c108594:	2a000061 	bcs	c108720 <_malloc_r+0x2d0>
 c108598:	e5971004 	ldr	r1, [r7, #4]
 c10859c:	e1a021a2 	lsr	r2, r2, #3
 c1085a0:	e1a03142 	asr	r3, r2, #2
 c1085a4:	e3a0c001 	mov	ip, #1
 c1085a8:	e0872182 	add	r2, r7, r2, lsl #3
 c1085ac:	e181331c 	orr	r3, r1, ip, lsl r3
 c1085b0:	e5921008 	ldr	r1, [r2, #8]
 c1085b4:	e588200c 	str	r2, [r8, #12]
 c1085b8:	e5881008 	str	r1, [r8, #8]
 c1085bc:	e3a0c001 	mov	ip, #1
 c1085c0:	e5828008 	str	r8, [r2, #8]
 c1085c4:	e1a0214a 	asr	r2, sl, #2
 c1085c8:	e1a0c21c 	lsl	ip, ip, r2
 c1085cc:	e15c0003 	cmp	ip, r3
 c1085d0:	e5873004 	str	r3, [r7, #4]
 c1085d4:	e581800c 	str	r8, [r1, #12]
 c1085d8:	8a00007c 	bhi	c1087d0 <_malloc_r+0x380>
 c1085dc:	e113000c 	tst	r3, ip
 c1085e0:	1a000008 	bne	c108608 <_malloc_r+0x1b8>
 c1085e4:	e1a0c08c 	lsl	ip, ip, #1
 c1085e8:	e3caa003 	bic	sl, sl, #3
 c1085ec:	e113000c 	tst	r3, ip
 c1085f0:	e28aa004 	add	sl, sl, #4
 c1085f4:	1a000003 	bne	c108608 <_malloc_r+0x1b8>
 c1085f8:	e1a0c08c 	lsl	ip, ip, #1
 c1085fc:	e11c0003 	tst	ip, r3
 c108600:	e28aa004 	add	sl, sl, #4
 c108604:	0afffffb 	beq	c1085f8 <_malloc_r+0x1a8>
 c108608:	e087918a 	add	r9, r7, sl, lsl #3
 c10860c:	e1a0e009 	mov	lr, r9
 c108610:	e1a0800a 	mov	r8, sl
 c108614:	e59e300c 	ldr	r3, [lr, #12]
 c108618:	e15e0003 	cmp	lr, r3
 c10861c:	1a000005 	bne	c108638 <_malloc_r+0x1e8>
 c108620:	ea0000f8 	b	c108a08 <_malloc_r+0x5b8>
 c108624:	e3520000 	cmp	r2, #0
 c108628:	aa000101 	bge	c108a34 <_malloc_r+0x5e4>
 c10862c:	e593300c 	ldr	r3, [r3, #12]
 c108630:	e15e0003 	cmp	lr, r3
 c108634:	0a0000f3 	beq	c108a08 <_malloc_r+0x5b8>
 c108638:	e5931004 	ldr	r1, [r3, #4]
 c10863c:	e3c11003 	bic	r1, r1, #3
 c108640:	e0642001 	rsb	r2, r4, r1
 c108644:	e352000f 	cmp	r2, #15
 c108648:	dafffff5 	ble	c108624 <_malloc_r+0x1d4>
 c10864c:	e1a08003 	mov	r8, r3
 c108650:	e593c00c 	ldr	ip, [r3, #12]
 c108654:	e5b8e008 	ldr	lr, [r8, #8]!
 c108658:	e0831004 	add	r1, r3, r4
 c10865c:	e3826001 	orr	r6, r2, #1
 c108660:	e3844001 	orr	r4, r4, #1
 c108664:	e58ec00c 	str	ip, [lr, #12]
 c108668:	e58ce008 	str	lr, [ip, #8]
 c10866c:	e580100c 	str	r1, [r0, #12]
 c108670:	e5801008 	str	r1, [r0, #8]
 c108674:	e5834004 	str	r4, [r3, #4]
 c108678:	e581000c 	str	r0, [r1, #12]
 c10867c:	e5810008 	str	r0, [r1, #8]
 c108680:	e5816004 	str	r6, [r1, #4]
 c108684:	e7812002 	str	r2, [r1, r2]
 c108688:	e1a00005 	mov	r0, r5
 c10868c:	eb0001e4 	bl	c108e24 <__malloc_unlock>
 c108690:	eaffff96 	b	c1084f0 <_malloc_r+0xa0>
 c108694:	e35a0004 	cmp	sl, #4
 c108698:	91a0a324 	lsrls	sl, r4, #6
 c10869c:	928aa038 	addls	sl, sl, #56	; 0x38
 c1086a0:	91a0118a 	lslls	r1, sl, #3
 c1086a4:	9affff99 	bls	c108510 <_malloc_r+0xc0>
 c1086a8:	e35a0014 	cmp	sl, #20
 c1086ac:	928aa05b 	addls	sl, sl, #91	; 0x5b
 c1086b0:	91a0118a 	lslls	r1, sl, #3
 c1086b4:	9affff95 	bls	c108510 <_malloc_r+0xc0>
 c1086b8:	e35a0054 	cmp	sl, #84	; 0x54
 c1086bc:	91a0a624 	lsrls	sl, r4, #12
 c1086c0:	928aa06e 	addls	sl, sl, #110	; 0x6e
 c1086c4:	91a0118a 	lslls	r1, sl, #3
 c1086c8:	9affff90 	bls	c108510 <_malloc_r+0xc0>
 c1086cc:	e35a0f55 	cmp	sl, #340	; 0x154
 c1086d0:	91a0a7a4 	lsrls	sl, r4, #15
 c1086d4:	928aa077 	addls	sl, sl, #119	; 0x77
 c1086d8:	91a0118a 	lslls	r1, sl, #3
 c1086dc:	9affff8b 	bls	c108510 <_malloc_r+0xc0>
 c1086e0:	e59f346c 	ldr	r3, [pc, #1132]	; c108b54 <_malloc_r+0x704>
 c1086e4:	e15a0003 	cmp	sl, r3
 c1086e8:	91a0a924 	lsrls	sl, r4, #18
 c1086ec:	928aa07c 	addls	sl, sl, #124	; 0x7c
 c1086f0:	91a0118a 	lslls	r1, sl, #3
 c1086f4:	83a01e3f 	movhi	r1, #1008	; 0x3f0
 c1086f8:	83a0a07e 	movhi	sl, #126	; 0x7e
 c1086fc:	eaffff83 	b	c108510 <_malloc_r+0xc0>
 c108700:	e0882002 	add	r2, r8, r2
 c108704:	e5923004 	ldr	r3, [r2, #4]
 c108708:	e3833001 	orr	r3, r3, #1
 c10870c:	e5823004 	str	r3, [r2, #4]
 c108710:	e1a00005 	mov	r0, r5
 c108714:	eb0001c2 	bl	c108e24 <__malloc_unlock>
 c108718:	e2888008 	add	r8, r8, #8
 c10871c:	eaffff73 	b	c1084f0 <_malloc_r+0xa0>
 c108720:	e1a034a2 	lsr	r3, r2, #9
 c108724:	e3530004 	cmp	r3, #4
 c108728:	91a01322 	lsrls	r1, r2, #6
 c10872c:	92811038 	addls	r1, r1, #56	; 0x38
 c108730:	9a00000f 	bls	c108774 <_malloc_r+0x324>
 c108734:	e3530014 	cmp	r3, #20
 c108738:	9283105b 	addls	r1, r3, #91	; 0x5b
 c10873c:	9a00000c 	bls	c108774 <_malloc_r+0x324>
 c108740:	e3530054 	cmp	r3, #84	; 0x54
 c108744:	91a01622 	lsrls	r1, r2, #12
 c108748:	9281106e 	addls	r1, r1, #110	; 0x6e
 c10874c:	9a000008 	bls	c108774 <_malloc_r+0x324>
 c108750:	e3530f55 	cmp	r3, #340	; 0x154
 c108754:	91a017a2 	lsrls	r1, r2, #15
 c108758:	92811077 	addls	r1, r1, #119	; 0x77
 c10875c:	9a000004 	bls	c108774 <_malloc_r+0x324>
 c108760:	e59f13ec 	ldr	r1, [pc, #1004]	; c108b54 <_malloc_r+0x704>
 c108764:	e1530001 	cmp	r3, r1
 c108768:	91a01922 	lsrls	r1, r2, #18
 c10876c:	9281107c 	addls	r1, r1, #124	; 0x7c
 c108770:	83a0107e 	movhi	r1, #126	; 0x7e
 c108774:	e087c181 	add	ip, r7, r1, lsl #3
 c108778:	e59c3008 	ldr	r3, [ip, #8]
 c10877c:	e153000c 	cmp	r3, ip
 c108780:	1a000003 	bne	c108794 <_malloc_r+0x344>
 c108784:	ea0000d3 	b	c108ad8 <_malloc_r+0x688>
 c108788:	e5933008 	ldr	r3, [r3, #8]
 c10878c:	e15c0003 	cmp	ip, r3
 c108790:	0a000003 	beq	c1087a4 <_malloc_r+0x354>
 c108794:	e5931004 	ldr	r1, [r3, #4]
 c108798:	e3c11003 	bic	r1, r1, #3
 c10879c:	e1520001 	cmp	r2, r1
 c1087a0:	3afffff8 	bcc	c108788 <_malloc_r+0x338>
 c1087a4:	e593200c 	ldr	r2, [r3, #12]
 c1087a8:	e588200c 	str	r2, [r8, #12]
 c1087ac:	e5883008 	str	r3, [r8, #8]
 c1087b0:	e583800c 	str	r8, [r3, #12]
 c1087b4:	e5828008 	str	r8, [r2, #8]
 c1087b8:	e1a0214a 	asr	r2, sl, #2
 c1087bc:	e3a0c001 	mov	ip, #1
 c1087c0:	e1a0c21c 	lsl	ip, ip, r2
 c1087c4:	e5973004 	ldr	r3, [r7, #4]
 c1087c8:	e15c0003 	cmp	ip, r3
 c1087cc:	9affff82 	bls	c1085dc <_malloc_r+0x18c>
 c1087d0:	e5978008 	ldr	r8, [r7, #8]
 c1087d4:	e598a004 	ldr	sl, [r8, #4]
 c1087d8:	e3caa003 	bic	sl, sl, #3
 c1087dc:	e154000a 	cmp	r4, sl
 c1087e0:	93a03000 	movls	r3, #0
 c1087e4:	83a03001 	movhi	r3, #1
 c1087e8:	e064200a 	rsb	r2, r4, sl
 c1087ec:	e352000f 	cmp	r2, #15
 c1087f0:	d3833001 	orrle	r3, r3, #1
 c1087f4:	e3530000 	cmp	r3, #0
 c1087f8:	0a00006a 	beq	c1089a8 <_malloc_r+0x558>
 c1087fc:	e59f9354 	ldr	r9, [pc, #852]	; c108b58 <_malloc_r+0x708>
 c108800:	e599b000 	ldr	fp, [r9]
 c108804:	e5963408 	ldr	r3, [r6, #1032]	; 0x408
 c108808:	e28bb010 	add	fp, fp, #16
 c10880c:	e3730001 	cmn	r3, #1
 c108810:	e08bb004 	add	fp, fp, r4
 c108814:	128bbeff 	addne	fp, fp, #4080	; 0xff0
 c108818:	128bb00f 	addne	fp, fp, #15
 c10881c:	13cbbeff 	bicne	fp, fp, #4080	; 0xff0
 c108820:	13cbb00f 	bicne	fp, fp, #15
 c108824:	e1a00005 	mov	r0, r5
 c108828:	e1a0100b 	mov	r1, fp
 c10882c:	eb0004df 	bl	c109bb0 <_sbrk_r>
 c108830:	e3700001 	cmn	r0, #1
 c108834:	e1a03000 	mov	r3, r0
 c108838:	0a00009c 	beq	c108ab0 <_malloc_r+0x660>
 c10883c:	e088100a 	add	r1, r8, sl
 c108840:	e1510000 	cmp	r1, r0
 c108844:	8a000097 	bhi	c108aa8 <_malloc_r+0x658>
 c108848:	e5992004 	ldr	r2, [r9, #4]
 c10884c:	e1510000 	cmp	r1, r0
 c108850:	e08b2002 	add	r2, fp, r2
 c108854:	e5892004 	str	r2, [r9, #4]
 c108858:	0a0000aa 	beq	c108b08 <_malloc_r+0x6b8>
 c10885c:	e596c408 	ldr	ip, [r6, #1032]	; 0x408
 c108860:	e37c0001 	cmn	ip, #1
 c108864:	10802002 	addne	r2, r0, r2
 c108868:	059f22dc 	ldreq	r2, [pc, #732]	; c108b4c <_malloc_r+0x6fc>
 c10886c:	10611002 	rsbne	r1, r1, r2
 c108870:	05820408 	streq	r0, [r2, #1032]	; 0x408
 c108874:	15891004 	strne	r1, [r9, #4]
 c108878:	e2106007 	ands	r6, r0, #7
 c10887c:	12666008 	rsbne	r6, r6, #8
 c108880:	10803006 	addne	r3, r0, r6
 c108884:	e083200b 	add	r2, r3, fp
 c108888:	12866a01 	addne	r6, r6, #4096	; 0x1000
 c10888c:	03a06a01 	moveq	r6, #4096	; 0x1000
 c108890:	e1a02a02 	lsl	r2, r2, #20
 c108894:	e0466a22 	sub	r6, r6, r2, lsr #20
 c108898:	e1a01006 	mov	r1, r6
 c10889c:	e1a00005 	mov	r0, r5
 c1088a0:	e58d3004 	str	r3, [sp, #4]
 c1088a4:	eb0004c1 	bl	c109bb0 <_sbrk_r>
 c1088a8:	e59d3004 	ldr	r3, [sp, #4]
 c1088ac:	e3700001 	cmn	r0, #1
 c1088b0:	10631000 	rsbne	r1, r3, r0
 c1088b4:	e5992004 	ldr	r2, [r9, #4]
 c1088b8:	10811006 	addne	r1, r1, r6
 c1088bc:	03a06000 	moveq	r6, #0
 c1088c0:	13811001 	orrne	r1, r1, #1
 c1088c4:	03a01001 	moveq	r1, #1
 c1088c8:	e0862002 	add	r2, r6, r2
 c1088cc:	e1580007 	cmp	r8, r7
 c1088d0:	e5892004 	str	r2, [r9, #4]
 c1088d4:	e5873008 	str	r3, [r7, #8]
 c1088d8:	e5831004 	str	r1, [r3, #4]
 c1088dc:	0a00000d 	beq	c108918 <_malloc_r+0x4c8>
 c1088e0:	e35a000f 	cmp	sl, #15
 c1088e4:	9a000082 	bls	c108af4 <_malloc_r+0x6a4>
 c1088e8:	e598c004 	ldr	ip, [r8, #4]
 c1088ec:	e24a300c 	sub	r3, sl, #12
 c1088f0:	e3c33007 	bic	r3, r3, #7
 c1088f4:	e20cc001 	and	ip, ip, #1
 c1088f8:	e0881003 	add	r1, r8, r3
 c1088fc:	e3a00005 	mov	r0, #5
 c108900:	e183c00c 	orr	ip, r3, ip
 c108904:	e353000f 	cmp	r3, #15
 c108908:	e588c004 	str	ip, [r8, #4]
 c10890c:	e5810004 	str	r0, [r1, #4]
 c108910:	e5810008 	str	r0, [r1, #8]
 c108914:	8a000082 	bhi	c108b24 <_malloc_r+0x6d4>
 c108918:	e599302c 	ldr	r3, [r9, #44]	; 0x2c
 c10891c:	e1520003 	cmp	r2, r3
 c108920:	859f3230 	ldrhi	r3, [pc, #560]	; c108b58 <_malloc_r+0x708>
 c108924:	8583202c 	strhi	r2, [r3, #44]	; 0x2c
 c108928:	e5993030 	ldr	r3, [r9, #48]	; 0x30
 c10892c:	e1520003 	cmp	r2, r3
 c108930:	9a00005e 	bls	c108ab0 <_malloc_r+0x660>
 c108934:	e5978008 	ldr	r8, [r7, #8]
 c108938:	e59f1218 	ldr	r1, [pc, #536]	; c108b58 <_malloc_r+0x708>
 c10893c:	e5983004 	ldr	r3, [r8, #4]
 c108940:	e5812030 	str	r2, [r1, #48]	; 0x30
 c108944:	e3c32003 	bic	r2, r3, #3
 c108948:	e1540002 	cmp	r4, r2
 c10894c:	93a03000 	movls	r3, #0
 c108950:	83a03001 	movhi	r3, #1
 c108954:	e0642002 	rsb	r2, r4, r2
 c108958:	e352000f 	cmp	r2, #15
 c10895c:	d3833001 	orrle	r3, r3, #1
 c108960:	e3530000 	cmp	r3, #0
 c108964:	0a00000f 	beq	c1089a8 <_malloc_r+0x558>
 c108968:	e1a00005 	mov	r0, r5
 c10896c:	eb00012c 	bl	c108e24 <__malloc_unlock>
 c108970:	e3a08000 	mov	r8, #0
 c108974:	eafffedd 	b	c1084f0 <_malloc_r+0xa0>
 c108978:	e0882002 	add	r2, r8, r2
 c10897c:	e5920004 	ldr	r0, [r2, #4]
 c108980:	e2881008 	add	r1, r8, #8
 c108984:	e891000a 	ldm	r1, {r1, r3}
 c108988:	e3800001 	orr	r0, r0, #1
 c10898c:	e5820004 	str	r0, [r2, #4]
 c108990:	e581300c 	str	r3, [r1, #12]
 c108994:	e5831008 	str	r1, [r3, #8]
 c108998:	e1a00005 	mov	r0, r5
 c10899c:	eb000120 	bl	c108e24 <__malloc_unlock>
 c1089a0:	e2888008 	add	r8, r8, #8
 c1089a4:	eafffed1 	b	c1084f0 <_malloc_r+0xa0>
 c1089a8:	e0883004 	add	r3, r8, r4
 c1089ac:	e3822001 	orr	r2, r2, #1
 c1089b0:	e3844001 	orr	r4, r4, #1
 c1089b4:	e5884004 	str	r4, [r8, #4]
 c1089b8:	e1a00005 	mov	r0, r5
 c1089bc:	e5832004 	str	r2, [r3, #4]
 c1089c0:	e5873008 	str	r3, [r7, #8]
 c1089c4:	eb000116 	bl	c108e24 <__malloc_unlock>
 c1089c8:	e2888008 	add	r8, r8, #8
 c1089cc:	eafffec7 	b	c1084f0 <_malloc_r+0xa0>
 c1089d0:	e0882004 	add	r2, r8, r4
 c1089d4:	e3831001 	orr	r1, r3, #1
 c1089d8:	e3844001 	orr	r4, r4, #1
 c1089dc:	e5884004 	str	r4, [r8, #4]
 c1089e0:	e580200c 	str	r2, [r0, #12]
 c1089e4:	e5802008 	str	r2, [r0, #8]
 c1089e8:	e582000c 	str	r0, [r2, #12]
 c1089ec:	e5820008 	str	r0, [r2, #8]
 c1089f0:	e5821004 	str	r1, [r2, #4]
 c1089f4:	e7823003 	str	r3, [r2, r3]
 c1089f8:	e1a00005 	mov	r0, r5
 c1089fc:	eb000108 	bl	c108e24 <__malloc_unlock>
 c108a00:	e2888008 	add	r8, r8, #8
 c108a04:	eafffeb9 	b	c1084f0 <_malloc_r+0xa0>
 c108a08:	e2888001 	add	r8, r8, #1
 c108a0c:	e3180003 	tst	r8, #3
 c108a10:	0a000014 	beq	c108a68 <_malloc_r+0x618>
 c108a14:	e28ee008 	add	lr, lr, #8
 c108a18:	eafffefd 	b	c108614 <_malloc_r+0x1c4>
 c108a1c:	e2883008 	add	r3, r8, #8
 c108a20:	e5988014 	ldr	r8, [r8, #20]
 c108a24:	e1530008 	cmp	r3, r8
 c108a28:	028aa002 	addeq	sl, sl, #2
 c108a2c:	0afffeca 	beq	c10855c <_malloc_r+0x10c>
 c108a30:	eafffea1 	b	c1084bc <_malloc_r+0x6c>
 c108a34:	e0831001 	add	r1, r3, r1
 c108a38:	e5910004 	ldr	r0, [r1, #4]
 c108a3c:	e1a08003 	mov	r8, r3
 c108a40:	e5b82008 	ldr	r2, [r8, #8]!
 c108a44:	e593300c 	ldr	r3, [r3, #12]
 c108a48:	e3800001 	orr	r0, r0, #1
 c108a4c:	e5810004 	str	r0, [r1, #4]
 c108a50:	e582300c 	str	r3, [r2, #12]
 c108a54:	e5832008 	str	r2, [r3, #8]
 c108a58:	e1a00005 	mov	r0, r5
 c108a5c:	eb0000f0 	bl	c108e24 <__malloc_unlock>
 c108a60:	eafffea2 	b	c1084f0 <_malloc_r+0xa0>
 c108a64:	e24aa001 	sub	sl, sl, #1
 c108a68:	e31a0003 	tst	sl, #3
 c108a6c:	e1a03009 	mov	r3, r9
 c108a70:	0a000031 	beq	c108b3c <_malloc_r+0x6ec>
 c108a74:	e4139008 	ldr	r9, [r3], #-8
 c108a78:	e1590003 	cmp	r9, r3
 c108a7c:	0afffff8 	beq	c108a64 <_malloc_r+0x614>
 c108a80:	e5973004 	ldr	r3, [r7, #4]
 c108a84:	e1a0c08c 	lsl	ip, ip, #1
 c108a88:	e15c0003 	cmp	ip, r3
 c108a8c:	8affff4f 	bhi	c1087d0 <_malloc_r+0x380>
 c108a90:	e35c0000 	cmp	ip, #0
 c108a94:	0affff4d 	beq	c1087d0 <_malloc_r+0x380>
 c108a98:	e11c0003 	tst	ip, r3
 c108a9c:	0a000007 	beq	c108ac0 <_malloc_r+0x670>
 c108aa0:	e1a0a008 	mov	sl, r8
 c108aa4:	eafffed7 	b	c108608 <_malloc_r+0x1b8>
 c108aa8:	e1580007 	cmp	r8, r7
 c108aac:	0affff65 	beq	c108848 <_malloc_r+0x3f8>
 c108ab0:	e5978008 	ldr	r8, [r7, #8]
 c108ab4:	e5982004 	ldr	r2, [r8, #4]
 c108ab8:	e3c22003 	bic	r2, r2, #3
 c108abc:	eaffffa1 	b	c108948 <_malloc_r+0x4f8>
 c108ac0:	e1a0c08c 	lsl	ip, ip, #1
 c108ac4:	e11c0003 	tst	ip, r3
 c108ac8:	e2888004 	add	r8, r8, #4
 c108acc:	0afffffb 	beq	c108ac0 <_malloc_r+0x670>
 c108ad0:	e1a0a008 	mov	sl, r8
 c108ad4:	eafffecb 	b	c108608 <_malloc_r+0x1b8>
 c108ad8:	e5972004 	ldr	r2, [r7, #4]
 c108adc:	e1a01141 	asr	r1, r1, #2
 c108ae0:	e3a0c001 	mov	ip, #1
 c108ae4:	e182111c 	orr	r1, r2, ip, lsl r1
 c108ae8:	e1a02003 	mov	r2, r3
 c108aec:	e5871004 	str	r1, [r7, #4]
 c108af0:	eaffff2c 	b	c1087a8 <_malloc_r+0x358>
 c108af4:	e3a02001 	mov	r2, #1
 c108af8:	e5832004 	str	r2, [r3, #4]
 c108afc:	e1a08003 	mov	r8, r3
 c108b00:	e3a02000 	mov	r2, #0
 c108b04:	eaffff8f 	b	c108948 <_malloc_r+0x4f8>
 c108b08:	e1b0ca01 	lsls	ip, r1, #20
 c108b0c:	1affff52 	bne	c10885c <_malloc_r+0x40c>
 c108b10:	e5973008 	ldr	r3, [r7, #8]
 c108b14:	e08b100a 	add	r1, fp, sl
 c108b18:	e3811001 	orr	r1, r1, #1
 c108b1c:	e5831004 	str	r1, [r3, #4]
 c108b20:	eaffff7c 	b	c108918 <_malloc_r+0x4c8>
 c108b24:	e1a00005 	mov	r0, r5
 c108b28:	e2881008 	add	r1, r8, #8
 c108b2c:	eb0009c7 	bl	c10b250 <_free_r>
 c108b30:	e59f3020 	ldr	r3, [pc, #32]	; c108b58 <_malloc_r+0x708>
 c108b34:	e5932004 	ldr	r2, [r3, #4]
 c108b38:	eaffff76 	b	c108918 <_malloc_r+0x4c8>
 c108b3c:	e5973004 	ldr	r3, [r7, #4]
 c108b40:	e1c3300c 	bic	r3, r3, ip
 c108b44:	e5873004 	str	r3, [r7, #4]
 c108b48:	eaffffcc 	b	c108a80 <_malloc_r+0x630>
 c108b4c:	0c100524 	.word	0x0c100524
 c108b50:	0c10052c 	.word	0x0c10052c
 c108b54:	00000554 	.word	0x00000554
 c108b58:	0c100c9c 	.word	0x0c100c9c

0c108b5c <memchr>:
 c108b5c:	e3100003 	tst	r0, #3
 c108b60:	e92d0070 	push	{r4, r5, r6}
 c108b64:	e20110ff 	and	r1, r1, #255	; 0xff
 c108b68:	e1a04000 	mov	r4, r0
 c108b6c:	0a000010 	beq	c108bb4 <memchr+0x58>
 c108b70:	e3520000 	cmp	r2, #0
 c108b74:	0a000021 	beq	c108c00 <memchr+0xa4>
 c108b78:	e5d03000 	ldrb	r3, [r0]
 c108b7c:	e1530001 	cmp	r3, r1
 c108b80:	12422001 	subne	r2, r2, #1
 c108b84:	12803001 	addne	r3, r0, #1
 c108b88:	1a000006 	bne	c108ba8 <memchr+0x4c>
 c108b8c:	ea000019 	b	c108bf8 <memchr+0x9c>
 c108b90:	e3520000 	cmp	r2, #0
 c108b94:	0a000019 	beq	c108c00 <memchr+0xa4>
 c108b98:	e4d3c001 	ldrb	ip, [r3], #1
 c108b9c:	e15c0001 	cmp	ip, r1
 c108ba0:	0a000018 	beq	c108c08 <memchr+0xac>
 c108ba4:	e2422001 	sub	r2, r2, #1
 c108ba8:	e3130003 	tst	r3, #3
 c108bac:	e1a04003 	mov	r4, r3
 c108bb0:	1afffff6 	bne	c108b90 <memchr+0x34>
 c108bb4:	e3520003 	cmp	r2, #3
 c108bb8:	8a000014 	bhi	c108c10 <memchr+0xb4>
 c108bbc:	e3520000 	cmp	r2, #0
 c108bc0:	0a00000e 	beq	c108c00 <memchr+0xa4>
 c108bc4:	e5d43000 	ldrb	r3, [r4]
 c108bc8:	e1530001 	cmp	r3, r1
 c108bcc:	12423001 	subne	r3, r2, #1
 c108bd0:	1284c001 	addne	ip, r4, #1
 c108bd4:	1a000003 	bne	c108be8 <memchr+0x8c>
 c108bd8:	ea00000a 	b	c108c08 <memchr+0xac>
 c108bdc:	e4dc5001 	ldrb	r5, [ip], #1
 c108be0:	e1550001 	cmp	r5, r1
 c108be4:	0a000003 	beq	c108bf8 <memchr+0x9c>
 c108be8:	e2533001 	subs	r3, r3, #1
 c108bec:	e1a0000c 	mov	r0, ip
 c108bf0:	2afffff9 	bcs	c108bdc <memchr+0x80>
 c108bf4:	e3a00000 	mov	r0, #0
 c108bf8:	e8bd0070 	pop	{r4, r5, r6}
 c108bfc:	e12fff1e 	bx	lr
 c108c00:	e1a00002 	mov	r0, r2
 c108c04:	eafffffb 	b	c108bf8 <memchr+0x9c>
 c108c08:	e1a00004 	mov	r0, r4
 c108c0c:	eafffff9 	b	c108bf8 <memchr+0x9c>
 c108c10:	e1810401 	orr	r0, r1, r1, lsl #8
 c108c14:	e1800800 	orr	r0, r0, r0, lsl #16
 c108c18:	e1a03004 	mov	r3, r4
 c108c1c:	e1a04003 	mov	r4, r3
 c108c20:	e4936004 	ldr	r6, [r3], #4
 c108c24:	e59f502c 	ldr	r5, [pc, #44]	; c108c58 <memchr+0xfc>
 c108c28:	e0206006 	eor	r6, r0, r6
 c108c2c:	e0865005 	add	r5, r6, r5
 c108c30:	e59fc024 	ldr	ip, [pc, #36]	; c108c5c <memchr+0x100>
 c108c34:	e1c55006 	bic	r5, r5, r6
 c108c38:	e005c00c 	and	ip, r5, ip
 c108c3c:	e35c0000 	cmp	ip, #0
 c108c40:	1affffdd 	bne	c108bbc <memchr+0x60>
 c108c44:	e2422004 	sub	r2, r2, #4
 c108c48:	e3520003 	cmp	r2, #3
 c108c4c:	e1a04003 	mov	r4, r3
 c108c50:	8afffff1 	bhi	c108c1c <memchr+0xc0>
 c108c54:	eaffffd8 	b	c108bbc <memchr+0x60>
 c108c58:	fefefeff 	.word	0xfefefeff
 c108c5c:	80808080 	.word	0x80808080

0c108c60 <memcpy>:
 c108c60:	e3520003 	cmp	r2, #3
 c108c64:	e92d01f0 	push	{r4, r5, r6, r7, r8}
 c108c68:	8a000009 	bhi	c108c94 <memcpy+0x34>
 c108c6c:	e3520000 	cmp	r2, #0
 c108c70:	0a000005 	beq	c108c8c <memcpy+0x2c>
 c108c74:	e3a03000 	mov	r3, #0
 c108c78:	e7d1c003 	ldrb	ip, [r1, r3]
 c108c7c:	e7c0c003 	strb	ip, [r0, r3]
 c108c80:	e2833001 	add	r3, r3, #1
 c108c84:	e1530002 	cmp	r3, r2
 c108c88:	1afffffa 	bne	c108c78 <memcpy+0x18>
 c108c8c:	e8bd01f0 	pop	{r4, r5, r6, r7, r8}
 c108c90:	e12fff1e 	bx	lr
 c108c94:	e1a03001 	mov	r3, r1
 c108c98:	e0802002 	add	r2, r0, r2
 c108c9c:	e1a01000 	mov	r1, r0
 c108ca0:	ea000002 	b	c108cb0 <memcpy+0x50>
 c108ca4:	e5dcc000 	ldrb	ip, [ip]
 c108ca8:	e4c1c001 	strb	ip, [r1], #1
 c108cac:	e2833001 	add	r3, r3, #1
 c108cb0:	e3110003 	tst	r1, #3
 c108cb4:	e1a0c003 	mov	ip, r3
 c108cb8:	1afffff9 	bne	c108ca4 <memcpy+0x44>
 c108cbc:	e2134003 	ands	r4, r3, #3
 c108cc0:	0a000034 	beq	c108d98 <memcpy+0x138>
 c108cc4:	e2645000 	rsb	r5, r4, #0
 c108cc8:	e2647004 	rsb	r7, r4, #4
 c108ccc:	e7933005 	ldr	r3, [r3, r5]
 c108cd0:	e1a04184 	lsl	r4, r4, #3
 c108cd4:	e1a07187 	lsl	r7, r7, #3
 c108cd8:	ea000005 	b	c108cf4 <memcpy+0x94>
 c108cdc:	e28cc004 	add	ip, ip, #4
 c108ce0:	e79c6005 	ldr	r6, [ip, r5]
 c108ce4:	e1a08716 	lsl	r8, r6, r7
 c108ce8:	e1883433 	orr	r3, r8, r3, lsr r4
 c108cec:	e4813004 	str	r3, [r1], #4
 c108cf0:	e1a03006 	mov	r3, r6
 c108cf4:	e0616002 	rsb	r6, r1, r2
 c108cf8:	e3560003 	cmp	r6, #3
 c108cfc:	cafffff6 	bgt	c108cdc <memcpy+0x7c>
 c108d00:	ea000001 	b	c108d0c <memcpy+0xac>
 c108d04:	e4dc3001 	ldrb	r3, [ip], #1
 c108d08:	e4c13001 	strb	r3, [r1], #1
 c108d0c:	e1520001 	cmp	r2, r1
 c108d10:	8afffffb 	bhi	c108d04 <memcpy+0xa4>
 c108d14:	eaffffdc 	b	c108c8c <memcpy+0x2c>
 c108d18:	e513c040 	ldr	ip, [r3, #-64]	; 0xffffffc0
 c108d1c:	e501c040 	str	ip, [r1, #-64]	; 0xffffffc0
 c108d20:	e513c03c 	ldr	ip, [r3, #-60]	; 0xffffffc4
 c108d24:	e501c03c 	str	ip, [r1, #-60]	; 0xffffffc4
 c108d28:	e513c038 	ldr	ip, [r3, #-56]	; 0xffffffc8
 c108d2c:	e501c038 	str	ip, [r1, #-56]	; 0xffffffc8
 c108d30:	e513c034 	ldr	ip, [r3, #-52]	; 0xffffffcc
 c108d34:	e501c034 	str	ip, [r1, #-52]	; 0xffffffcc
 c108d38:	e513c030 	ldr	ip, [r3, #-48]	; 0xffffffd0
 c108d3c:	e501c030 	str	ip, [r1, #-48]	; 0xffffffd0
 c108d40:	e513c02c 	ldr	ip, [r3, #-44]	; 0xffffffd4
 c108d44:	e501c02c 	str	ip, [r1, #-44]	; 0xffffffd4
 c108d48:	e513c028 	ldr	ip, [r3, #-40]	; 0xffffffd8
 c108d4c:	e501c028 	str	ip, [r1, #-40]	; 0xffffffd8
 c108d50:	e513c024 	ldr	ip, [r3, #-36]	; 0xffffffdc
 c108d54:	e501c024 	str	ip, [r1, #-36]	; 0xffffffdc
 c108d58:	e513c020 	ldr	ip, [r3, #-32]	; 0xffffffe0
 c108d5c:	e501c020 	str	ip, [r1, #-32]	; 0xffffffe0
 c108d60:	e513c01c 	ldr	ip, [r3, #-28]	; 0xffffffe4
 c108d64:	e501c01c 	str	ip, [r1, #-28]	; 0xffffffe4
 c108d68:	e513c018 	ldr	ip, [r3, #-24]	; 0xffffffe8
 c108d6c:	e501c018 	str	ip, [r1, #-24]	; 0xffffffe8
 c108d70:	e513c014 	ldr	ip, [r3, #-20]	; 0xffffffec
 c108d74:	e501c014 	str	ip, [r1, #-20]	; 0xffffffec
 c108d78:	e513c010 	ldr	ip, [r3, #-16]
 c108d7c:	e501c010 	str	ip, [r1, #-16]
 c108d80:	e513c00c 	ldr	ip, [r3, #-12]
 c108d84:	e501c00c 	str	ip, [r1, #-12]
 c108d88:	e513c008 	ldr	ip, [r3, #-8]
 c108d8c:	e501c008 	str	ip, [r1, #-8]
 c108d90:	e513c004 	ldr	ip, [r3, #-4]
 c108d94:	e501c004 	str	ip, [r1, #-4]
 c108d98:	e061c002 	rsb	ip, r1, r2
 c108d9c:	e35c003f 	cmp	ip, #63	; 0x3f
 c108da0:	e1a04003 	mov	r4, r3
 c108da4:	e1a0c001 	mov	ip, r1
 c108da8:	e2833040 	add	r3, r3, #64	; 0x40
 c108dac:	e2811040 	add	r1, r1, #64	; 0x40
 c108db0:	caffffd8 	bgt	c108d18 <memcpy+0xb8>
 c108db4:	e1a03004 	mov	r3, r4
 c108db8:	ea000007 	b	c108ddc <memcpy+0x17c>
 c108dbc:	e5131010 	ldr	r1, [r3, #-16]
 c108dc0:	e50c1010 	str	r1, [ip, #-16]
 c108dc4:	e513100c 	ldr	r1, [r3, #-12]
 c108dc8:	e50c100c 	str	r1, [ip, #-12]
 c108dcc:	e5131008 	ldr	r1, [r3, #-8]
 c108dd0:	e50c1008 	str	r1, [ip, #-8]
 c108dd4:	e5131004 	ldr	r1, [r3, #-4]
 c108dd8:	e50c1004 	str	r1, [ip, #-4]
 c108ddc:	e1a0100c 	mov	r1, ip
 c108de0:	e06cc002 	rsb	ip, ip, r2
 c108de4:	e35c000f 	cmp	ip, #15
 c108de8:	e1a04003 	mov	r4, r3
 c108dec:	e281c010 	add	ip, r1, #16
 c108df0:	e2833010 	add	r3, r3, #16
 c108df4:	cafffff0 	bgt	c108dbc <memcpy+0x15c>
 c108df8:	e1a03004 	mov	r3, r4
 c108dfc:	ea000002 	b	c108e0c <memcpy+0x1ac>
 c108e00:	e59cc000 	ldr	ip, [ip]
 c108e04:	e481c004 	str	ip, [r1], #4
 c108e08:	e2833004 	add	r3, r3, #4
 c108e0c:	e061c002 	rsb	ip, r1, r2
 c108e10:	e35c0003 	cmp	ip, #3
 c108e14:	e1a0c003 	mov	ip, r3
 c108e18:	cafffff8 	bgt	c108e00 <memcpy+0x1a0>
 c108e1c:	eaffffba 	b	c108d0c <memcpy+0xac>

0c108e20 <__malloc_lock>:
 c108e20:	e12fff1e 	bx	lr

0c108e24 <__malloc_unlock>:
 c108e24:	e12fff1e 	bx	lr

0c108e28 <_Balloc>:
 c108e28:	e590304c 	ldr	r3, [r0, #76]	; 0x4c
 c108e2c:	e3530000 	cmp	r3, #0
 c108e30:	e92d4070 	push	{r4, r5, r6, lr}
 c108e34:	e1a05000 	mov	r5, r0
 c108e38:	e1a04001 	mov	r4, r1
 c108e3c:	0a000009 	beq	c108e68 <_Balloc+0x40>
 c108e40:	e7930104 	ldr	r0, [r3, r4, lsl #2]
 c108e44:	e3500000 	cmp	r0, #0
 c108e48:	0a00000e 	beq	c108e88 <_Balloc+0x60>
 c108e4c:	e5902000 	ldr	r2, [r0]
 c108e50:	e7832104 	str	r2, [r3, r4, lsl #2]
 c108e54:	e3a03000 	mov	r3, #0
 c108e58:	e5803010 	str	r3, [r0, #16]
 c108e5c:	e580300c 	str	r3, [r0, #12]
 c108e60:	e8bd4070 	pop	{r4, r5, r6, lr}
 c108e64:	e12fff1e 	bx	lr
 c108e68:	e3a01004 	mov	r1, #4
 c108e6c:	e3a02021 	mov	r2, #33	; 0x21
 c108e70:	eb000890 	bl	c10b0b8 <_calloc_r>
 c108e74:	e3500000 	cmp	r0, #0
 c108e78:	e1a03000 	mov	r3, r0
 c108e7c:	e585004c 	str	r0, [r5, #76]	; 0x4c
 c108e80:	1affffee 	bne	c108e40 <_Balloc+0x18>
 c108e84:	eafffff5 	b	c108e60 <_Balloc+0x38>
 c108e88:	e3a01001 	mov	r1, #1
 c108e8c:	e1a06411 	lsl	r6, r1, r4
 c108e90:	e2862005 	add	r2, r6, #5
 c108e94:	e1a00005 	mov	r0, r5
 c108e98:	e1a02102 	lsl	r2, r2, #2
 c108e9c:	eb000885 	bl	c10b0b8 <_calloc_r>
 c108ea0:	e3500000 	cmp	r0, #0
 c108ea4:	0affffed 	beq	c108e60 <_Balloc+0x38>
 c108ea8:	e9800050 	stmib	r0, {r4, r6}
 c108eac:	eaffffe8 	b	c108e54 <_Balloc+0x2c>

0c108eb0 <_Bfree>:
 c108eb0:	e3510000 	cmp	r1, #0
 c108eb4:	1590304c 	ldrne	r3, [r0, #76]	; 0x4c
 c108eb8:	15912004 	ldrne	r2, [r1, #4]
 c108ebc:	17930102 	ldrne	r0, [r3, r2, lsl #2]
 c108ec0:	15810000 	strne	r0, [r1]
 c108ec4:	17831102 	strne	r1, [r3, r2, lsl #2]
 c108ec8:	e12fff1e 	bx	lr

0c108ecc <__multadd>:
 c108ecc:	e92d40f0 	push	{r4, r5, r6, r7, lr}
 c108ed0:	e1a05001 	mov	r5, r1
 c108ed4:	e5914010 	ldr	r4, [r1, #16]
 c108ed8:	e1a06000 	mov	r6, r0
 c108edc:	e24dd00c 	sub	sp, sp, #12
 c108ee0:	e2810014 	add	r0, r1, #20
 c108ee4:	e3a01000 	mov	r1, #0
 c108ee8:	e590c000 	ldr	ip, [r0]
 c108eec:	e1a0780c 	lsl	r7, ip, #16
 c108ef0:	e1a07827 	lsr	r7, r7, #16
 c108ef4:	e0233297 	mla	r3, r7, r2, r3
 c108ef8:	e1a0c82c 	lsr	ip, ip, #16
 c108efc:	e007029c 	mul	r7, ip, r2
 c108f00:	e1a0c803 	lsl	ip, r3, #16
 c108f04:	e1a0c82c 	lsr	ip, ip, #16
 c108f08:	e0873823 	add	r3, r7, r3, lsr #16
 c108f0c:	e2811001 	add	r1, r1, #1
 c108f10:	e08cc803 	add	ip, ip, r3, lsl #16
 c108f14:	e1540001 	cmp	r4, r1
 c108f18:	e1a03823 	lsr	r3, r3, #16
 c108f1c:	e480c004 	str	ip, [r0], #4
 c108f20:	cafffff0 	bgt	c108ee8 <__multadd+0x1c>
 c108f24:	e3530000 	cmp	r3, #0
 c108f28:	0a000006 	beq	c108f48 <__multadd+0x7c>
 c108f2c:	e5952008 	ldr	r2, [r5, #8]
 c108f30:	e1540002 	cmp	r4, r2
 c108f34:	aa000007 	bge	c108f58 <__multadd+0x8c>
 c108f38:	e0852104 	add	r2, r5, r4, lsl #2
 c108f3c:	e2844001 	add	r4, r4, #1
 c108f40:	e5823014 	str	r3, [r2, #20]
 c108f44:	e5854010 	str	r4, [r5, #16]
 c108f48:	e1a00005 	mov	r0, r5
 c108f4c:	e28dd00c 	add	sp, sp, #12
 c108f50:	e8bd40f0 	pop	{r4, r5, r6, r7, lr}
 c108f54:	e12fff1e 	bx	lr
 c108f58:	e5951004 	ldr	r1, [r5, #4]
 c108f5c:	e1a00006 	mov	r0, r6
 c108f60:	e2811001 	add	r1, r1, #1
 c108f64:	e58d3004 	str	r3, [sp, #4]
 c108f68:	ebffffae 	bl	c108e28 <_Balloc>
 c108f6c:	e5952010 	ldr	r2, [r5, #16]
 c108f70:	e2822002 	add	r2, r2, #2
 c108f74:	e285100c 	add	r1, r5, #12
 c108f78:	e1a07000 	mov	r7, r0
 c108f7c:	e1a02102 	lsl	r2, r2, #2
 c108f80:	e280000c 	add	r0, r0, #12
 c108f84:	ebffff35 	bl	c108c60 <memcpy>
 c108f88:	e5951004 	ldr	r1, [r5, #4]
 c108f8c:	e596204c 	ldr	r2, [r6, #76]	; 0x4c
 c108f90:	e7920101 	ldr	r0, [r2, r1, lsl #2]
 c108f94:	e59d3004 	ldr	r3, [sp, #4]
 c108f98:	e5850000 	str	r0, [r5]
 c108f9c:	e7825101 	str	r5, [r2, r1, lsl #2]
 c108fa0:	e1a05007 	mov	r5, r7
 c108fa4:	eaffffe3 	b	c108f38 <__multadd+0x6c>

0c108fa8 <__s2b>:
 c108fa8:	e92d45f8 	push	{r3, r4, r5, r6, r7, r8, sl, lr}
 c108fac:	e283c008 	add	ip, r3, #8
 c108fb0:	e1a07003 	mov	r7, r3
 c108fb4:	e59f30d4 	ldr	r3, [pc, #212]	; c109090 <__s2b+0xe8>
 c108fb8:	e0c3e39c 	smull	lr, r3, ip, r3
 c108fbc:	e1a0cfcc 	asr	ip, ip, #31
 c108fc0:	e06c30c3 	rsb	r3, ip, r3, asr #1
 c108fc4:	e3530001 	cmp	r3, #1
 c108fc8:	e1a06001 	mov	r6, r1
 c108fcc:	e1a04000 	mov	r4, r0
 c108fd0:	e1a08002 	mov	r8, r2
 c108fd4:	d3a01000 	movle	r1, #0
 c108fd8:	da000005 	ble	c108ff4 <__s2b+0x4c>
 c108fdc:	e3a02001 	mov	r2, #1
 c108fe0:	e3a01000 	mov	r1, #0
 c108fe4:	e1a02082 	lsl	r2, r2, #1
 c108fe8:	e1530002 	cmp	r3, r2
 c108fec:	e2811001 	add	r1, r1, #1
 c108ff0:	cafffffb 	bgt	c108fe4 <__s2b+0x3c>
 c108ff4:	e1a00004 	mov	r0, r4
 c108ff8:	ebffff8a 	bl	c108e28 <_Balloc>
 c108ffc:	e59d3020 	ldr	r3, [sp, #32]
 c109000:	e3580009 	cmp	r8, #9
 c109004:	e5803014 	str	r3, [r0, #20]
 c109008:	e3a03001 	mov	r3, #1
 c10900c:	e1a01000 	mov	r1, r0
 c109010:	e5803010 	str	r3, [r0, #16]
 c109014:	d286600a 	addle	r6, r6, #10
 c109018:	d3a08009 	movle	r8, #9
 c10901c:	da00000c 	ble	c109054 <__s2b+0xac>
 c109020:	e286a009 	add	sl, r6, #9
 c109024:	e1a0500a 	mov	r5, sl
 c109028:	e0866008 	add	r6, r6, r8
 c10902c:	e4d53001 	ldrb	r3, [r5], #1
 c109030:	e1a00004 	mov	r0, r4
 c109034:	e3a0200a 	mov	r2, #10
 c109038:	e2433030 	sub	r3, r3, #48	; 0x30
 c10903c:	ebffffa2 	bl	c108ecc <__multadd>
 c109040:	e1550006 	cmp	r5, r6
 c109044:	e1a01000 	mov	r1, r0
 c109048:	1afffff7 	bne	c10902c <__s2b+0x84>
 c10904c:	e08a6008 	add	r6, sl, r8
 c109050:	e2466008 	sub	r6, r6, #8
 c109054:	e1570008 	cmp	r7, r8
 c109058:	da000009 	ble	c109084 <__s2b+0xdc>
 c10905c:	e0867007 	add	r7, r6, r7
 c109060:	e0687007 	rsb	r7, r8, r7
 c109064:	e4d63001 	ldrb	r3, [r6], #1
 c109068:	e1a00004 	mov	r0, r4
 c10906c:	e3a0200a 	mov	r2, #10
 c109070:	e2433030 	sub	r3, r3, #48	; 0x30
 c109074:	ebffff94 	bl	c108ecc <__multadd>
 c109078:	e1560007 	cmp	r6, r7
 c10907c:	e1a01000 	mov	r1, r0
 c109080:	1afffff7 	bne	c109064 <__s2b+0xbc>
 c109084:	e1a00001 	mov	r0, r1
 c109088:	e8bd45f8 	pop	{r3, r4, r5, r6, r7, r8, sl, lr}
 c10908c:	e12fff1e 	bx	lr
 c109090:	38e38e39 	.word	0x38e38e39

0c109094 <__hi0bits>:
 c109094:	e1b02820 	lsrs	r2, r0, #16
 c109098:	e1a03000 	mov	r3, r0
 c10909c:	01a03800 	lsleq	r3, r0, #16
 c1090a0:	13a00000 	movne	r0, #0
 c1090a4:	03a00010 	moveq	r0, #16
 c1090a8:	e31304ff 	tst	r3, #-16777216	; 0xff000000
 c1090ac:	01a03403 	lsleq	r3, r3, #8
 c1090b0:	02800008 	addeq	r0, r0, #8
 c1090b4:	e313020f 	tst	r3, #-268435456	; 0xf0000000
 c1090b8:	01a03203 	lsleq	r3, r3, #4
 c1090bc:	02800004 	addeq	r0, r0, #4
 c1090c0:	e3130103 	tst	r3, #-1073741824	; 0xc0000000
 c1090c4:	01a03103 	lsleq	r3, r3, #2
 c1090c8:	02800002 	addeq	r0, r0, #2
 c1090cc:	e3530000 	cmp	r3, #0
 c1090d0:	b12fff1e 	bxlt	lr
 c1090d4:	e3130101 	tst	r3, #1073741824	; 0x40000000
 c1090d8:	12800001 	addne	r0, r0, #1
 c1090dc:	03a00020 	moveq	r0, #32
 c1090e0:	e12fff1e 	bx	lr

0c1090e4 <__lo0bits>:
 c1090e4:	e5903000 	ldr	r3, [r0]
 c1090e8:	e1a02000 	mov	r2, r0
 c1090ec:	e2130007 	ands	r0, r3, #7
 c1090f0:	0a00000a 	beq	c109120 <__lo0bits+0x3c>
 c1090f4:	e3130001 	tst	r3, #1
 c1090f8:	13a00000 	movne	r0, #0
 c1090fc:	112fff1e 	bxne	lr
 c109100:	e3130002 	tst	r3, #2
 c109104:	11a030a3 	lsrne	r3, r3, #1
 c109108:	01a03123 	lsreq	r3, r3, #2
 c10910c:	15823000 	strne	r3, [r2]
 c109110:	13a00001 	movne	r0, #1
 c109114:	05823000 	streq	r3, [r2]
 c109118:	03a00002 	moveq	r0, #2
 c10911c:	e12fff1e 	bx	lr
 c109120:	e1b01803 	lsls	r1, r3, #16
 c109124:	01a03823 	lsreq	r3, r3, #16
 c109128:	03a00010 	moveq	r0, #16
 c10912c:	e31300ff 	tst	r3, #255	; 0xff
 c109130:	01a03423 	lsreq	r3, r3, #8
 c109134:	02800008 	addeq	r0, r0, #8
 c109138:	e313000f 	tst	r3, #15
 c10913c:	01a03223 	lsreq	r3, r3, #4
 c109140:	02800004 	addeq	r0, r0, #4
 c109144:	e3130003 	tst	r3, #3
 c109148:	01a03123 	lsreq	r3, r3, #2
 c10914c:	02800002 	addeq	r0, r0, #2
 c109150:	e3130001 	tst	r3, #1
 c109154:	1a000002 	bne	c109164 <__lo0bits+0x80>
 c109158:	e1b030a3 	lsrs	r3, r3, #1
 c10915c:	0a000002 	beq	c10916c <__lo0bits+0x88>
 c109160:	e2800001 	add	r0, r0, #1
 c109164:	e5823000 	str	r3, [r2]
 c109168:	e12fff1e 	bx	lr
 c10916c:	e3a00020 	mov	r0, #32
 c109170:	e12fff1e 	bx	lr

0c109174 <__i2b>:
 c109174:	e92d4010 	push	{r4, lr}
 c109178:	e1a04001 	mov	r4, r1
 c10917c:	e3a01001 	mov	r1, #1
 c109180:	ebffff28 	bl	c108e28 <_Balloc>
 c109184:	e3a02001 	mov	r2, #1
 c109188:	e5804014 	str	r4, [r0, #20]
 c10918c:	e5802010 	str	r2, [r0, #16]
 c109190:	e8bd4010 	pop	{r4, lr}
 c109194:	e12fff1e 	bx	lr

0c109198 <__multiply>:
 c109198:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 c10919c:	e5918010 	ldr	r8, [r1, #16]
 c1091a0:	e592a010 	ldr	sl, [r2, #16]
 c1091a4:	e1a06002 	mov	r6, r2
 c1091a8:	e158000a 	cmp	r8, sl
 c1091ac:	b1a02008 	movlt	r2, r8
 c1091b0:	e1a07001 	mov	r7, r1
 c1091b4:	b1a07006 	movlt	r7, r6
 c1091b8:	b1a0800a 	movlt	r8, sl
 c1091bc:	e5973008 	ldr	r3, [r7, #8]
 c1091c0:	b1a0a002 	movlt	sl, r2
 c1091c4:	b1a06001 	movlt	r6, r1
 c1091c8:	e08a4008 	add	r4, sl, r8
 c1091cc:	e5971004 	ldr	r1, [r7, #4]
 c1091d0:	e1540003 	cmp	r4, r3
 c1091d4:	e24dd014 	sub	sp, sp, #20
 c1091d8:	c2811001 	addgt	r1, r1, #1
 c1091dc:	ebffff11 	bl	c108e28 <_Balloc>
 c1091e0:	e080b104 	add	fp, r0, r4, lsl #2
 c1091e4:	e2805014 	add	r5, r0, #20
 c1091e8:	e28bb014 	add	fp, fp, #20
 c1091ec:	e155000b 	cmp	r5, fp
 c1091f0:	e58d0004 	str	r0, [sp, #4]
 c1091f4:	2a000004 	bcs	c10920c <__multiply+0x74>
 c1091f8:	e1a03005 	mov	r3, r5
 c1091fc:	e3a02000 	mov	r2, #0
 c109200:	e4832004 	str	r2, [r3], #4
 c109204:	e15b0003 	cmp	fp, r3
 c109208:	8afffffc 	bhi	c109200 <__multiply+0x68>
 c10920c:	e086a10a 	add	sl, r6, sl, lsl #2
 c109210:	e28aa014 	add	sl, sl, #20
 c109214:	e2866014 	add	r6, r6, #20
 c109218:	e087c108 	add	ip, r7, r8, lsl #2
 c10921c:	e156000a 	cmp	r6, sl
 c109220:	e2877014 	add	r7, r7, #20
 c109224:	e28cc014 	add	ip, ip, #20
 c109228:	2a000042 	bcs	c109338 <__multiply+0x1a0>
 c10922c:	e58db008 	str	fp, [sp, #8]
 c109230:	e58d400c 	str	r4, [sp, #12]
 c109234:	e1a0b007 	mov	fp, r7
 c109238:	e1a0400a 	mov	r4, sl
 c10923c:	e4968004 	ldr	r8, [r6], #4
 c109240:	e1a0a808 	lsl	sl, r8, #16
 c109244:	e1b0a82a 	lsrs	sl, sl, #16
 c109248:	0a000019 	beq	c1092b4 <__multiply+0x11c>
 c10924c:	e1a0200b 	mov	r2, fp
 c109250:	e1a03005 	mov	r3, r5
 c109254:	e3a07000 	mov	r7, #0
 c109258:	e1a09006 	mov	r9, r6
 c10925c:	e4920004 	ldr	r0, [r2], #4
 c109260:	e5931000 	ldr	r1, [r3]
 c109264:	e1a08800 	lsl	r8, r0, #16
 c109268:	e1a06801 	lsl	r6, r1, #16
 c10926c:	e1a08828 	lsr	r8, r8, #16
 c109270:	e1a06826 	lsr	r6, r6, #16
 c109274:	e026689a 	mla	r6, sl, r8, r6
 c109278:	e1a01821 	lsr	r1, r1, #16
 c10927c:	e1a00820 	lsr	r0, r0, #16
 c109280:	e020109a 	mla	r0, sl, r0, r1
 c109284:	e0867007 	add	r7, r6, r7
 c109288:	e1a01807 	lsl	r1, r7, #16
 c10928c:	e1a01821 	lsr	r1, r1, #16
 c109290:	e0807827 	add	r7, r0, r7, lsr #16
 c109294:	e1811807 	orr	r1, r1, r7, lsl #16
 c109298:	e15c0002 	cmp	ip, r2
 c10929c:	e1a07827 	lsr	r7, r7, #16
 c1092a0:	e4831004 	str	r1, [r3], #4
 c1092a4:	8affffec 	bhi	c10925c <__multiply+0xc4>
 c1092a8:	e5837000 	str	r7, [r3]
 c1092ac:	e5198004 	ldr	r8, [r9, #-4]
 c1092b0:	e1a06009 	mov	r6, r9
 c1092b4:	e1b08828 	lsrs	r8, r8, #16
 c1092b8:	0a000019 	beq	c109324 <__multiply+0x18c>
 c1092bc:	e5952000 	ldr	r2, [r5]
 c1092c0:	e1a0300b 	mov	r3, fp
 c1092c4:	e1a07005 	mov	r7, r5
 c1092c8:	e1a0a005 	mov	sl, r5
 c1092cc:	e1a01002 	mov	r1, r2
 c1092d0:	e3a00000 	mov	r0, #0
 c1092d4:	e1a09006 	mov	r9, r6
 c1092d8:	e1d360b0 	ldrh	r6, [r3]
 c1092dc:	e0200896 	mla	r0, r6, r8, r0
 c1092e0:	e1a02802 	lsl	r2, r2, #16
 c1092e4:	e0800821 	add	r0, r0, r1, lsr #16
 c1092e8:	e1a02822 	lsr	r2, r2, #16
 c1092ec:	e1822800 	orr	r2, r2, r0, lsl #16
 c1092f0:	e4872004 	str	r2, [r7], #4
 c1092f4:	e5ba1004 	ldr	r1, [sl, #4]!
 c1092f8:	e4936004 	ldr	r6, [r3], #4
 c1092fc:	e1a02801 	lsl	r2, r1, #16
 c109300:	e1a06826 	lsr	r6, r6, #16
 c109304:	e1a02822 	lsr	r2, r2, #16
 c109308:	e0222896 	mla	r2, r6, r8, r2
 c10930c:	e15c0003 	cmp	ip, r3
 c109310:	e0822820 	add	r2, r2, r0, lsr #16
 c109314:	e1a00822 	lsr	r0, r2, #16
 c109318:	8affffee 	bhi	c1092d8 <__multiply+0x140>
 c10931c:	e5872000 	str	r2, [r7]
 c109320:	e1a06009 	mov	r6, r9
 c109324:	e1540006 	cmp	r4, r6
 c109328:	82855004 	addhi	r5, r5, #4
 c10932c:	8affffc2 	bhi	c10923c <__multiply+0xa4>
 c109330:	e59db008 	ldr	fp, [sp, #8]
 c109334:	e59d400c 	ldr	r4, [sp, #12]
 c109338:	e3540000 	cmp	r4, #0
 c10933c:	da000009 	ble	c109368 <__multiply+0x1d0>
 c109340:	e51b3004 	ldr	r3, [fp, #-4]
 c109344:	e3530000 	cmp	r3, #0
 c109348:	e24bb004 	sub	fp, fp, #4
 c10934c:	0a000003 	beq	c109360 <__multiply+0x1c8>
 c109350:	ea000004 	b	c109368 <__multiply+0x1d0>
 c109354:	e53b3004 	ldr	r3, [fp, #-4]!
 c109358:	e3530000 	cmp	r3, #0
 c10935c:	1a000001 	bne	c109368 <__multiply+0x1d0>
 c109360:	e2544001 	subs	r4, r4, #1
 c109364:	1afffffa 	bne	c109354 <__multiply+0x1bc>
 c109368:	e59d3004 	ldr	r3, [sp, #4]
 c10936c:	e5834010 	str	r4, [r3, #16]
 c109370:	e1a00003 	mov	r0, r3
 c109374:	e28dd014 	add	sp, sp, #20
 c109378:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 c10937c:	e12fff1e 	bx	lr

0c109380 <__pow5mult>:
 c109380:	e2123003 	ands	r3, r2, #3
 c109384:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
 c109388:	e1a05002 	mov	r5, r2
 c10938c:	e1a04000 	mov	r4, r0
 c109390:	e1a08001 	mov	r8, r1
 c109394:	1a000025 	bne	c109430 <__pow5mult+0xb0>
 c109398:	e1b05145 	asrs	r5, r5, #2
 c10939c:	0a000018 	beq	c109404 <__pow5mult+0x84>
 c1093a0:	e5947048 	ldr	r7, [r4, #72]	; 0x48
 c1093a4:	e3570000 	cmp	r7, #0
 c1093a8:	1a000006 	bne	c1093c8 <__pow5mult+0x48>
 c1093ac:	ea000026 	b	c10944c <__pow5mult+0xcc>
 c1093b0:	e1b050c5 	asrs	r5, r5, #1
 c1093b4:	0a000012 	beq	c109404 <__pow5mult+0x84>
 c1093b8:	e5976000 	ldr	r6, [r7]
 c1093bc:	e3560000 	cmp	r6, #0
 c1093c0:	11a07006 	movne	r7, r6
 c1093c4:	0a000011 	beq	c109410 <__pow5mult+0x90>
 c1093c8:	e3150001 	tst	r5, #1
 c1093cc:	0afffff7 	beq	c1093b0 <__pow5mult+0x30>
 c1093d0:	e1a01008 	mov	r1, r8
 c1093d4:	e1a02007 	mov	r2, r7
 c1093d8:	e1a00004 	mov	r0, r4
 c1093dc:	ebffff6d 	bl	c109198 <__multiply>
 c1093e0:	e3580000 	cmp	r8, #0
 c1093e4:	15982004 	ldrne	r2, [r8, #4]
 c1093e8:	1594304c 	ldrne	r3, [r4, #76]	; 0x4c
 c1093ec:	17931102 	ldrne	r1, [r3, r2, lsl #2]
 c1093f0:	15881000 	strne	r1, [r8]
 c1093f4:	17838102 	strne	r8, [r3, r2, lsl #2]
 c1093f8:	e1b050c5 	asrs	r5, r5, #1
 c1093fc:	e1a08000 	mov	r8, r0
 c109400:	1affffec 	bne	c1093b8 <__pow5mult+0x38>
 c109404:	e1a00008 	mov	r0, r8
 c109408:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
 c10940c:	e12fff1e 	bx	lr
 c109410:	e1a01007 	mov	r1, r7
 c109414:	e1a02007 	mov	r2, r7
 c109418:	e1a00004 	mov	r0, r4
 c10941c:	ebffff5d 	bl	c109198 <__multiply>
 c109420:	e5870000 	str	r0, [r7]
 c109424:	e5806000 	str	r6, [r0]
 c109428:	e1a07000 	mov	r7, r0
 c10942c:	eaffffe5 	b	c1093c8 <__pow5mult+0x48>
 c109430:	e59f2034 	ldr	r2, [pc, #52]	; c10946c <__pow5mult+0xec>
 c109434:	e2433001 	sub	r3, r3, #1
 c109438:	e7922103 	ldr	r2, [r2, r3, lsl #2]
 c10943c:	e3a03000 	mov	r3, #0
 c109440:	ebfffea1 	bl	c108ecc <__multadd>
 c109444:	e1a08000 	mov	r8, r0
 c109448:	eaffffd2 	b	c109398 <__pow5mult+0x18>
 c10944c:	e1a00004 	mov	r0, r4
 c109450:	e59f1018 	ldr	r1, [pc, #24]	; c109470 <__pow5mult+0xf0>
 c109454:	ebffff46 	bl	c109174 <__i2b>
 c109458:	e3a03000 	mov	r3, #0
 c10945c:	e5840048 	str	r0, [r4, #72]	; 0x48
 c109460:	e1a07000 	mov	r7, r0
 c109464:	e5803000 	str	r3, [r0]
 c109468:	eaffffd6 	b	c1093c8 <__pow5mult+0x48>
 c10946c:	0c100a38 	.word	0x0c100a38
 c109470:	00000271 	.word	0x00000271

0c109474 <__lshift>:
 c109474:	e92d45f8 	push	{r3, r4, r5, r6, r7, r8, sl, lr}
 c109478:	e5915010 	ldr	r5, [r1, #16]
 c10947c:	e5913008 	ldr	r3, [r1, #8]
 c109480:	e1a062c2 	asr	r6, r2, #5
 c109484:	e2855001 	add	r5, r5, #1
 c109488:	e0855006 	add	r5, r5, r6
 c10948c:	e1550003 	cmp	r5, r3
 c109490:	e1a04001 	mov	r4, r1
 c109494:	e1a07002 	mov	r7, r2
 c109498:	e1a08000 	mov	r8, r0
 c10949c:	e5911004 	ldr	r1, [r1, #4]
 c1094a0:	da000003 	ble	c1094b4 <__lshift+0x40>
 c1094a4:	e1a03083 	lsl	r3, r3, #1
 c1094a8:	e1550003 	cmp	r5, r3
 c1094ac:	e2811001 	add	r1, r1, #1
 c1094b0:	cafffffb 	bgt	c1094a4 <__lshift+0x30>
 c1094b4:	e1a00008 	mov	r0, r8
 c1094b8:	ebfffe5a 	bl	c108e28 <_Balloc>
 c1094bc:	e3560000 	cmp	r6, #0
 c1094c0:	e2802014 	add	r2, r0, #20
 c1094c4:	da000007 	ble	c1094e8 <__lshift+0x74>
 c1094c8:	e3a03000 	mov	r3, #0
 c1094cc:	e1a01003 	mov	r1, r3
 c1094d0:	e2833001 	add	r3, r3, #1
 c1094d4:	e1530006 	cmp	r3, r6
 c1094d8:	e4821004 	str	r1, [r2], #4
 c1094dc:	1afffffb 	bne	c1094d0 <__lshift+0x5c>
 c1094e0:	e0803103 	add	r3, r0, r3, lsl #2
 c1094e4:	e2832014 	add	r2, r3, #20
 c1094e8:	e5946010 	ldr	r6, [r4, #16]
 c1094ec:	e217701f 	ands	r7, r7, #31
 c1094f0:	e0846106 	add	r6, r4, r6, lsl #2
 c1094f4:	e2841014 	add	r1, r4, #20
 c1094f8:	e2866014 	add	r6, r6, #20
 c1094fc:	0a000014 	beq	c109554 <__lshift+0xe0>
 c109500:	e2673020 	rsb	r3, r7, #32
 c109504:	e3a0c000 	mov	ip, #0
 c109508:	e591a000 	ldr	sl, [r1]
 c10950c:	e18cc71a 	orr	ip, ip, sl, lsl r7
 c109510:	e482c004 	str	ip, [r2], #4
 c109514:	e491c004 	ldr	ip, [r1], #4
 c109518:	e1560001 	cmp	r6, r1
 c10951c:	e1a0c33c 	lsr	ip, ip, r3
 c109520:	8afffff8 	bhi	c109508 <__lshift+0x94>
 c109524:	e35c0000 	cmp	ip, #0
 c109528:	e582c000 	str	ip, [r2]
 c10952c:	12855001 	addne	r5, r5, #1
 c109530:	e598304c 	ldr	r3, [r8, #76]	; 0x4c
 c109534:	e5942004 	ldr	r2, [r4, #4]
 c109538:	e7931102 	ldr	r1, [r3, r2, lsl #2]
 c10953c:	e2455001 	sub	r5, r5, #1
 c109540:	e5805010 	str	r5, [r0, #16]
 c109544:	e5841000 	str	r1, [r4]
 c109548:	e7834102 	str	r4, [r3, r2, lsl #2]
 c10954c:	e8bd45f8 	pop	{r3, r4, r5, r6, r7, r8, sl, lr}
 c109550:	e12fff1e 	bx	lr
 c109554:	e4913004 	ldr	r3, [r1], #4
 c109558:	e1560001 	cmp	r6, r1
 c10955c:	e4823004 	str	r3, [r2], #4
 c109560:	9afffff2 	bls	c109530 <__lshift+0xbc>
 c109564:	e4913004 	ldr	r3, [r1], #4
 c109568:	e1560001 	cmp	r6, r1
 c10956c:	e4823004 	str	r3, [r2], #4
 c109570:	8afffff7 	bhi	c109554 <__lshift+0xe0>
 c109574:	eaffffed 	b	c109530 <__lshift+0xbc>

0c109578 <__mcmp>:
 c109578:	e1a03000 	mov	r3, r0
 c10957c:	e5912010 	ldr	r2, [r1, #16]
 c109580:	e5900010 	ldr	r0, [r0, #16]
 c109584:	e0500002 	subs	r0, r0, r2
 c109588:	e52d4004 	push	{r4}		; (str r4, [sp, #-4]!)
 c10958c:	1a00000c 	bne	c1095c4 <__mcmp+0x4c>
 c109590:	e2822004 	add	r2, r2, #4
 c109594:	e1a0c102 	lsl	ip, r2, #2
 c109598:	e083200c 	add	r2, r3, ip
 c10959c:	e081100c 	add	r1, r1, ip
 c1095a0:	e2833014 	add	r3, r3, #20
 c1095a4:	e2822004 	add	r2, r2, #4
 c1095a8:	e2811004 	add	r1, r1, #4
 c1095ac:	e5324004 	ldr	r4, [r2, #-4]!
 c1095b0:	e531c004 	ldr	ip, [r1, #-4]!
 c1095b4:	e154000c 	cmp	r4, ip
 c1095b8:	1a000003 	bne	c1095cc <__mcmp+0x54>
 c1095bc:	e1530002 	cmp	r3, r2
 c1095c0:	3afffff9 	bcc	c1095ac <__mcmp+0x34>
 c1095c4:	e49d4004 	pop	{r4}		; (ldr r4, [sp], #4)
 c1095c8:	e12fff1e 	bx	lr
 c1095cc:	33e00000 	mvncc	r0, #0
 c1095d0:	23a00001 	movcs	r0, #1
 c1095d4:	eafffffa 	b	c1095c4 <__mcmp+0x4c>

0c1095d8 <__mdiff>:
 c1095d8:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
 c1095dc:	e1a04001 	mov	r4, r1
 c1095e0:	e1a06000 	mov	r6, r0
 c1095e4:	e1a01002 	mov	r1, r2
 c1095e8:	e1a00004 	mov	r0, r4
 c1095ec:	e1a05002 	mov	r5, r2
 c1095f0:	ebffffe0 	bl	c109578 <__mcmp>
 c1095f4:	e2507000 	subs	r7, r0, #0
 c1095f8:	0a000045 	beq	c109714 <__mdiff+0x13c>
 c1095fc:	b1a03004 	movlt	r3, r4
 c109600:	b1a04005 	movlt	r4, r5
 c109604:	e5941004 	ldr	r1, [r4, #4]
 c109608:	e1a00006 	mov	r0, r6
 c10960c:	b1a05003 	movlt	r5, r3
 c109610:	a3a07000 	movge	r7, #0
 c109614:	b3a07001 	movlt	r7, #1
 c109618:	ebfffe02 	bl	c108e28 <_Balloc>
 c10961c:	e5946010 	ldr	r6, [r4, #16]
 c109620:	e595c010 	ldr	ip, [r5, #16]
 c109624:	e0843106 	add	r3, r4, r6, lsl #2
 c109628:	e085c10c 	add	ip, r5, ip, lsl #2
 c10962c:	e580700c 	str	r7, [r0, #12]
 c109630:	e28cc014 	add	ip, ip, #20
 c109634:	e2837014 	add	r7, r3, #20
 c109638:	e2844014 	add	r4, r4, #20
 c10963c:	e2855014 	add	r5, r5, #20
 c109640:	e2808014 	add	r8, r0, #20
 c109644:	e3a01000 	mov	r1, #0
 c109648:	e4952004 	ldr	r2, [r5], #4
 c10964c:	e4943004 	ldr	r3, [r4], #4
 c109650:	e1a0a802 	lsl	sl, r2, #16
 c109654:	e1a09803 	lsl	r9, r3, #16
 c109658:	e1a0a82a 	lsr	sl, sl, #16
 c10965c:	e06aa829 	rsb	sl, sl, r9, lsr #16
 c109660:	e08a1001 	add	r1, sl, r1
 c109664:	e1a02822 	lsr	r2, r2, #16
 c109668:	e0623823 	rsb	r3, r2, r3, lsr #16
 c10966c:	e1a02801 	lsl	r2, r1, #16
 c109670:	e1a02822 	lsr	r2, r2, #16
 c109674:	e0831841 	add	r1, r3, r1, asr #16
 c109678:	e1822801 	orr	r2, r2, r1, lsl #16
 c10967c:	e1a03008 	mov	r3, r8
 c109680:	e4832004 	str	r2, [r3], #4
 c109684:	e15c0005 	cmp	ip, r5
 c109688:	e1a02004 	mov	r2, r4
 c10968c:	e1a01841 	asr	r1, r1, #16
 c109690:	e1a08003 	mov	r8, r3
 c109694:	8affffeb 	bhi	c109648 <__mdiff+0x70>
 c109698:	e1570004 	cmp	r7, r4
 c10969c:	e1a05003 	mov	r5, r3
 c1096a0:	9a000010 	bls	c1096e8 <__mdiff+0x110>
 c1096a4:	e492c004 	ldr	ip, [r2], #4
 c1096a8:	e1a0880c 	lsl	r8, ip, #16
 c1096ac:	e0811828 	add	r1, r1, r8, lsr #16
 c1096b0:	e1a0882c 	lsr	r8, ip, #16
 c1096b4:	e1a0c801 	lsl	ip, r1, #16
 c1096b8:	e1a0c82c 	lsr	ip, ip, #16
 c1096bc:	e0881841 	add	r1, r8, r1, asr #16
 c1096c0:	e18cc801 	orr	ip, ip, r1, lsl #16
 c1096c4:	e1570002 	cmp	r7, r2
 c1096c8:	e1a01841 	asr	r1, r1, #16
 c1096cc:	e483c004 	str	ip, [r3], #4
 c1096d0:	8afffff3 	bhi	c1096a4 <__mdiff+0xcc>
 c1096d4:	e1e03004 	mvn	r3, r4
 c1096d8:	e0833007 	add	r3, r3, r7
 c1096dc:	e3c33003 	bic	r3, r3, #3
 c1096e0:	e2833004 	add	r3, r3, #4
 c1096e4:	e0853003 	add	r3, r5, r3
 c1096e8:	e5132004 	ldr	r2, [r3, #-4]
 c1096ec:	e3520000 	cmp	r2, #0
 c1096f0:	e2433004 	sub	r3, r3, #4
 c1096f4:	1a000003 	bne	c109708 <__mdiff+0x130>
 c1096f8:	e5332004 	ldr	r2, [r3, #-4]!
 c1096fc:	e3520000 	cmp	r2, #0
 c109700:	e2466001 	sub	r6, r6, #1
 c109704:	0afffffb 	beq	c1096f8 <__mdiff+0x120>
 c109708:	e5806010 	str	r6, [r0, #16]
 c10970c:	e8bd47f0 	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
 c109710:	e12fff1e 	bx	lr
 c109714:	e1a00006 	mov	r0, r6
 c109718:	e1a01007 	mov	r1, r7
 c10971c:	ebfffdc1 	bl	c108e28 <_Balloc>
 c109720:	e3a03001 	mov	r3, #1
 c109724:	e5803010 	str	r3, [r0, #16]
 c109728:	e5807014 	str	r7, [r0, #20]
 c10972c:	eafffff6 	b	c10970c <__mdiff+0x134>

0c109730 <__ulp>:
 c109730:	e59f3054 	ldr	r3, [pc, #84]	; c10978c <__ulp+0x5c>
 c109734:	e0013003 	and	r3, r1, r3
 c109738:	e243350d 	sub	r3, r3, #54525952	; 0x3400000
 c10973c:	e3530000 	cmp	r3, #0
 c109740:	c1a01003 	movgt	r1, r3
 c109744:	c3a00000 	movgt	r0, #0
 c109748:	c12fff1e 	bxgt	lr
 c10974c:	e2633000 	rsb	r3, r3, #0
 c109750:	e1a03a43 	asr	r3, r3, #20
 c109754:	e3530013 	cmp	r3, #19
 c109758:	d3a02702 	movle	r2, #524288	; 0x80000
 c10975c:	d1a01352 	asrle	r1, r2, r3
 c109760:	d3a00000 	movle	r0, #0
 c109764:	d12fff1e 	bxle	lr
 c109768:	e2433014 	sub	r3, r3, #20
 c10976c:	e353001e 	cmp	r3, #30
 c109770:	d263301f 	rsble	r3, r3, #31
 c109774:	d3a02001 	movle	r2, #1
 c109778:	d1a03312 	lslle	r3, r2, r3
 c10977c:	c3a03001 	movgt	r3, #1
 c109780:	e3a01000 	mov	r1, #0
 c109784:	e1a00003 	mov	r0, r3
 c109788:	e12fff1e 	bx	lr
 c10978c:	7ff00000 	.word	0x7ff00000

0c109790 <__b2d>:
 c109790:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
 c109794:	e5905010 	ldr	r5, [r0, #16]
 c109798:	e2855004 	add	r5, r5, #4
 c10979c:	e7904105 	ldr	r4, [r0, r5, lsl #2]
 c1097a0:	e1a03000 	mov	r3, r0
 c1097a4:	e1a00004 	mov	r0, r4
 c1097a8:	e0835105 	add	r5, r3, r5, lsl #2
 c1097ac:	e1a07001 	mov	r7, r1
 c1097b0:	e2836014 	add	r6, r3, #20
 c1097b4:	ebfffe36 	bl	c109094 <__hi0bits>
 c1097b8:	e2603020 	rsb	r3, r0, #32
 c1097bc:	e350000a 	cmp	r0, #10
 c1097c0:	e1a02005 	mov	r2, r5
 c1097c4:	e5873000 	str	r3, [r7]
 c1097c8:	ca00000d 	bgt	c109804 <__b2d+0x74>
 c1097cc:	e260100b 	rsb	r1, r0, #11
 c1097d0:	e1a0c134 	lsr	ip, r4, r1
 c1097d4:	e1560005 	cmp	r6, r5
 c1097d8:	e38cc5ff 	orr	ip, ip, #1069547520	; 0x3fc00000
 c1097dc:	e38c3603 	orr	r3, ip, #3145728	; 0x300000
 c1097e0:	3515c004 	ldrcc	ip, [r5, #-4]
 c1097e4:	31a0113c 	lsrcc	r1, ip, r1
 c1097e8:	23a01000 	movcs	r1, #0
 c1097ec:	e2800015 	add	r0, r0, #21
 c1097f0:	e1812014 	orr	r2, r1, r4, lsl r0
 c1097f4:	e1a00002 	mov	r0, r2
 c1097f8:	e1a01003 	mov	r1, r3
 c1097fc:	e8bd40f8 	pop	{r3, r4, r5, r6, r7, lr}
 c109800:	e12fff1e 	bx	lr
 c109804:	e1560005 	cmp	r6, r5
 c109808:	35121004 	ldrcc	r1, [r2, #-4]
 c10980c:	23a01000 	movcs	r1, #0
 c109810:	32455004 	subcc	r5, r5, #4
 c109814:	e250000b 	subs	r0, r0, #11
 c109818:	038445ff 	orreq	r4, r4, #1069547520	; 0x3fc00000
 c10981c:	03843603 	orreq	r3, r4, #3145728	; 0x300000
 c109820:	01a02001 	moveq	r2, r1
 c109824:	0afffff2 	beq	c1097f4 <__b2d+0x64>
 c109828:	e1a04014 	lsl	r4, r4, r0
 c10982c:	e38445ff 	orr	r4, r4, #1069547520	; 0x3fc00000
 c109830:	e260c020 	rsb	ip, r0, #32
 c109834:	e3844603 	orr	r4, r4, #3145728	; 0x300000
 c109838:	e1550006 	cmp	r5, r6
 c10983c:	e1843c31 	orr	r3, r4, r1, lsr ip
 c109840:	85154004 	ldrhi	r4, [r5, #-4]
 c109844:	81a0cc34 	lsrhi	ip, r4, ip
 c109848:	93a0c000 	movls	ip, #0
 c10984c:	e18c2011 	orr	r2, ip, r1, lsl r0
 c109850:	eaffffe7 	b	c1097f4 <__b2d+0x64>

0c109854 <__d2b>:
 c109854:	e92d45f0 	push	{r4, r5, r6, r7, r8, sl, lr}
 c109858:	e3a01001 	mov	r1, #1
 c10985c:	e24dd00c 	sub	sp, sp, #12
 c109860:	e1a05003 	mov	r5, r3
 c109864:	e1a04002 	mov	r4, r2
 c109868:	e59d7028 	ldr	r7, [sp, #40]	; 0x28
 c10986c:	e59d602c 	ldr	r6, [sp, #44]	; 0x2c
 c109870:	ebfffd6c 	bl	c108e28 <_Balloc>
 c109874:	e3c5a102 	bic	sl, r5, #-2147483648	; 0x80000000
 c109878:	e3c534ff 	bic	r3, r5, #-16777216	; 0xff000000
 c10987c:	e3c3360f 	bic	r3, r3, #15728640	; 0xf00000
 c109880:	e1b0aa2a 	lsrs	sl, sl, #20
 c109884:	e58d3000 	str	r3, [sp]
 c109888:	13833601 	orrne	r3, r3, #1048576	; 0x100000
 c10988c:	158d3000 	strne	r3, [sp]
 c109890:	e3540000 	cmp	r4, #0
 c109894:	e1a08000 	mov	r8, r0
 c109898:	0a00001f 	beq	c10991c <__d2b+0xc8>
 c10989c:	e28d0008 	add	r0, sp, #8
 c1098a0:	e5204004 	str	r4, [r0, #-4]!
 c1098a4:	ebfffe0e 	bl	c1090e4 <__lo0bits>
 c1098a8:	e3500000 	cmp	r0, #0
 c1098ac:	e59d3000 	ldr	r3, [sp]
 c1098b0:	159d2004 	ldrne	r2, [sp, #4]
 c1098b4:	12601020 	rsbne	r1, r0, #32
 c1098b8:	11822113 	orrne	r2, r2, r3, lsl r1
 c1098bc:	11a03033 	lsrne	r3, r3, r0
 c1098c0:	059d2004 	ldreq	r2, [sp, #4]
 c1098c4:	15882014 	strne	r2, [r8, #20]
 c1098c8:	158d3000 	strne	r3, [sp]
 c1098cc:	05882014 	streq	r2, [r8, #20]
 c1098d0:	e3530000 	cmp	r3, #0
 c1098d4:	03a04001 	moveq	r4, #1
 c1098d8:	13a04002 	movne	r4, #2
 c1098dc:	e35a0000 	cmp	sl, #0
 c1098e0:	e5883018 	str	r3, [r8, #24]
 c1098e4:	e5884010 	str	r4, [r8, #16]
 c1098e8:	1a000014 	bne	c109940 <__d2b+0xec>
 c1098ec:	e2400e43 	sub	r0, r0, #1072	; 0x430
 c1098f0:	e2403002 	sub	r3, r0, #2
 c1098f4:	e0882104 	add	r2, r8, r4, lsl #2
 c1098f8:	e5920010 	ldr	r0, [r2, #16]
 c1098fc:	e5873000 	str	r3, [r7]
 c109900:	ebfffde3 	bl	c109094 <__hi0bits>
 c109904:	e0600284 	rsb	r0, r0, r4, lsl #5
 c109908:	e5860000 	str	r0, [r6]
 c10990c:	e1a00008 	mov	r0, r8
 c109910:	e28dd00c 	add	sp, sp, #12
 c109914:	e8bd45f0 	pop	{r4, r5, r6, r7, r8, sl, lr}
 c109918:	e12fff1e 	bx	lr
 c10991c:	e1a0000d 	mov	r0, sp
 c109920:	ebfffdef 	bl	c1090e4 <__lo0bits>
 c109924:	e59d3000 	ldr	r3, [sp]
 c109928:	e3a04001 	mov	r4, #1
 c10992c:	e35a0000 	cmp	sl, #0
 c109930:	e5883014 	str	r3, [r8, #20]
 c109934:	e5884010 	str	r4, [r8, #16]
 c109938:	e2800020 	add	r0, r0, #32
 c10993c:	0affffea 	beq	c1098ec <__d2b+0x98>
 c109940:	e24aae43 	sub	sl, sl, #1072	; 0x430
 c109944:	e24aa003 	sub	sl, sl, #3
 c109948:	e08aa000 	add	sl, sl, r0
 c10994c:	e2600035 	rsb	r0, r0, #53	; 0x35
 c109950:	e587a000 	str	sl, [r7]
 c109954:	e5860000 	str	r0, [r6]
 c109958:	eaffffeb 	b	c10990c <__d2b+0xb8>

0c10995c <__ratio>:
 c10995c:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
 c109960:	e24dd00c 	sub	sp, sp, #12
 c109964:	e1a06001 	mov	r6, r1
 c109968:	e28d1004 	add	r1, sp, #4
 c10996c:	e1a07000 	mov	r7, r0
 c109970:	ebffff86 	bl	c109790 <__b2d>
 c109974:	e1a05001 	mov	r5, r1
 c109978:	e1a04000 	mov	r4, r0
 c10997c:	e1a0100d 	mov	r1, sp
 c109980:	e1a00006 	mov	r0, r6
 c109984:	ebffff81 	bl	c109790 <__b2d>
 c109988:	e596c010 	ldr	ip, [r6, #16]
 c10998c:	e1a03001 	mov	r3, r1
 c109990:	e1a02000 	mov	r2, r0
 c109994:	e5971010 	ldr	r1, [r7, #16]
 c109998:	e89d4001 	ldm	sp, {r0, lr}
 c10999c:	e06c1001 	rsb	r1, ip, r1
 c1099a0:	e060000e 	rsb	r0, r0, lr
 c1099a4:	e0801281 	add	r1, r0, r1, lsl #5
 c1099a8:	e3510000 	cmp	r1, #0
 c1099ac:	c0857a01 	addgt	r7, r5, r1, lsl #20
 c1099b0:	d0439a01 	suble	r9, r3, r1, lsl #20
 c1099b4:	c1a05007 	movgt	r5, r7
 c1099b8:	d1a03009 	movle	r3, r9
 c1099bc:	e1a00004 	mov	r0, r4
 c1099c0:	e1a01005 	mov	r1, r5
 c1099c4:	ebffeb5f 	bl	c104748 <__aeabi_ddiv>
 c1099c8:	e28dd00c 	add	sp, sp, #12
 c1099cc:	e8bd43f0 	pop	{r4, r5, r6, r7, r8, r9, lr}
 c1099d0:	e12fff1e 	bx	lr

0c1099d4 <_mprec_log10>:
 c1099d4:	e3500017 	cmp	r0, #23
 c1099d8:	e92d4010 	push	{r4, lr}
 c1099dc:	c59f1038 	ldrgt	r1, [pc, #56]	; c109a1c <_mprec_log10+0x48>
 c1099e0:	e1a04000 	mov	r4, r0
 c1099e4:	c3a00000 	movgt	r0, #0
 c1099e8:	da000006 	ble	c109a08 <_mprec_log10+0x34>
 c1099ec:	e3a02000 	mov	r2, #0
 c1099f0:	e59f3028 	ldr	r3, [pc, #40]	; c109a20 <_mprec_log10+0x4c>
 c1099f4:	ebffeaaf 	bl	c1044b8 <__aeabi_dmul>
 c1099f8:	e2544001 	subs	r4, r4, #1
 c1099fc:	1afffffa 	bne	c1099ec <_mprec_log10+0x18>
 c109a00:	e8bd4010 	pop	{r4, lr}
 c109a04:	e12fff1e 	bx	lr
 c109a08:	e59f3014 	ldr	r3, [pc, #20]	; c109a24 <_mprec_log10+0x50>
 c109a0c:	e0834180 	add	r4, r3, r0, lsl #3
 c109a10:	e2841010 	add	r1, r4, #16
 c109a14:	e8910003 	ldm	r1, {r0, r1}
 c109a18:	eafffff8 	b	c109a00 <_mprec_log10+0x2c>
 c109a1c:	3ff00000 	.word	0x3ff00000
 c109a20:	40240000 	.word	0x40240000
 c109a24:	0c100a38 	.word	0x0c100a38

0c109a28 <__copybits>:
 c109a28:	e5923010 	ldr	r3, [r2, #16]
 c109a2c:	e2411001 	sub	r1, r1, #1
 c109a30:	e0823103 	add	r3, r2, r3, lsl #2
 c109a34:	e1a0c2c1 	asr	ip, r1, #5
 c109a38:	e2833014 	add	r3, r3, #20
 c109a3c:	e2821014 	add	r1, r2, #20
 c109a40:	e28cc001 	add	ip, ip, #1
 c109a44:	e1510003 	cmp	r1, r3
 c109a48:	e92d0030 	push	{r4, r5}
 c109a4c:	e080c10c 	add	ip, r0, ip, lsl #2
 c109a50:	2a000009 	bcs	c109a7c <__copybits+0x54>
 c109a54:	e1a04000 	mov	r4, r0
 c109a58:	e4915004 	ldr	r5, [r1], #4
 c109a5c:	e1530001 	cmp	r3, r1
 c109a60:	e4845004 	str	r5, [r4], #4
 c109a64:	8afffffb 	bhi	c109a58 <__copybits+0x30>
 c109a68:	e0623003 	rsb	r3, r2, r3
 c109a6c:	e2433015 	sub	r3, r3, #21
 c109a70:	e3c33003 	bic	r3, r3, #3
 c109a74:	e2833004 	add	r3, r3, #4
 c109a78:	e0800003 	add	r0, r0, r3
 c109a7c:	e15c0000 	cmp	ip, r0
 c109a80:	9a000003 	bls	c109a94 <__copybits+0x6c>
 c109a84:	e3a03000 	mov	r3, #0
 c109a88:	e4803004 	str	r3, [r0], #4
 c109a8c:	e15c0000 	cmp	ip, r0
 c109a90:	8afffffc 	bhi	c109a88 <__copybits+0x60>
 c109a94:	e8bd0030 	pop	{r4, r5}
 c109a98:	e12fff1e 	bx	lr

0c109a9c <__any_on>:
 c109a9c:	e5902010 	ldr	r2, [r0, #16]
 c109aa0:	e1a032c1 	asr	r3, r1, #5
 c109aa4:	e1520003 	cmp	r2, r3
 c109aa8:	ba00000b 	blt	c109adc <__any_on+0x40>
 c109aac:	da000009 	ble	c109ad8 <__any_on+0x3c>
 c109ab0:	e211101f 	ands	r1, r1, #31
 c109ab4:	0a000007 	beq	c109ad8 <__any_on+0x3c>
 c109ab8:	e1a02003 	mov	r2, r3
 c109abc:	e0803103 	add	r3, r0, r3, lsl #2
 c109ac0:	e5933014 	ldr	r3, [r3, #20]
 c109ac4:	e1a0c133 	lsr	ip, r3, r1
 c109ac8:	e153011c 	cmp	r3, ip, lsl r1
 c109acc:	0a000002 	beq	c109adc <__any_on+0x40>
 c109ad0:	e3a00001 	mov	r0, #1
 c109ad4:	e12fff1e 	bx	lr
 c109ad8:	e1a02003 	mov	r2, r3
 c109adc:	e2822004 	add	r2, r2, #4
 c109ae0:	e0803102 	add	r3, r0, r2, lsl #2
 c109ae4:	e2801014 	add	r1, r0, #20
 c109ae8:	e283c004 	add	ip, r3, #4
 c109aec:	e151000c 	cmp	r1, ip
 c109af0:	2a000009 	bcs	c109b1c <__any_on+0x80>
 c109af4:	e7902102 	ldr	r2, [r0, r2, lsl #2]
 c109af8:	e3520000 	cmp	r2, #0
 c109afc:	1afffff3 	bne	c109ad0 <__any_on+0x34>
 c109b00:	e1510003 	cmp	r1, r3
 c109b04:	2a000004 	bcs	c109b1c <__any_on+0x80>
 c109b08:	e5332004 	ldr	r2, [r3, #-4]!
 c109b0c:	e3520000 	cmp	r2, #0
 c109b10:	0afffffa 	beq	c109b00 <__any_on+0x64>
 c109b14:	e3a00001 	mov	r0, #1
 c109b18:	e12fff1e 	bx	lr
 c109b1c:	e3a00000 	mov	r0, #0
 c109b20:	e12fff1e 	bx	lr

0c109b24 <__fpclassifyd>:
 c109b24:	e1a02001 	mov	r2, r1
 c109b28:	e1a03001 	mov	r3, r1
 c109b2c:	e1901002 	orrs	r1, r0, r2
 c109b30:	e52d4004 	push	{r4}		; (str r4, [sp, #-4]!)
 c109b34:	0a000018 	beq	c109b9c <__fpclassifyd+0x78>
 c109b38:	e2704001 	rsbs	r4, r0, #1
 c109b3c:	33a04000 	movcc	r4, #0
 c109b40:	e3520102 	cmp	r2, #-2147483648	; 0x80000000
 c109b44:	03500000 	cmpeq	r0, #0
 c109b48:	0a000013 	beq	c109b9c <__fpclassifyd+0x78>
 c109b4c:	e282c47f 	add	ip, r2, #2130706432	; 0x7f000000
 c109b50:	e59f2050 	ldr	r2, [pc, #80]	; c109ba8 <__fpclassifyd+0x84>
 c109b54:	e28cc60f 	add	ip, ip, #15728640	; 0xf00000
 c109b58:	e2431601 	sub	r1, r3, #1048576	; 0x100000
 c109b5c:	e1510002 	cmp	r1, r2
 c109b60:	815c0002 	cmphi	ip, r2
 c109b64:	93a00004 	movls	r0, #4
 c109b68:	9a00000c 	bls	c109ba0 <__fpclassifyd+0x7c>
 c109b6c:	e2832102 	add	r2, r3, #-2147483648	; 0x80000000
 c109b70:	e3530601 	cmp	r3, #1048576	; 0x100000
 c109b74:	23520601 	cmpcs	r2, #1048576	; 0x100000
 c109b78:	33a00003 	movcc	r0, #3
 c109b7c:	3a000007 	bcc	c109ba0 <__fpclassifyd+0x7c>
 c109b80:	e59f0024 	ldr	r0, [pc, #36]	; c109bac <__fpclassifyd+0x88>
 c109b84:	e3730601 	cmn	r3, #1048576	; 0x100000
 c109b88:	11530000 	cmpne	r3, r0
 c109b8c:	13a03000 	movne	r3, #0
 c109b90:	03a03001 	moveq	r3, #1
 c109b94:	e0040003 	and	r0, r4, r3
 c109b98:	ea000000 	b	c109ba0 <__fpclassifyd+0x7c>
 c109b9c:	e3a00002 	mov	r0, #2
 c109ba0:	e49d4004 	pop	{r4}		; (ldr r4, [sp], #4)
 c109ba4:	e12fff1e 	bx	lr
 c109ba8:	7fdfffff 	.word	0x7fdfffff
 c109bac:	7ff00000 	.word	0x7ff00000

0c109bb0 <_sbrk_r>:
 c109bb0:	e92d4038 	push	{r3, r4, r5, lr}
 c109bb4:	e59f4030 	ldr	r4, [pc, #48]	; c109bec <_sbrk_r+0x3c>
 c109bb8:	e3a03000 	mov	r3, #0
 c109bbc:	e1a05000 	mov	r5, r0
 c109bc0:	e1a00001 	mov	r0, r1
 c109bc4:	e5843000 	str	r3, [r4]
 c109bc8:	eb000bac 	bl	c10ca80 <_sbrk>
 c109bcc:	e3700001 	cmn	r0, #1
 c109bd0:	0a000001 	beq	c109bdc <_sbrk_r+0x2c>
 c109bd4:	e8bd4038 	pop	{r3, r4, r5, lr}
 c109bd8:	e12fff1e 	bx	lr
 c109bdc:	e5943000 	ldr	r3, [r4]
 c109be0:	e3530000 	cmp	r3, #0
 c109be4:	15853000 	strne	r3, [r5]
 c109be8:	eafffff9 	b	c109bd4 <_sbrk_r+0x24>
 c109bec:	0c100d58 	.word	0x0c100d58

0c109bf0 <strcmp>:
 c109bf0:	e0202001 	eor	r2, r0, r1
 c109bf4:	e3120003 	tst	r2, #3
 c109bf8:	1a000021 	bne	c109c84 <strcmp_unaligned>
 c109bfc:	e2102003 	ands	r2, r0, #3
 c109c00:	e3c00003 	bic	r0, r0, #3
 c109c04:	e3c11003 	bic	r1, r1, #3
 c109c08:	e490c004 	ldr	ip, [r0], #4
 c109c0c:	04913004 	ldreq	r3, [r1], #4
 c109c10:	0a000006 	beq	c109c30 <strcmp+0x40>
 c109c14:	e2222003 	eor	r2, r2, #3
 c109c18:	e1a02182 	lsl	r2, r2, #3
 c109c1c:	e3e034ff 	mvn	r3, #-16777216	; 0xff000000
 c109c20:	e1a02233 	lsr	r2, r3, r2
 c109c24:	e4913004 	ldr	r3, [r1], #4
 c109c28:	e18cc002 	orr	ip, ip, r2
 c109c2c:	e1833002 	orr	r3, r3, r2
 c109c30:	e52d4004 	push	{r4}		; (str r4, [sp, #-4]!)
 c109c34:	e3a04001 	mov	r4, #1
 c109c38:	e1844404 	orr	r4, r4, r4, lsl #8
 c109c3c:	e1844804 	orr	r4, r4, r4, lsl #16
 c109c40:	e04c2004 	sub	r2, ip, r4
 c109c44:	e15c0003 	cmp	ip, r3
 c109c48:	01c2200c 	biceq	r2, r2, ip
 c109c4c:	01120384 	tsteq	r2, r4, lsl #7
 c109c50:	0490c004 	ldreq	ip, [r0], #4
 c109c54:	04913004 	ldreq	r3, [r1], #4
 c109c58:	0afffff8 	beq	c109c40 <strcmp+0x50>
 c109c5c:	e1a00c0c 	lsl	r0, ip, #24
 c109c60:	e1a0c42c 	lsr	ip, ip, #8
 c109c64:	e3500001 	cmp	r0, #1
 c109c68:	21500c03 	cmpcs	r0, r3, lsl #24
 c109c6c:	01a03423 	lsreq	r3, r3, #8
 c109c70:	0afffff9 	beq	c109c5c <strcmp+0x6c>
 c109c74:	e20330ff 	and	r3, r3, #255	; 0xff
 c109c78:	e0630c20 	rsb	r0, r3, r0, lsr #24
 c109c7c:	e49d4004 	pop	{r4}		; (ldr r4, [sp], #4)
 c109c80:	e12fff1e 	bx	lr

0c109c84 <strcmp_unaligned>:
 c109c84:	e3100003 	tst	r0, #3
 c109c88:	0a000006 	beq	c109ca8 <strcmp_unaligned+0x24>
 c109c8c:	e4d02001 	ldrb	r2, [r0], #1
 c109c90:	e4d13001 	ldrb	r3, [r1], #1
 c109c94:	e3520001 	cmp	r2, #1
 c109c98:	21520003 	cmpcs	r2, r3
 c109c9c:	0afffff8 	beq	c109c84 <strcmp_unaligned>
 c109ca0:	e0420003 	sub	r0, r2, r3
 c109ca4:	e12fff1e 	bx	lr
 c109ca8:	e52d5004 	push	{r5}		; (str r5, [sp, #-4]!)
 c109cac:	e52d4004 	push	{r4}		; (str r4, [sp, #-4]!)
 c109cb0:	e3a02001 	mov	r2, #1
 c109cb4:	e1822402 	orr	r2, r2, r2, lsl #8
 c109cb8:	e1822802 	orr	r2, r2, r2, lsl #16
 c109cbc:	e201c003 	and	ip, r1, #3
 c109cc0:	e3c11003 	bic	r1, r1, #3
 c109cc4:	e4904004 	ldr	r4, [r0], #4
 c109cc8:	e4915004 	ldr	r5, [r1], #4
 c109ccc:	e35c0002 	cmp	ip, #2
 c109cd0:	0a000017 	beq	c109d34 <strcmp_unaligned+0xb0>
 c109cd4:	8a00002d 	bhi	c109d90 <strcmp_unaligned+0x10c>
 c109cd8:	e3c4c4ff 	bic	ip, r4, #-16777216	; 0xff000000
 c109cdc:	e15c0425 	cmp	ip, r5, lsr #8
 c109ce0:	e0443002 	sub	r3, r4, r2
 c109ce4:	e1c33004 	bic	r3, r3, r4
 c109ce8:	1a000007 	bne	c109d0c <strcmp_unaligned+0x88>
 c109cec:	e0133382 	ands	r3, r3, r2, lsl #7
 c109cf0:	04915004 	ldreq	r5, [r1], #4
 c109cf4:	1a000006 	bne	c109d14 <strcmp_unaligned+0x90>
 c109cf8:	e02cc004 	eor	ip, ip, r4
 c109cfc:	e15c0c05 	cmp	ip, r5, lsl #24
 c109d00:	1a000008 	bne	c109d28 <strcmp_unaligned+0xa4>
 c109d04:	e4904004 	ldr	r4, [r0], #4
 c109d08:	eafffff2 	b	c109cd8 <strcmp_unaligned+0x54>
 c109d0c:	e1a05425 	lsr	r5, r5, #8
 c109d10:	ea000037 	b	c109df4 <strcmp_unaligned+0x170>
 c109d14:	e3d334ff 	bics	r3, r3, #-16777216	; 0xff000000
 c109d18:	1a000031 	bne	c109de4 <strcmp_unaligned+0x160>
 c109d1c:	e5d15000 	ldrb	r5, [r1]
 c109d20:	e1a0cc24 	lsr	ip, r4, #24
 c109d24:	ea000032 	b	c109df4 <strcmp_unaligned+0x170>
 c109d28:	e1a0cc24 	lsr	ip, r4, #24
 c109d2c:	e20550ff 	and	r5, r5, #255	; 0xff
 c109d30:	ea00002f 	b	c109df4 <strcmp_unaligned+0x170>
 c109d34:	e1a0c804 	lsl	ip, r4, #16
 c109d38:	e0443002 	sub	r3, r4, r2
 c109d3c:	e1a0c82c 	lsr	ip, ip, #16
 c109d40:	e1c33004 	bic	r3, r3, r4
 c109d44:	e15c0825 	cmp	ip, r5, lsr #16
 c109d48:	1a00000e 	bne	c109d88 <strcmp_unaligned+0x104>
 c109d4c:	e0133382 	ands	r3, r3, r2, lsl #7
 c109d50:	04915004 	ldreq	r5, [r1], #4
 c109d54:	1a000004 	bne	c109d6c <strcmp_unaligned+0xe8>
 c109d58:	e02cc004 	eor	ip, ip, r4
 c109d5c:	e15c0805 	cmp	ip, r5, lsl #16
 c109d60:	1a000006 	bne	c109d80 <strcmp_unaligned+0xfc>
 c109d64:	e4904004 	ldr	r4, [r0], #4
 c109d68:	eafffff1 	b	c109d34 <strcmp_unaligned+0xb0>
 c109d6c:	e1b03803 	lsls	r3, r3, #16
 c109d70:	1a00001b 	bne	c109de4 <strcmp_unaligned+0x160>
 c109d74:	e1d150b0 	ldrh	r5, [r1]
 c109d78:	e1a0c824 	lsr	ip, r4, #16
 c109d7c:	ea00001c 	b	c109df4 <strcmp_unaligned+0x170>
 c109d80:	e1a05805 	lsl	r5, r5, #16
 c109d84:	e1a0c824 	lsr	ip, r4, #16
 c109d88:	e1a05825 	lsr	r5, r5, #16
 c109d8c:	ea000018 	b	c109df4 <strcmp_unaligned+0x170>
 c109d90:	e204c0ff 	and	ip, r4, #255	; 0xff
 c109d94:	e15c0c25 	cmp	ip, r5, lsr #24
 c109d98:	e0443002 	sub	r3, r4, r2
 c109d9c:	e1c33004 	bic	r3, r3, r4
 c109da0:	1a000007 	bne	c109dc4 <strcmp_unaligned+0x140>
 c109da4:	e0133382 	ands	r3, r3, r2, lsl #7
 c109da8:	04915004 	ldreq	r5, [r1], #4
 c109dac:	1a000006 	bne	c109dcc <strcmp_unaligned+0x148>
 c109db0:	e02cc004 	eor	ip, ip, r4
 c109db4:	e15c0405 	cmp	ip, r5, lsl #8
 c109db8:	1a000006 	bne	c109dd8 <strcmp_unaligned+0x154>
 c109dbc:	e4904004 	ldr	r4, [r0], #4
 c109dc0:	eafffff2 	b	c109d90 <strcmp_unaligned+0x10c>
 c109dc4:	e1a05c25 	lsr	r5, r5, #24
 c109dc8:	ea000009 	b	c109df4 <strcmp_unaligned+0x170>
 c109dcc:	e31400ff 	tst	r4, #255	; 0xff
 c109dd0:	0a000003 	beq	c109de4 <strcmp_unaligned+0x160>
 c109dd4:	e4915004 	ldr	r5, [r1], #4
 c109dd8:	e1a0c424 	lsr	ip, r4, #8
 c109ddc:	e3c554ff 	bic	r5, r5, #-16777216	; 0xff000000
 c109de0:	ea000003 	b	c109df4 <strcmp_unaligned+0x170>
 c109de4:	e3a00000 	mov	r0, #0
 c109de8:	e49d4004 	pop	{r4}		; (ldr r4, [sp], #4)
 c109dec:	e49d5004 	pop	{r5}		; (ldr r5, [sp], #4)
 c109df0:	e12fff1e 	bx	lr
 c109df4:	e20c20ff 	and	r2, ip, #255	; 0xff
 c109df8:	e20500ff 	and	r0, r5, #255	; 0xff
 c109dfc:	e3500001 	cmp	r0, #1
 c109e00:	21500002 	cmpcs	r0, r2
 c109e04:	01a0c42c 	lsreq	ip, ip, #8
 c109e08:	01a05425 	lsreq	r5, r5, #8
 c109e0c:	0afffff8 	beq	c109df4 <strcmp_unaligned+0x170>
 c109e10:	e0420000 	sub	r0, r2, r0
 c109e14:	e49d4004 	pop	{r4}		; (ldr r4, [sp], #4)
 c109e18:	e49d5004 	pop	{r5}		; (ldr r5, [sp], #4)
 c109e1c:	e12fff1e 	bx	lr

0c109e20 <strlen>:
 c109e20:	e3c01003 	bic	r1, r0, #3
 c109e24:	e2100003 	ands	r0, r0, #3
 c109e28:	e2600000 	rsb	r0, r0, #0
 c109e2c:	e4913004 	ldr	r3, [r1], #4
 c109e30:	e280c004 	add	ip, r0, #4
 c109e34:	e1a0c18c 	lsl	ip, ip, #3
 c109e38:	e3e02000 	mvn	r2, #0
 c109e3c:	11833c32 	orrne	r3, r3, r2, lsr ip
 c109e40:	e3a0c001 	mov	ip, #1
 c109e44:	e18cc40c 	orr	ip, ip, ip, lsl #8
 c109e48:	e18cc80c 	orr	ip, ip, ip, lsl #16
 c109e4c:	e043200c 	sub	r2, r3, ip
 c109e50:	e1c22003 	bic	r2, r2, r3
 c109e54:	e012238c 	ands	r2, r2, ip, lsl #7
 c109e58:	04913004 	ldreq	r3, [r1], #4
 c109e5c:	02800004 	addeq	r0, r0, #4
 c109e60:	0afffff9 	beq	c109e4c <strlen+0x2c>
 c109e64:	e31300ff 	tst	r3, #255	; 0xff
 c109e68:	12800001 	addne	r0, r0, #1
 c109e6c:	13130cff 	tstne	r3, #65280	; 0xff00
 c109e70:	12800001 	addne	r0, r0, #1
 c109e74:	131308ff 	tstne	r3, #16711680	; 0xff0000
 c109e78:	12800001 	addne	r0, r0, #1
 c109e7c:	e12fff1e 	bx	lr

0c109e80 <__ssprint_r>:
 c109e80:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 c109e84:	e5924008 	ldr	r4, [r2, #8]
 c109e88:	e24dd00c 	sub	sp, sp, #12
 c109e8c:	e3540000 	cmp	r4, #0
 c109e90:	e58d0004 	str	r0, [sp, #4]
 c109e94:	e1a0a002 	mov	sl, r2
 c109e98:	e1a05001 	mov	r5, r1
 c109e9c:	e5927000 	ldr	r7, [r2]
 c109ea0:	05824004 	streq	r4, [r2, #4]
 c109ea4:	01a00004 	moveq	r0, r4
 c109ea8:	0a000055 	beq	c10a004 <__ssprint_r+0x184>
 c109eac:	e3a09000 	mov	r9, #0
 c109eb0:	e1a04009 	mov	r4, r9
 c109eb4:	e3540000 	cmp	r4, #0
 c109eb8:	e5910000 	ldr	r0, [r1]
 c109ebc:	e5913008 	ldr	r3, [r1, #8]
 c109ec0:	0a000038 	beq	c109fa8 <__ssprint_r+0x128>
 c109ec4:	e1540003 	cmp	r4, r3
 c109ec8:	e1a06003 	mov	r6, r3
 c109ecc:	e1a08003 	mov	r8, r3
 c109ed0:	31a06004 	movcc	r6, r4
 c109ed4:	31a08004 	movcc	r8, r4
 c109ed8:	3a000024 	bcc	c109f70 <__ssprint_r+0xf0>
 c109edc:	e1d530bc 	ldrh	r3, [r5, #12]
 c109ee0:	e3130d12 	tst	r3, #1152	; 0x480
 c109ee4:	0a000021 	beq	c109f70 <__ssprint_r+0xf0>
 c109ee8:	e2851010 	add	r1, r5, #16
 c109eec:	e8910042 	ldm	r1, {r1, r6}
 c109ef0:	e0866086 	add	r6, r6, r6, lsl #1
 c109ef4:	e0618000 	rsb	r8, r1, r0
 c109ef8:	e0866fa6 	add	r6, r6, r6, lsr #31
 c109efc:	e2840001 	add	r0, r4, #1
 c109f00:	e1a060c6 	asr	r6, r6, #1
 c109f04:	e0800008 	add	r0, r0, r8
 c109f08:	e1560000 	cmp	r6, r0
 c109f0c:	e1a02006 	mov	r2, r6
 c109f10:	31a06000 	movcc	r6, r0
 c109f14:	31a02000 	movcc	r2, r0
 c109f18:	e3130b01 	tst	r3, #1024	; 0x400
 c109f1c:	0a000027 	beq	c109fc0 <__ssprint_r+0x140>
 c109f20:	e59d0004 	ldr	r0, [sp, #4]
 c109f24:	e1a01002 	mov	r1, r2
 c109f28:	ebfff948 	bl	c108450 <_malloc_r>
 c109f2c:	e250b000 	subs	fp, r0, #0
 c109f30:	0a000029 	beq	c109fdc <__ssprint_r+0x15c>
 c109f34:	e5951010 	ldr	r1, [r5, #16]
 c109f38:	e1a02008 	mov	r2, r8
 c109f3c:	ebfffb47 	bl	c108c60 <memcpy>
 c109f40:	e1d530bc 	ldrh	r3, [r5, #12]
 c109f44:	e3c33d12 	bic	r3, r3, #1152	; 0x480
 c109f48:	e3833080 	orr	r3, r3, #128	; 0x80
 c109f4c:	e1c530bc 	strh	r3, [r5, #12]
 c109f50:	e08b0008 	add	r0, fp, r8
 c109f54:	e585b010 	str	fp, [r5, #16]
 c109f58:	e0688006 	rsb	r8, r8, r6
 c109f5c:	e5850000 	str	r0, [r5]
 c109f60:	e5856014 	str	r6, [r5, #20]
 c109f64:	e5858008 	str	r8, [r5, #8]
 c109f68:	e1a06004 	mov	r6, r4
 c109f6c:	e1a08004 	mov	r8, r4
 c109f70:	e1a02008 	mov	r2, r8
 c109f74:	e1a01009 	mov	r1, r9
 c109f78:	eb00054d 	bl	c10b4b4 <memmove>
 c109f7c:	e59a2008 	ldr	r2, [sl, #8]
 c109f80:	e5953008 	ldr	r3, [r5, #8]
 c109f84:	e5950000 	ldr	r0, [r5]
 c109f88:	e0644002 	rsb	r4, r4, r2
 c109f8c:	e0663003 	rsb	r3, r6, r3
 c109f90:	e0800008 	add	r0, r0, r8
 c109f94:	e3540000 	cmp	r4, #0
 c109f98:	e5853008 	str	r3, [r5, #8]
 c109f9c:	e5850000 	str	r0, [r5]
 c109fa0:	e58a4008 	str	r4, [sl, #8]
 c109fa4:	0a000019 	beq	c10a010 <__ssprint_r+0x190>
 c109fa8:	e5974004 	ldr	r4, [r7, #4]
 c109fac:	e3540000 	cmp	r4, #0
 c109fb0:	e5979000 	ldr	r9, [r7]
 c109fb4:	e2877008 	add	r7, r7, #8
 c109fb8:	0afffffa 	beq	c109fa8 <__ssprint_r+0x128>
 c109fbc:	eaffffc0 	b	c109ec4 <__ssprint_r+0x44>
 c109fc0:	e59d0004 	ldr	r0, [sp, #4]
 c109fc4:	eb0005c4 	bl	c10b6dc <_realloc_r>
 c109fc8:	e250b000 	subs	fp, r0, #0
 c109fcc:	1affffdf 	bne	c109f50 <__ssprint_r+0xd0>
 c109fd0:	e59d0004 	ldr	r0, [sp, #4]
 c109fd4:	e5951010 	ldr	r1, [r5, #16]
 c109fd8:	eb00049c 	bl	c10b250 <_free_r>
 c109fdc:	e59d2004 	ldr	r2, [sp, #4]
 c109fe0:	e3a0300c 	mov	r3, #12
 c109fe4:	e5823000 	str	r3, [r2]
 c109fe8:	e1d520bc 	ldrh	r2, [r5, #12]
 c109fec:	e3a03000 	mov	r3, #0
 c109ff0:	e3822040 	orr	r2, r2, #64	; 0x40
 c109ff4:	e1c520bc 	strh	r2, [r5, #12]
 c109ff8:	e58a3008 	str	r3, [sl, #8]
 c109ffc:	e58a3004 	str	r3, [sl, #4]
 c10a000:	e3e00000 	mvn	r0, #0
 c10a004:	e28dd00c 	add	sp, sp, #12
 c10a008:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 c10a00c:	e12fff1e 	bx	lr
 c10a010:	e58a4004 	str	r4, [sl, #4]
 c10a014:	e1a00004 	mov	r0, r4
 c10a018:	eafffff9 	b	c10a004 <__ssprint_r+0x184>

0c10a01c <_svfiprintf_r>:
 c10a01c:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 c10a020:	e1a06001 	mov	r6, r1
 c10a024:	e1d110bc 	ldrh	r1, [r1, #12]
 c10a028:	e24dd0ac 	sub	sp, sp, #172	; 0xac
 c10a02c:	e3110080 	tst	r1, #128	; 0x80
 c10a030:	e58d0018 	str	r0, [sp, #24]
 c10a034:	e58d3014 	str	r3, [sp, #20]
 c10a038:	0a000002 	beq	c10a048 <_svfiprintf_r+0x2c>
 c10a03c:	e5963010 	ldr	r3, [r6, #16]
 c10a040:	e3530000 	cmp	r3, #0
 c10a044:	0a0003ee 	beq	c10b004 <_svfiprintf_r+0xfe8>
 c10a048:	e3a03000 	mov	r3, #0
 c10a04c:	e28dc030 	add	ip, sp, #48	; 0x30
 c10a050:	e58d302c 	str	r3, [sp, #44]	; 0x2c
 c10a054:	e58dc098 	str	ip, [sp, #152]	; 0x98
 c10a058:	e58d30a0 	str	r3, [sp, #160]	; 0xa0
 c10a05c:	e58d309c 	str	r3, [sp, #156]	; 0x9c
 c10a060:	e58d3010 	str	r3, [sp, #16]
 c10a064:	e1a05002 	mov	r5, r2
 c10a068:	e1a0400c 	mov	r4, ip
 c10a06c:	e5d53000 	ldrb	r3, [r5]
 c10a070:	e3530000 	cmp	r3, #0
 c10a074:	13530025 	cmpne	r3, #37	; 0x25
 c10a078:	0a00016a 	beq	c10a628 <_svfiprintf_r+0x60c>
 c10a07c:	e2853001 	add	r3, r5, #1
 c10a080:	e1a07003 	mov	r7, r3
 c10a084:	e5d33000 	ldrb	r3, [r3]
 c10a088:	e3530025 	cmp	r3, #37	; 0x25
 c10a08c:	13530000 	cmpne	r3, #0
 c10a090:	e2873001 	add	r3, r7, #1
 c10a094:	1afffff9 	bne	c10a080 <_svfiprintf_r+0x64>
 c10a098:	e0578005 	subs	r8, r7, r5
 c10a09c:	0a00000c 	beq	c10a0d4 <_svfiprintf_r+0xb8>
 c10a0a0:	e59d309c 	ldr	r3, [sp, #156]	; 0x9c
 c10a0a4:	e59d20a0 	ldr	r2, [sp, #160]	; 0xa0
 c10a0a8:	e2833001 	add	r3, r3, #1
 c10a0ac:	e0822008 	add	r2, r2, r8
 c10a0b0:	e3530007 	cmp	r3, #7
 c10a0b4:	e8840120 	stm	r4, {r5, r8}
 c10a0b8:	e58d20a0 	str	r2, [sp, #160]	; 0xa0
 c10a0bc:	e58d309c 	str	r3, [sp, #156]	; 0x9c
 c10a0c0:	d2844008 	addle	r4, r4, #8
 c10a0c4:	ca0002ef 	bgt	c10ac88 <_svfiprintf_r+0xc6c>
 c10a0c8:	e59d0010 	ldr	r0, [sp, #16]
 c10a0cc:	e0800008 	add	r0, r0, r8
 c10a0d0:	e58d0010 	str	r0, [sp, #16]
 c10a0d4:	e5d73000 	ldrb	r3, [r7]
 c10a0d8:	e3530000 	cmp	r3, #0
 c10a0dc:	0a00028a 	beq	c10ab0c <_svfiprintf_r+0xaf0>
 c10a0e0:	e3a01000 	mov	r1, #0
 c10a0e4:	e3a02000 	mov	r2, #0
 c10a0e8:	e5cd10a7 	strb	r1, [sp, #167]	; 0xa7
 c10a0ec:	e58d200c 	str	r2, [sp, #12]
 c10a0f0:	e5d73001 	ldrb	r3, [r7, #1]
 c10a0f4:	e2875001 	add	r5, r7, #1
 c10a0f8:	e3e0a000 	mvn	sl, #0
 c10a0fc:	e1a0b002 	mov	fp, r2
 c10a100:	e3a00020 	mov	r0, #32
 c10a104:	e3a0102b 	mov	r1, #43	; 0x2b
 c10a108:	e2855001 	add	r5, r5, #1
 c10a10c:	e2432020 	sub	r2, r3, #32
 c10a110:	e3520058 	cmp	r2, #88	; 0x58
 c10a114:	979ff102 	ldrls	pc, [pc, r2, lsl #2]
 c10a118:	ea000258 	b	c10aa80 <_svfiprintf_r+0xa64>
 c10a11c:	0c10aa90 	.word	0x0c10aa90
 c10a120:	0c10aa80 	.word	0x0c10aa80
 c10a124:	0c10aa80 	.word	0x0c10aa80
 c10a128:	0c10a9b4 	.word	0x0c10a9b4
 c10a12c:	0c10aa80 	.word	0x0c10aa80
 c10a130:	0c10aa80 	.word	0x0c10aa80
 c10a134:	0c10aa80 	.word	0x0c10aa80
 c10a138:	0c10aa80 	.word	0x0c10aa80
 c10a13c:	0c10aa80 	.word	0x0c10aa80
 c10a140:	0c10aa80 	.word	0x0c10aa80
 c10a144:	0c10a6ec 	.word	0x0c10a6ec
 c10a148:	0c10a9fc 	.word	0x0c10a9fc
 c10a14c:	0c10aa80 	.word	0x0c10aa80
 c10a150:	0c10a718 	.word	0x0c10a718
 c10a154:	0c10aa08 	.word	0x0c10aa08
 c10a158:	0c10aa80 	.word	0x0c10aa80
 c10a15c:	0c10a9f0 	.word	0x0c10a9f0
 c10a160:	0c10a9c0 	.word	0x0c10a9c0
 c10a164:	0c10a9c0 	.word	0x0c10a9c0
 c10a168:	0c10a9c0 	.word	0x0c10a9c0
 c10a16c:	0c10a9c0 	.word	0x0c10a9c0
 c10a170:	0c10a9c0 	.word	0x0c10a9c0
 c10a174:	0c10a9c0 	.word	0x0c10a9c0
 c10a178:	0c10a9c0 	.word	0x0c10a9c0
 c10a17c:	0c10a9c0 	.word	0x0c10a9c0
 c10a180:	0c10a9c0 	.word	0x0c10a9c0
 c10a184:	0c10aa80 	.word	0x0c10aa80
 c10a188:	0c10aa80 	.word	0x0c10aa80
 c10a18c:	0c10aa80 	.word	0x0c10aa80
 c10a190:	0c10aa80 	.word	0x0c10aa80
 c10a194:	0c10aa80 	.word	0x0c10aa80
 c10a198:	0c10aa80 	.word	0x0c10aa80
 c10a19c:	0c10aa80 	.word	0x0c10aa80
 c10a1a0:	0c10aa80 	.word	0x0c10aa80
 c10a1a4:	0c10aa80 	.word	0x0c10aa80
 c10a1a8:	0c10aa80 	.word	0x0c10aa80
 c10a1ac:	0c10a668 	.word	0x0c10a668
 c10a1b0:	0c10aa80 	.word	0x0c10aa80
 c10a1b4:	0c10aa80 	.word	0x0c10aa80
 c10a1b8:	0c10aa80 	.word	0x0c10aa80
 c10a1bc:	0c10aa80 	.word	0x0c10aa80
 c10a1c0:	0c10aa80 	.word	0x0c10aa80
 c10a1c4:	0c10aa80 	.word	0x0c10aa80
 c10a1c8:	0c10aa80 	.word	0x0c10aa80
 c10a1cc:	0c10aa80 	.word	0x0c10aa80
 c10a1d0:	0c10aa80 	.word	0x0c10aa80
 c10a1d4:	0c10aa80 	.word	0x0c10aa80
 c10a1d8:	0c10a630 	.word	0x0c10a630
 c10a1dc:	0c10aa80 	.word	0x0c10aa80
 c10a1e0:	0c10aa80 	.word	0x0c10aa80
 c10a1e4:	0c10aa80 	.word	0x0c10aa80
 c10a1e8:	0c10aa80 	.word	0x0c10aa80
 c10a1ec:	0c10aa80 	.word	0x0c10aa80
 c10a1f0:	0c10a280 	.word	0x0c10a280
 c10a1f4:	0c10aa80 	.word	0x0c10aa80
 c10a1f8:	0c10aa80 	.word	0x0c10aa80
 c10a1fc:	0c10a844 	.word	0x0c10a844
 c10a200:	0c10aa80 	.word	0x0c10aa80
 c10a204:	0c10aa80 	.word	0x0c10aa80
 c10a208:	0c10aa80 	.word	0x0c10aa80
 c10a20c:	0c10aa80 	.word	0x0c10aa80
 c10a210:	0c10aa80 	.word	0x0c10aa80
 c10a214:	0c10aa80 	.word	0x0c10aa80
 c10a218:	0c10aa80 	.word	0x0c10aa80
 c10a21c:	0c10aa80 	.word	0x0c10aa80
 c10a220:	0c10aa80 	.word	0x0c10aa80
 c10a224:	0c10aa80 	.word	0x0c10aa80
 c10a228:	0c10a898 	.word	0x0c10a898
 c10a22c:	0c10a66c 	.word	0x0c10a66c
 c10a230:	0c10aa80 	.word	0x0c10aa80
 c10a234:	0c10aa80 	.word	0x0c10aa80
 c10a238:	0c10aa80 	.word	0x0c10aa80
 c10a23c:	0c10a804 	.word	0x0c10a804
 c10a240:	0c10a66c 	.word	0x0c10a66c
 c10a244:	0c10aa80 	.word	0x0c10aa80
 c10a248:	0c10aa80 	.word	0x0c10aa80
 c10a24c:	0c10a7ec 	.word	0x0c10a7ec
 c10a250:	0c10aa80 	.word	0x0c10aa80
 c10a254:	0c10a810 	.word	0x0c10a810
 c10a258:	0c10a634 	.word	0x0c10a634
 c10a25c:	0c10a7a8 	.word	0x0c10a7a8
 c10a260:	0c10a79c 	.word	0x0c10a79c
 c10a264:	0c10aa80 	.word	0x0c10aa80
 c10a268:	0c10a724 	.word	0x0c10a724
 c10a26c:	0c10aa80 	.word	0x0c10aa80
 c10a270:	0c10a284 	.word	0x0c10a284
 c10a274:	0c10aa80 	.word	0x0c10aa80
 c10a278:	0c10aa80 	.word	0x0c10aa80
 c10a27c:	0c10aa50 	.word	0x0c10aa50
 c10a280:	e38bb010 	orr	fp, fp, #16
 c10a284:	e31b0020 	tst	fp, #32
 c10a288:	0a0002d0 	beq	c10add0 <_svfiprintf_r+0xdb4>
 c10a28c:	e59dc014 	ldr	ip, [sp, #20]
 c10a290:	e28c3007 	add	r3, ip, #7
 c10a294:	e3c33007 	bic	r3, r3, #7
 c10a298:	e8930300 	ldm	r3, {r8, r9}
 c10a29c:	e2833008 	add	r3, r3, #8
 c10a2a0:	e1980009 	orrs	r0, r8, r9
 c10a2a4:	e58d3014 	str	r3, [sp, #20]
 c10a2a8:	03a02000 	moveq	r2, #0
 c10a2ac:	13a02001 	movne	r2, #1
 c10a2b0:	e3a03001 	mov	r3, #1
 c10a2b4:	e3a01000 	mov	r1, #0
 c10a2b8:	e5cd10a7 	strb	r1, [sp, #167]	; 0xa7
 c10a2bc:	e35a0000 	cmp	sl, #0
 c10a2c0:	a3cbb080 	bicge	fp, fp, #128	; 0x80
 c10a2c4:	e35a0000 	cmp	sl, #0
 c10a2c8:	13822001 	orrne	r2, r2, #1
 c10a2cc:	e3520000 	cmp	r2, #0
 c10a2d0:	0a0000fa 	beq	c10a6c0 <_svfiprintf_r+0x6a4>
 c10a2d4:	e3530001 	cmp	r3, #1
 c10a2d8:	0a00028a 	beq	c10ad08 <_svfiprintf_r+0xcec>
 c10a2dc:	e3530002 	cmp	r3, #2
 c10a2e0:	0a0001f0 	beq	c10aaa8 <_svfiprintf_r+0xa8c>
 c10a2e4:	e28d2070 	add	r2, sp, #112	; 0x70
 c10a2e8:	e2823027 	add	r3, r2, #39	; 0x27
 c10a2ec:	e58d2008 	str	r2, [sp, #8]
 c10a2f0:	e1a01003 	mov	r1, r3
 c10a2f4:	e1a001a9 	lsr	r0, r9, #3
 c10a2f8:	e1a0c1a8 	lsr	ip, r8, #3
 c10a2fc:	e18cce89 	orr	ip, ip, r9, lsl #29
 c10a300:	e1a03000 	mov	r3, r0
 c10a304:	e1a09003 	mov	r9, r3
 c10a308:	e2080007 	and	r0, r8, #7
 c10a30c:	e1a0800c 	mov	r8, ip
 c10a310:	e2802030 	add	r2, r0, #48	; 0x30
 c10a314:	e198c009 	orrs	ip, r8, r9
 c10a318:	e1a03001 	mov	r3, r1
 c10a31c:	e5c12000 	strb	r2, [r1]
 c10a320:	e2411001 	sub	r1, r1, #1
 c10a324:	1afffff2 	bne	c10a2f4 <_svfiprintf_r+0x2d8>
 c10a328:	e31b0001 	tst	fp, #1
 c10a32c:	e58d3020 	str	r3, [sp, #32]
 c10a330:	0a0001ef 	beq	c10aaf4 <_svfiprintf_r+0xad8>
 c10a334:	e3520030 	cmp	r2, #48	; 0x30
 c10a338:	0a000346 	beq	c10b058 <_svfiprintf_r+0x103c>
 c10a33c:	e59d0008 	ldr	r0, [sp, #8]
 c10a340:	e58d1020 	str	r1, [sp, #32]
 c10a344:	e59d1020 	ldr	r1, [sp, #32]
 c10a348:	e2803028 	add	r3, r0, #40	; 0x28
 c10a34c:	e3a02030 	mov	r2, #48	; 0x30
 c10a350:	e0613003 	rsb	r3, r1, r3
 c10a354:	e5c12000 	strb	r2, [r1]
 c10a358:	e58d3008 	str	r3, [sp, #8]
 c10a35c:	e58da01c 	str	sl, [sp, #28]
 c10a360:	e5dd30a7 	ldrb	r3, [sp, #167]	; 0xa7
 c10a364:	e59d9008 	ldr	r9, [sp, #8]
 c10a368:	e59d001c 	ldr	r0, [sp, #28]
 c10a36c:	e1590000 	cmp	r9, r0
 c10a370:	b1a09000 	movlt	r9, r0
 c10a374:	e3530000 	cmp	r3, #0
 c10a378:	12899001 	addne	r9, r9, #1
 c10a37c:	e21b1002 	ands	r1, fp, #2
 c10a380:	12899002 	addne	r9, r9, #2
 c10a384:	e21b2084 	ands	r2, fp, #132	; 0x84
 c10a388:	e58d1024 	str	r1, [sp, #36]	; 0x24
 c10a38c:	e58d2028 	str	r2, [sp, #40]	; 0x28
 c10a390:	0a000154 	beq	c10a8e8 <_svfiprintf_r+0x8cc>
 c10a394:	e59d20a0 	ldr	r2, [sp, #160]	; 0xa0
 c10a398:	e59d309c 	ldr	r3, [sp, #156]	; 0x9c
 c10a39c:	e2841008 	add	r1, r4, #8
 c10a3a0:	e5dd00a7 	ldrb	r0, [sp, #167]	; 0xa7
 c10a3a4:	e3500000 	cmp	r0, #0
 c10a3a8:	0a00000b 	beq	c10a3dc <_svfiprintf_r+0x3c0>
 c10a3ac:	e2833001 	add	r3, r3, #1
 c10a3b0:	e28d00a7 	add	r0, sp, #167	; 0xa7
 c10a3b4:	e5840000 	str	r0, [r4]
 c10a3b8:	e3530007 	cmp	r3, #7
 c10a3bc:	e2822001 	add	r2, r2, #1
 c10a3c0:	e3a00001 	mov	r0, #1
 c10a3c4:	e5840004 	str	r0, [r4, #4]
 c10a3c8:	d1a04001 	movle	r4, r1
 c10a3cc:	e58d20a0 	str	r2, [sp, #160]	; 0xa0
 c10a3d0:	e58d309c 	str	r3, [sp, #156]	; 0x9c
 c10a3d4:	d2811008 	addle	r1, r1, #8
 c10a3d8:	ca000232 	bgt	c10aca8 <_svfiprintf_r+0xc8c>
 c10a3dc:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
 c10a3e0:	e3500000 	cmp	r0, #0
 c10a3e4:	0a00000b 	beq	c10a418 <_svfiprintf_r+0x3fc>
 c10a3e8:	e2833001 	add	r3, r3, #1
 c10a3ec:	e28d00a4 	add	r0, sp, #164	; 0xa4
 c10a3f0:	e5840000 	str	r0, [r4]
 c10a3f4:	e3530007 	cmp	r3, #7
 c10a3f8:	e2822002 	add	r2, r2, #2
 c10a3fc:	e3a00002 	mov	r0, #2
 c10a400:	e5840004 	str	r0, [r4, #4]
 c10a404:	d1a04001 	movle	r4, r1
 c10a408:	e58d20a0 	str	r2, [sp, #160]	; 0xa0
 c10a40c:	e58d309c 	str	r3, [sp, #156]	; 0x9c
 c10a410:	d2811008 	addle	r1, r1, #8
 c10a414:	ca00022f 	bgt	c10acd8 <_svfiprintf_r+0xcbc>
 c10a418:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
 c10a41c:	e3500080 	cmp	r0, #128	; 0x80
 c10a420:	0a0001c8 	beq	c10ab48 <_svfiprintf_r+0xb2c>
 c10a424:	e59d001c 	ldr	r0, [sp, #28]
 c10a428:	e59dc008 	ldr	ip, [sp, #8]
 c10a42c:	e06c7000 	rsb	r7, ip, r0
 c10a430:	e3570000 	cmp	r7, #0
 c10a434:	da000035 	ble	c10a510 <_svfiprintf_r+0x4f4>
 c10a438:	e3570010 	cmp	r7, #16
 c10a43c:	da0002e0 	ble	c10afc4 <_svfiprintf_r+0xfa8>
 c10a440:	e1a01004 	mov	r1, r4
 c10a444:	e59f8c58 	ldr	r8, [pc, #3160]	; c10b0a4 <_svfiprintf_r+0x1088>
 c10a448:	e3a0a010 	mov	sl, #16
 c10a44c:	e59d4018 	ldr	r4, [sp, #24]
 c10a450:	ea000002 	b	c10a460 <_svfiprintf_r+0x444>
 c10a454:	e2477010 	sub	r7, r7, #16
 c10a458:	e3570010 	cmp	r7, #16
 c10a45c:	da000015 	ble	c10a4b8 <_svfiprintf_r+0x49c>
 c10a460:	e2833001 	add	r3, r3, #1
 c10a464:	e3530007 	cmp	r3, #7
 c10a468:	e8810500 	stm	r1, {r8, sl}
 c10a46c:	e2822010 	add	r2, r2, #16
 c10a470:	d2811008 	addle	r1, r1, #8
 c10a474:	e58d20a0 	str	r2, [sp, #160]	; 0xa0
 c10a478:	e58d309c 	str	r3, [sp, #156]	; 0x9c
 c10a47c:	d2810008 	addle	r0, r1, #8
 c10a480:	dafffff3 	ble	c10a454 <_svfiprintf_r+0x438>
 c10a484:	e1a00004 	mov	r0, r4
 c10a488:	e1a01006 	mov	r1, r6
 c10a48c:	e28d2098 	add	r2, sp, #152	; 0x98
 c10a490:	ebfffe7a 	bl	c109e80 <__ssprint_r>
 c10a494:	e3500000 	cmp	r0, #0
 c10a498:	1a0001a1 	bne	c10ab24 <_svfiprintf_r+0xb08>
 c10a49c:	e2477010 	sub	r7, r7, #16
 c10a4a0:	e28d1030 	add	r1, sp, #48	; 0x30
 c10a4a4:	e3570010 	cmp	r7, #16
 c10a4a8:	e59d20a0 	ldr	r2, [sp, #160]	; 0xa0
 c10a4ac:	e59d309c 	ldr	r3, [sp, #156]	; 0x9c
 c10a4b0:	e2810008 	add	r0, r1, #8
 c10a4b4:	caffffe9 	bgt	c10a460 <_svfiprintf_r+0x444>
 c10a4b8:	e1a04001 	mov	r4, r1
 c10a4bc:	e2833001 	add	r3, r3, #1
 c10a4c0:	e3530007 	cmp	r3, #7
 c10a4c4:	e0822007 	add	r2, r2, r7
 c10a4c8:	e5848000 	str	r8, [r4]
 c10a4cc:	e5847004 	str	r7, [r4, #4]
 c10a4d0:	d2801008 	addle	r1, r0, #8
 c10a4d4:	e58d20a0 	str	r2, [sp, #160]	; 0xa0
 c10a4d8:	e58d309c 	str	r3, [sp, #156]	; 0x9c
 c10a4dc:	d1a04000 	movle	r4, r0
 c10a4e0:	da00000a 	ble	c10a510 <_svfiprintf_r+0x4f4>
 c10a4e4:	e59d0018 	ldr	r0, [sp, #24]
 c10a4e8:	e1a01006 	mov	r1, r6
 c10a4ec:	e28d2098 	add	r2, sp, #152	; 0x98
 c10a4f0:	ebfffe62 	bl	c109e80 <__ssprint_r>
 c10a4f4:	e3500000 	cmp	r0, #0
 c10a4f8:	1a000189 	bne	c10ab24 <_svfiprintf_r+0xb08>
 c10a4fc:	e28dc030 	add	ip, sp, #48	; 0x30
 c10a500:	e59d20a0 	ldr	r2, [sp, #160]	; 0xa0
 c10a504:	e59d309c 	ldr	r3, [sp, #156]	; 0x9c
 c10a508:	e28c1008 	add	r1, ip, #8
 c10a50c:	e1a0400c 	mov	r4, ip
 c10a510:	e59d0008 	ldr	r0, [sp, #8]
 c10a514:	e2833001 	add	r3, r3, #1
 c10a518:	e59dc020 	ldr	ip, [sp, #32]
 c10a51c:	e0822000 	add	r2, r2, r0
 c10a520:	e3530007 	cmp	r3, #7
 c10a524:	e584c000 	str	ip, [r4]
 c10a528:	e5840004 	str	r0, [r4, #4]
 c10a52c:	e58d20a0 	str	r2, [sp, #160]	; 0xa0
 c10a530:	e58d309c 	str	r3, [sp, #156]	; 0x9c
 c10a534:	ca0001bf 	bgt	c10ac38 <_svfiprintf_r+0xc1c>
 c10a538:	e31b0004 	tst	fp, #4
 c10a53c:	0a00002a 	beq	c10a5ec <_svfiprintf_r+0x5d0>
 c10a540:	e59d000c 	ldr	r0, [sp, #12]
 c10a544:	e0694000 	rsb	r4, r9, r0
 c10a548:	e3540000 	cmp	r4, #0
 c10a54c:	da000026 	ble	c10a5ec <_svfiprintf_r+0x5d0>
 c10a550:	e3540010 	cmp	r4, #16
 c10a554:	da0002cc 	ble	c10b08c <_svfiprintf_r+0x1070>
 c10a558:	e59d309c 	ldr	r3, [sp, #156]	; 0x9c
 c10a55c:	e59f8b44 	ldr	r8, [pc, #2884]	; c10b0a8 <_svfiprintf_r+0x108c>
 c10a560:	e3a07010 	mov	r7, #16
 c10a564:	e59da018 	ldr	sl, [sp, #24]
 c10a568:	ea000002 	b	c10a578 <_svfiprintf_r+0x55c>
 c10a56c:	e2444010 	sub	r4, r4, #16
 c10a570:	e3540010 	cmp	r4, #16
 c10a574:	da000014 	ble	c10a5cc <_svfiprintf_r+0x5b0>
 c10a578:	e2833001 	add	r3, r3, #1
 c10a57c:	e2822010 	add	r2, r2, #16
 c10a580:	e3530007 	cmp	r3, #7
 c10a584:	e5818000 	str	r8, [r1]
 c10a588:	e5817004 	str	r7, [r1, #4]
 c10a58c:	e58d20a0 	str	r2, [sp, #160]	; 0xa0
 c10a590:	e58d309c 	str	r3, [sp, #156]	; 0x9c
 c10a594:	d2811008 	addle	r1, r1, #8
 c10a598:	dafffff3 	ble	c10a56c <_svfiprintf_r+0x550>
 c10a59c:	e1a0000a 	mov	r0, sl
 c10a5a0:	e1a01006 	mov	r1, r6
 c10a5a4:	e28d2098 	add	r2, sp, #152	; 0x98
 c10a5a8:	ebfffe34 	bl	c109e80 <__ssprint_r>
 c10a5ac:	e3500000 	cmp	r0, #0
 c10a5b0:	1a00015b 	bne	c10ab24 <_svfiprintf_r+0xb08>
 c10a5b4:	e2444010 	sub	r4, r4, #16
 c10a5b8:	e3540010 	cmp	r4, #16
 c10a5bc:	e59d20a0 	ldr	r2, [sp, #160]	; 0xa0
 c10a5c0:	e59d309c 	ldr	r3, [sp, #156]	; 0x9c
 c10a5c4:	e28d1030 	add	r1, sp, #48	; 0x30
 c10a5c8:	caffffea 	bgt	c10a578 <_svfiprintf_r+0x55c>
 c10a5cc:	e2833001 	add	r3, r3, #1
 c10a5d0:	e0842002 	add	r2, r4, r2
 c10a5d4:	e3530007 	cmp	r3, #7
 c10a5d8:	e5818000 	str	r8, [r1]
 c10a5dc:	e5814004 	str	r4, [r1, #4]
 c10a5e0:	e58d20a0 	str	r2, [sp, #160]	; 0xa0
 c10a5e4:	e58d309c 	str	r3, [sp, #156]	; 0x9c
 c10a5e8:	ca00022f 	bgt	c10aeac <_svfiprintf_r+0xe90>
 c10a5ec:	e59d1010 	ldr	r1, [sp, #16]
 c10a5f0:	e59d300c 	ldr	r3, [sp, #12]
 c10a5f4:	e1590003 	cmp	r9, r3
 c10a5f8:	a0811009 	addge	r1, r1, r9
 c10a5fc:	b0811003 	addlt	r1, r1, r3
 c10a600:	e3520000 	cmp	r2, #0
 c10a604:	e58d1010 	str	r1, [sp, #16]
 c10a608:	1a000193 	bne	c10ac5c <_svfiprintf_r+0xc40>
 c10a60c:	e3a0c000 	mov	ip, #0
 c10a610:	e58dc09c 	str	ip, [sp, #156]	; 0x9c
 c10a614:	e5d53000 	ldrb	r3, [r5]
 c10a618:	e3530000 	cmp	r3, #0
 c10a61c:	13530025 	cmpne	r3, #37	; 0x25
 c10a620:	e28d4030 	add	r4, sp, #48	; 0x30
 c10a624:	1afffe94 	bne	c10a07c <_svfiprintf_r+0x60>
 c10a628:	e1a07005 	mov	r7, r5
 c10a62c:	eafffea8 	b	c10a0d4 <_svfiprintf_r+0xb8>
 c10a630:	e38bb010 	orr	fp, fp, #16
 c10a634:	e21b3020 	ands	r3, fp, #32
 c10a638:	0a0001d9 	beq	c10ada4 <_svfiprintf_r+0xd88>
 c10a63c:	e59dc014 	ldr	ip, [sp, #20]
 c10a640:	e28c3007 	add	r3, ip, #7
 c10a644:	e3c33007 	bic	r3, r3, #7
 c10a648:	e8930300 	ldm	r3, {r8, r9}
 c10a64c:	e2833008 	add	r3, r3, #8
 c10a650:	e1980009 	orrs	r0, r8, r9
 c10a654:	e58d3014 	str	r3, [sp, #20]
 c10a658:	03a02000 	moveq	r2, #0
 c10a65c:	13a02001 	movne	r2, #1
 c10a660:	e3a03000 	mov	r3, #0
 c10a664:	eaffff12 	b	c10a2b4 <_svfiprintf_r+0x298>
 c10a668:	e38bb010 	orr	fp, fp, #16
 c10a66c:	e31b0020 	tst	fp, #32
 c10a670:	0a0001e5 	beq	c10ae0c <_svfiprintf_r+0xdf0>
 c10a674:	e59dc014 	ldr	ip, [sp, #20]
 c10a678:	e28c3007 	add	r3, ip, #7
 c10a67c:	e3c33007 	bic	r3, r3, #7
 c10a680:	e2830008 	add	r0, r3, #8
 c10a684:	e58d0014 	str	r0, [sp, #20]
 c10a688:	e8930300 	ldm	r3, {r8, r9}
 c10a68c:	e3580000 	cmp	r8, #0
 c10a690:	e2d9c000 	sbcs	ip, r9, #0
 c10a694:	ba0001e6 	blt	c10ae34 <_svfiprintf_r+0xe18>
 c10a698:	e1980009 	orrs	r0, r8, r9
 c10a69c:	03a02000 	moveq	r2, #0
 c10a6a0:	13a02001 	movne	r2, #1
 c10a6a4:	e35a0000 	cmp	sl, #0
 c10a6a8:	a3cbb080 	bicge	fp, fp, #128	; 0x80
 c10a6ac:	e35a0000 	cmp	sl, #0
 c10a6b0:	13822001 	orrne	r2, r2, #1
 c10a6b4:	e3520000 	cmp	r2, #0
 c10a6b8:	e3a03001 	mov	r3, #1
 c10a6bc:	1affff04 	bne	c10a2d4 <_svfiprintf_r+0x2b8>
 c10a6c0:	e3530000 	cmp	r3, #0
 c10a6c4:	1a00016b 	bne	c10ac78 <_svfiprintf_r+0xc5c>
 c10a6c8:	e31b0001 	tst	fp, #1
 c10a6cc:	0a0001b0 	beq	c10ad94 <_svfiprintf_r+0xd78>
 c10a6d0:	e3a03030 	mov	r3, #48	; 0x30
 c10a6d4:	e5cd3097 	strb	r3, [sp, #151]	; 0x97
 c10a6d8:	e3a02001 	mov	r2, #1
 c10a6dc:	e28d3097 	add	r3, sp, #151	; 0x97
 c10a6e0:	e58d2008 	str	r2, [sp, #8]
 c10a6e4:	e58d3020 	str	r3, [sp, #32]
 c10a6e8:	eaffff1b 	b	c10a35c <_svfiprintf_r+0x340>
 c10a6ec:	e59d3014 	ldr	r3, [sp, #20]
 c10a6f0:	e5933000 	ldr	r3, [r3]
 c10a6f4:	e59dc014 	ldr	ip, [sp, #20]
 c10a6f8:	e3530000 	cmp	r3, #0
 c10a6fc:	e58d300c 	str	r3, [sp, #12]
 c10a700:	e28c2004 	add	r2, ip, #4
 c10a704:	aa0001e5 	bge	c10aea0 <_svfiprintf_r+0xe84>
 c10a708:	e59d300c 	ldr	r3, [sp, #12]
 c10a70c:	e2633000 	rsb	r3, r3, #0
 c10a710:	e58d300c 	str	r3, [sp, #12]
 c10a714:	e58d2014 	str	r2, [sp, #20]
 c10a718:	e38bb004 	orr	fp, fp, #4
 c10a71c:	e5d53000 	ldrb	r3, [r5]
 c10a720:	eafffe78 	b	c10a108 <_svfiprintf_r+0xec>
 c10a724:	e3a0c000 	mov	ip, #0
 c10a728:	e59d3014 	ldr	r3, [sp, #20]
 c10a72c:	e5cdc0a7 	strb	ip, [sp, #167]	; 0xa7
 c10a730:	e59d0014 	ldr	r0, [sp, #20]
 c10a734:	e5933000 	ldr	r3, [r3]
 c10a738:	e2800004 	add	r0, r0, #4
 c10a73c:	e3530000 	cmp	r3, #0
 c10a740:	e58d3020 	str	r3, [sp, #32]
 c10a744:	e58d0014 	str	r0, [sp, #20]
 c10a748:	0a000248 	beq	c10b070 <_svfiprintf_r+0x1054>
 c10a74c:	e35a0000 	cmp	sl, #0
 c10a750:	ba00020e 	blt	c10af90 <_svfiprintf_r+0xf74>
 c10a754:	e59d0020 	ldr	r0, [sp, #32]
 c10a758:	e3a01000 	mov	r1, #0
 c10a75c:	e1a0200a 	mov	r2, sl
 c10a760:	ebfff8fd 	bl	c108b5c <memchr>
 c10a764:	e3500000 	cmp	r0, #0
 c10a768:	058da008 	streq	sl, [sp, #8]
 c10a76c:	058d001c 	streq	r0, [sp, #28]
 c10a770:	0afffefa 	beq	c10a360 <_svfiprintf_r+0x344>
 c10a774:	e59d2020 	ldr	r2, [sp, #32]
 c10a778:	e0620000 	rsb	r0, r2, r0
 c10a77c:	e150000a 	cmp	r0, sl
 c10a780:	c3a0c000 	movgt	ip, #0
 c10a784:	e58d0008 	str	r0, [sp, #8]
 c10a788:	c58dc01c 	strgt	ip, [sp, #28]
 c10a78c:	c58da008 	strgt	sl, [sp, #8]
 c10a790:	d3a03000 	movle	r3, #0
 c10a794:	d58d301c 	strle	r3, [sp, #28]
 c10a798:	eafffef0 	b	c10a360 <_svfiprintf_r+0x344>
 c10a79c:	e38bb020 	orr	fp, fp, #32
 c10a7a0:	e5d53000 	ldrb	r3, [r5]
 c10a7a4:	eafffe57 	b	c10a108 <_svfiprintf_r+0xec>
 c10a7a8:	e59d3014 	ldr	r3, [sp, #20]
 c10a7ac:	e5932000 	ldr	r2, [r3]
 c10a7b0:	e2831004 	add	r1, r3, #4
 c10a7b4:	e3a03030 	mov	r3, #48	; 0x30
 c10a7b8:	e5cd30a4 	strb	r3, [sp, #164]	; 0xa4
 c10a7bc:	e3a03078 	mov	r3, #120	; 0x78
 c10a7c0:	e5cd30a5 	strb	r3, [sp, #165]	; 0xa5
 c10a7c4:	e59f38e0 	ldr	r3, [pc, #2272]	; c10b0ac <_svfiprintf_r+0x1090>
 c10a7c8:	e1a08002 	mov	r8, r2
 c10a7cc:	e3a09000 	mov	r9, #0
 c10a7d0:	e2522000 	subs	r2, r2, #0
 c10a7d4:	e58d302c 	str	r3, [sp, #44]	; 0x2c
 c10a7d8:	e58d1014 	str	r1, [sp, #20]
 c10a7dc:	e38bb002 	orr	fp, fp, #2
 c10a7e0:	13a02001 	movne	r2, #1
 c10a7e4:	e3a03002 	mov	r3, #2
 c10a7e8:	eafffeb1 	b	c10a2b4 <_svfiprintf_r+0x298>
 c10a7ec:	e5d53000 	ldrb	r3, [r5]
 c10a7f0:	e353006c 	cmp	r3, #108	; 0x6c
 c10a7f4:	038bb020 	orreq	fp, fp, #32
 c10a7f8:	05f53001 	ldrbeq	r3, [r5, #1]!
 c10a7fc:	138bb010 	orrne	fp, fp, #16
 c10a800:	eafffe40 	b	c10a108 <_svfiprintf_r+0xec>
 c10a804:	e38bb040 	orr	fp, fp, #64	; 0x40
 c10a808:	e5d53000 	ldrb	r3, [r5]
 c10a80c:	eafffe3d 	b	c10a108 <_svfiprintf_r+0xec>
 c10a810:	e31b0020 	tst	fp, #32
 c10a814:	1a0001c8 	bne	c10af3c <_svfiprintf_r+0xf20>
 c10a818:	e31b0010 	tst	fp, #16
 c10a81c:	1a0001e1 	bne	c10afa8 <_svfiprintf_r+0xf8c>
 c10a820:	e31b0040 	tst	fp, #64	; 0x40
 c10a824:	0a0001df 	beq	c10afa8 <_svfiprintf_r+0xf8c>
 c10a828:	e28d0010 	add	r0, sp, #16
 c10a82c:	e8901001 	ldm	r0, {r0, ip}
 c10a830:	e59c3000 	ldr	r3, [ip]
 c10a834:	e28cc004 	add	ip, ip, #4
 c10a838:	e58dc014 	str	ip, [sp, #20]
 c10a83c:	e1c300b0 	strh	r0, [r3]
 c10a840:	eafffe09 	b	c10a06c <_svfiprintf_r+0x50>
 c10a844:	e59f2864 	ldr	r2, [pc, #2148]	; c10b0b0 <_svfiprintf_r+0x1094>
 c10a848:	e31b0020 	tst	fp, #32
 c10a84c:	e58d202c 	str	r2, [sp, #44]	; 0x2c
 c10a850:	0a000082 	beq	c10aa60 <_svfiprintf_r+0xa44>
 c10a854:	e59dc014 	ldr	ip, [sp, #20]
 c10a858:	e28c2007 	add	r2, ip, #7
 c10a85c:	e3c22007 	bic	r2, r2, #7
 c10a860:	e2820008 	add	r0, r2, #8
 c10a864:	e58d0014 	str	r0, [sp, #20]
 c10a868:	e8920300 	ldm	r2, {r8, r9}
 c10a86c:	e1980009 	orrs	r0, r8, r9
 c10a870:	03a02000 	moveq	r2, #0
 c10a874:	13a02001 	movne	r2, #1
 c10a878:	e11b0002 	tst	fp, r2
 c10a87c:	13a02030 	movne	r2, #48	; 0x30
 c10a880:	15cd20a4 	strbne	r2, [sp, #164]	; 0xa4
 c10a884:	15cd30a5 	strbne	r3, [sp, #165]	; 0xa5
 c10a888:	138bb002 	orrne	fp, fp, #2
 c10a88c:	13a02001 	movne	r2, #1
 c10a890:	e3a03002 	mov	r3, #2
 c10a894:	eafffe86 	b	c10a2b4 <_svfiprintf_r+0x298>
 c10a898:	e59d0014 	ldr	r0, [sp, #20]
 c10a89c:	e59d3014 	ldr	r3, [sp, #20]
 c10a8a0:	e2800004 	add	r0, r0, #4
 c10a8a4:	e5933000 	ldr	r3, [r3]
 c10a8a8:	e58d0014 	str	r0, [sp, #20]
 c10a8ac:	e3a09001 	mov	r9, #1
 c10a8b0:	e3a01000 	mov	r1, #0
 c10a8b4:	e28d2070 	add	r2, sp, #112	; 0x70
 c10a8b8:	e5cd3070 	strb	r3, [sp, #112]	; 0x70
 c10a8bc:	e5cd10a7 	strb	r1, [sp, #167]	; 0xa7
 c10a8c0:	e58d9008 	str	r9, [sp, #8]
 c10a8c4:	e58d2020 	str	r2, [sp, #32]
 c10a8c8:	e3a01000 	mov	r1, #0
 c10a8cc:	e58d101c 	str	r1, [sp, #28]
 c10a8d0:	e21b1002 	ands	r1, fp, #2
 c10a8d4:	12899002 	addne	r9, r9, #2
 c10a8d8:	e21b2084 	ands	r2, fp, #132	; 0x84
 c10a8dc:	e58d1024 	str	r1, [sp, #36]	; 0x24
 c10a8e0:	e58d2028 	str	r2, [sp, #40]	; 0x28
 c10a8e4:	1afffeaa 	bne	c10a394 <_svfiprintf_r+0x378>
 c10a8e8:	e59d300c 	ldr	r3, [sp, #12]
 c10a8ec:	e0697003 	rsb	r7, r9, r3
 c10a8f0:	e3570000 	cmp	r7, #0
 c10a8f4:	dafffea6 	ble	c10a394 <_svfiprintf_r+0x378>
 c10a8f8:	e3570010 	cmp	r7, #16
 c10a8fc:	da0001d0 	ble	c10b044 <_svfiprintf_r+0x1028>
 c10a900:	e1a01004 	mov	r1, r4
 c10a904:	e59d20a0 	ldr	r2, [sp, #160]	; 0xa0
 c10a908:	e59d309c 	ldr	r3, [sp, #156]	; 0x9c
 c10a90c:	e59f8794 	ldr	r8, [pc, #1940]	; c10b0a8 <_svfiprintf_r+0x108c>
 c10a910:	e3a0a010 	mov	sl, #16
 c10a914:	e59d4018 	ldr	r4, [sp, #24]
 c10a918:	ea000002 	b	c10a928 <_svfiprintf_r+0x90c>
 c10a91c:	e2477010 	sub	r7, r7, #16
 c10a920:	e3570010 	cmp	r7, #16
 c10a924:	da000016 	ble	c10a984 <_svfiprintf_r+0x968>
 c10a928:	e2833001 	add	r3, r3, #1
 c10a92c:	e3530007 	cmp	r3, #7
 c10a930:	e8810500 	stm	r1, {r8, sl}
 c10a934:	e2822010 	add	r2, r2, #16
 c10a938:	d2811008 	addle	r1, r1, #8
 c10a93c:	e58d20a0 	str	r2, [sp, #160]	; 0xa0
 c10a940:	e58d309c 	str	r3, [sp, #156]	; 0x9c
 c10a944:	d2810008 	addle	r0, r1, #8
 c10a948:	dafffff3 	ble	c10a91c <_svfiprintf_r+0x900>
 c10a94c:	e1a00004 	mov	r0, r4
 c10a950:	e1a01006 	mov	r1, r6
 c10a954:	e28d2098 	add	r2, sp, #152	; 0x98
 c10a958:	ebfffd48 	bl	c109e80 <__ssprint_r>
 c10a95c:	e3500000 	cmp	r0, #0
 c10a960:	1a00006f 	bne	c10ab24 <_svfiprintf_r+0xb08>
 c10a964:	e2477010 	sub	r7, r7, #16
 c10a968:	e28dc030 	add	ip, sp, #48	; 0x30
 c10a96c:	e3570010 	cmp	r7, #16
 c10a970:	e59d20a0 	ldr	r2, [sp, #160]	; 0xa0
 c10a974:	e59d309c 	ldr	r3, [sp, #156]	; 0x9c
 c10a978:	e28c0008 	add	r0, ip, #8
 c10a97c:	e1a0100c 	mov	r1, ip
 c10a980:	caffffe8 	bgt	c10a928 <_svfiprintf_r+0x90c>
 c10a984:	e1a04001 	mov	r4, r1
 c10a988:	e2833001 	add	r3, r3, #1
 c10a98c:	e0822007 	add	r2, r2, r7
 c10a990:	e3530007 	cmp	r3, #7
 c10a994:	e5848000 	str	r8, [r4]
 c10a998:	e5847004 	str	r7, [r4, #4]
 c10a99c:	e58d20a0 	str	r2, [sp, #160]	; 0xa0
 c10a9a0:	e58d309c 	str	r3, [sp, #156]	; 0x9c
 c10a9a4:	ca00012b 	bgt	c10ae58 <_svfiprintf_r+0xe3c>
 c10a9a8:	e2801008 	add	r1, r0, #8
 c10a9ac:	e1a04000 	mov	r4, r0
 c10a9b0:	eafffe7a 	b	c10a3a0 <_svfiprintf_r+0x384>
 c10a9b4:	e38bb001 	orr	fp, fp, #1
 c10a9b8:	e5d53000 	ldrb	r3, [r5]
 c10a9bc:	eafffdd1 	b	c10a108 <_svfiprintf_r+0xec>
 c10a9c0:	e1a0c005 	mov	ip, r5
 c10a9c4:	e3a02000 	mov	r2, #0
 c10a9c8:	e2435030 	sub	r5, r3, #48	; 0x30
 c10a9cc:	e4dc3001 	ldrb	r3, [ip], #1
 c10a9d0:	e2437030 	sub	r7, r3, #48	; 0x30
 c10a9d4:	e0822102 	add	r2, r2, r2, lsl #2
 c10a9d8:	e3570009 	cmp	r7, #9
 c10a9dc:	e0852082 	add	r2, r5, r2, lsl #1
 c10a9e0:	e1a0500c 	mov	r5, ip
 c10a9e4:	9afffff7 	bls	c10a9c8 <_svfiprintf_r+0x9ac>
 c10a9e8:	e58d200c 	str	r2, [sp, #12]
 c10a9ec:	eafffdc6 	b	c10a10c <_svfiprintf_r+0xf0>
 c10a9f0:	e38bb080 	orr	fp, fp, #128	; 0x80
 c10a9f4:	e5d53000 	ldrb	r3, [r5]
 c10a9f8:	eafffdc2 	b	c10a108 <_svfiprintf_r+0xec>
 c10a9fc:	e5cd10a7 	strb	r1, [sp, #167]	; 0xa7
 c10aa00:	e5d53000 	ldrb	r3, [r5]
 c10aa04:	eafffdbf 	b	c10a108 <_svfiprintf_r+0xec>
 c10aa08:	e4d53001 	ldrb	r3, [r5], #1
 c10aa0c:	e353002a 	cmp	r3, #42	; 0x2a
 c10aa10:	0a00011a 	beq	c10ae80 <_svfiprintf_r+0xe64>
 c10aa14:	e2432030 	sub	r2, r3, #48	; 0x30
 c10aa18:	e3520009 	cmp	r2, #9
 c10aa1c:	83a0a000 	movhi	sl, #0
 c10aa20:	8a000008 	bhi	c10aa48 <_svfiprintf_r+0xa2c>
 c10aa24:	e1a0c005 	mov	ip, r5
 c10aa28:	e3a0a000 	mov	sl, #0
 c10aa2c:	e4dc3001 	ldrb	r3, [ip], #1
 c10aa30:	e08aa10a 	add	sl, sl, sl, lsl #2
 c10aa34:	e082a08a 	add	sl, r2, sl, lsl #1
 c10aa38:	e2432030 	sub	r2, r3, #48	; 0x30
 c10aa3c:	e3520009 	cmp	r2, #9
 c10aa40:	e1a0500c 	mov	r5, ip
 c10aa44:	9afffff8 	bls	c10aa2c <_svfiprintf_r+0xa10>
 c10aa48:	e18aafca 	orr	sl, sl, sl, asr #31
 c10aa4c:	eafffdae 	b	c10a10c <_svfiprintf_r+0xf0>
 c10aa50:	e59f1654 	ldr	r1, [pc, #1620]	; c10b0ac <_svfiprintf_r+0x1090>
 c10aa54:	e31b0020 	tst	fp, #32
 c10aa58:	e58d102c 	str	r1, [sp, #44]	; 0x2c
 c10aa5c:	1affff7c 	bne	c10a854 <_svfiprintf_r+0x838>
 c10aa60:	e31b0010 	tst	fp, #16
 c10aa64:	0a00013e 	beq	c10af64 <_svfiprintf_r+0xf48>
 c10aa68:	e59d1014 	ldr	r1, [sp, #20]
 c10aa6c:	e5918000 	ldr	r8, [r1]
 c10aa70:	e2811004 	add	r1, r1, #4
 c10aa74:	e58d1014 	str	r1, [sp, #20]
 c10aa78:	e3a09000 	mov	r9, #0
 c10aa7c:	eaffff7a 	b	c10a86c <_svfiprintf_r+0x850>
 c10aa80:	e3530000 	cmp	r3, #0
 c10aa84:	0a000020 	beq	c10ab0c <_svfiprintf_r+0xaf0>
 c10aa88:	e3a09001 	mov	r9, #1
 c10aa8c:	eaffff87 	b	c10a8b0 <_svfiprintf_r+0x894>
 c10aa90:	e5dd30a7 	ldrb	r3, [sp, #167]	; 0xa7
 c10aa94:	e3530000 	cmp	r3, #0
 c10aa98:	15d53000 	ldrbne	r3, [r5]
 c10aa9c:	05cd00a7 	strbeq	r0, [sp, #167]	; 0xa7
 c10aaa0:	05d53000 	ldrbeq	r3, [r5]
 c10aaa4:	eafffd97 	b	c10a108 <_svfiprintf_r+0xec>
 c10aaa8:	e28d3070 	add	r3, sp, #112	; 0x70
 c10aaac:	e58d3008 	str	r3, [sp, #8]
 c10aab0:	e59d702c 	ldr	r7, [sp, #44]	; 0x2c
 c10aab4:	e2833027 	add	r3, r3, #39	; 0x27
 c10aab8:	e1a01003 	mov	r1, r3
 c10aabc:	e1a00229 	lsr	r0, r9, #4
 c10aac0:	e1a0c228 	lsr	ip, r8, #4
 c10aac4:	e18cce09 	orr	ip, ip, r9, lsl #28
 c10aac8:	e1a03000 	mov	r3, r0
 c10aacc:	e208800f 	and	r8, r8, #15
 c10aad0:	e7d70008 	ldrb	r0, [r7, r8]
 c10aad4:	e1a09003 	mov	r9, r3
 c10aad8:	e1a0800c 	mov	r8, ip
 c10aadc:	e198c009 	orrs	ip, r8, r9
 c10aae0:	e1a03001 	mov	r3, r1
 c10aae4:	e5c10000 	strb	r0, [r1]
 c10aae8:	e2411001 	sub	r1, r1, #1
 c10aaec:	1afffff2 	bne	c10aabc <_svfiprintf_r+0xaa0>
 c10aaf0:	e58d3020 	str	r3, [sp, #32]
 c10aaf4:	e59d0008 	ldr	r0, [sp, #8]
 c10aaf8:	e59d1020 	ldr	r1, [sp, #32]
 c10aafc:	e2803028 	add	r3, r0, #40	; 0x28
 c10ab00:	e0613003 	rsb	r3, r1, r3
 c10ab04:	e58d3008 	str	r3, [sp, #8]
 c10ab08:	eafffe13 	b	c10a35c <_svfiprintf_r+0x340>
 c10ab0c:	e59d30a0 	ldr	r3, [sp, #160]	; 0xa0
 c10ab10:	e3530000 	cmp	r3, #0
 c10ab14:	159d0018 	ldrne	r0, [sp, #24]
 c10ab18:	11a01006 	movne	r1, r6
 c10ab1c:	128d2098 	addne	r2, sp, #152	; 0x98
 c10ab20:	1bfffcd6 	blne	c109e80 <__ssprint_r>
 c10ab24:	e1d630bc 	ldrh	r3, [r6, #12]
 c10ab28:	e59d0010 	ldr	r0, [sp, #16]
 c10ab2c:	e3130040 	tst	r3, #64	; 0x40
 c10ab30:	13e00000 	mvnne	r0, #0
 c10ab34:	e58d0010 	str	r0, [sp, #16]
 c10ab38:	e59d0010 	ldr	r0, [sp, #16]
 c10ab3c:	e28dd0ac 	add	sp, sp, #172	; 0xac
 c10ab40:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 c10ab44:	e12fff1e 	bx	lr
 c10ab48:	e59dc00c 	ldr	ip, [sp, #12]
 c10ab4c:	e069700c 	rsb	r7, r9, ip
 c10ab50:	e3570000 	cmp	r7, #0
 c10ab54:	d2841008 	addle	r1, r4, #8
 c10ab58:	dafffe31 	ble	c10a424 <_svfiprintf_r+0x408>
 c10ab5c:	e3570010 	cmp	r7, #16
 c10ab60:	da00014c 	ble	c10b098 <_svfiprintf_r+0x107c>
 c10ab64:	e1a01004 	mov	r1, r4
 c10ab68:	e59f8534 	ldr	r8, [pc, #1332]	; c10b0a4 <_svfiprintf_r+0x1088>
 c10ab6c:	e3a0a010 	mov	sl, #16
 c10ab70:	e59d4018 	ldr	r4, [sp, #24]
 c10ab74:	ea000002 	b	c10ab84 <_svfiprintf_r+0xb68>
 c10ab78:	e2477010 	sub	r7, r7, #16
 c10ab7c:	e3570010 	cmp	r7, #16
 c10ab80:	da000015 	ble	c10abdc <_svfiprintf_r+0xbc0>
 c10ab84:	e2833001 	add	r3, r3, #1
 c10ab88:	e3530007 	cmp	r3, #7
 c10ab8c:	e8810500 	stm	r1, {r8, sl}
 c10ab90:	e2822010 	add	r2, r2, #16
 c10ab94:	d2811008 	addle	r1, r1, #8
 c10ab98:	e58d20a0 	str	r2, [sp, #160]	; 0xa0
 c10ab9c:	e58d309c 	str	r3, [sp, #156]	; 0x9c
 c10aba0:	d2810008 	addle	r0, r1, #8
 c10aba4:	dafffff3 	ble	c10ab78 <_svfiprintf_r+0xb5c>
 c10aba8:	e1a00004 	mov	r0, r4
 c10abac:	e1a01006 	mov	r1, r6
 c10abb0:	e28d2098 	add	r2, sp, #152	; 0x98
 c10abb4:	ebfffcb1 	bl	c109e80 <__ssprint_r>
 c10abb8:	e3500000 	cmp	r0, #0
 c10abbc:	1affffd8 	bne	c10ab24 <_svfiprintf_r+0xb08>
 c10abc0:	e2477010 	sub	r7, r7, #16
 c10abc4:	e28d1030 	add	r1, sp, #48	; 0x30
 c10abc8:	e3570010 	cmp	r7, #16
 c10abcc:	e59d20a0 	ldr	r2, [sp, #160]	; 0xa0
 c10abd0:	e59d309c 	ldr	r3, [sp, #156]	; 0x9c
 c10abd4:	e2810008 	add	r0, r1, #8
 c10abd8:	caffffe9 	bgt	c10ab84 <_svfiprintf_r+0xb68>
 c10abdc:	e1a04001 	mov	r4, r1
 c10abe0:	e2833001 	add	r3, r3, #1
 c10abe4:	e3530007 	cmp	r3, #7
 c10abe8:	e0822007 	add	r2, r2, r7
 c10abec:	e5848000 	str	r8, [r4]
 c10abf0:	e5847004 	str	r7, [r4, #4]
 c10abf4:	d2801008 	addle	r1, r0, #8
 c10abf8:	e58d20a0 	str	r2, [sp, #160]	; 0xa0
 c10abfc:	e58d309c 	str	r3, [sp, #156]	; 0x9c
 c10ac00:	d1a04000 	movle	r4, r0
 c10ac04:	dafffe06 	ble	c10a424 <_svfiprintf_r+0x408>
 c10ac08:	e59d0018 	ldr	r0, [sp, #24]
 c10ac0c:	e1a01006 	mov	r1, r6
 c10ac10:	e28d2098 	add	r2, sp, #152	; 0x98
 c10ac14:	ebfffc99 	bl	c109e80 <__ssprint_r>
 c10ac18:	e3500000 	cmp	r0, #0
 c10ac1c:	1affffc0 	bne	c10ab24 <_svfiprintf_r+0xb08>
 c10ac20:	e28dc030 	add	ip, sp, #48	; 0x30
 c10ac24:	e59d20a0 	ldr	r2, [sp, #160]	; 0xa0
 c10ac28:	e59d309c 	ldr	r3, [sp, #156]	; 0x9c
 c10ac2c:	e28c1008 	add	r1, ip, #8
 c10ac30:	e1a0400c 	mov	r4, ip
 c10ac34:	eafffdfa 	b	c10a424 <_svfiprintf_r+0x408>
 c10ac38:	e59d0018 	ldr	r0, [sp, #24]
 c10ac3c:	e1a01006 	mov	r1, r6
 c10ac40:	e28d2098 	add	r2, sp, #152	; 0x98
 c10ac44:	ebfffc8d 	bl	c109e80 <__ssprint_r>
 c10ac48:	e3500000 	cmp	r0, #0
 c10ac4c:	1affffb4 	bne	c10ab24 <_svfiprintf_r+0xb08>
 c10ac50:	e59d20a0 	ldr	r2, [sp, #160]	; 0xa0
 c10ac54:	e28d1030 	add	r1, sp, #48	; 0x30
 c10ac58:	eafffe36 	b	c10a538 <_svfiprintf_r+0x51c>
 c10ac5c:	e59d0018 	ldr	r0, [sp, #24]
 c10ac60:	e1a01006 	mov	r1, r6
 c10ac64:	e28d2098 	add	r2, sp, #152	; 0x98
 c10ac68:	ebfffc84 	bl	c109e80 <__ssprint_r>
 c10ac6c:	e3500000 	cmp	r0, #0
 c10ac70:	0afffe65 	beq	c10a60c <_svfiprintf_r+0x5f0>
 c10ac74:	eaffffaa 	b	c10ab24 <_svfiprintf_r+0xb08>
 c10ac78:	e28dc098 	add	ip, sp, #152	; 0x98
 c10ac7c:	e58d2008 	str	r2, [sp, #8]
 c10ac80:	e58dc020 	str	ip, [sp, #32]
 c10ac84:	eafffdb4 	b	c10a35c <_svfiprintf_r+0x340>
 c10ac88:	e59d0018 	ldr	r0, [sp, #24]
 c10ac8c:	e1a01006 	mov	r1, r6
 c10ac90:	e28d2098 	add	r2, sp, #152	; 0x98
 c10ac94:	ebfffc79 	bl	c109e80 <__ssprint_r>
 c10ac98:	e3500000 	cmp	r0, #0
 c10ac9c:	1affffa0 	bne	c10ab24 <_svfiprintf_r+0xb08>
 c10aca0:	e28d4030 	add	r4, sp, #48	; 0x30
 c10aca4:	eafffd07 	b	c10a0c8 <_svfiprintf_r+0xac>
 c10aca8:	e59d0018 	ldr	r0, [sp, #24]
 c10acac:	e1a01006 	mov	r1, r6
 c10acb0:	e28d2098 	add	r2, sp, #152	; 0x98
 c10acb4:	ebfffc71 	bl	c109e80 <__ssprint_r>
 c10acb8:	e3500000 	cmp	r0, #0
 c10acbc:	1affff98 	bne	c10ab24 <_svfiprintf_r+0xb08>
 c10acc0:	e28dc030 	add	ip, sp, #48	; 0x30
 c10acc4:	e59d20a0 	ldr	r2, [sp, #160]	; 0xa0
 c10acc8:	e59d309c 	ldr	r3, [sp, #156]	; 0x9c
 c10accc:	e28c1008 	add	r1, ip, #8
 c10acd0:	e1a0400c 	mov	r4, ip
 c10acd4:	eafffdc0 	b	c10a3dc <_svfiprintf_r+0x3c0>
 c10acd8:	e59d0018 	ldr	r0, [sp, #24]
 c10acdc:	e1a01006 	mov	r1, r6
 c10ace0:	e28d2098 	add	r2, sp, #152	; 0x98
 c10ace4:	ebfffc65 	bl	c109e80 <__ssprint_r>
 c10ace8:	e3500000 	cmp	r0, #0
 c10acec:	1affff8c 	bne	c10ab24 <_svfiprintf_r+0xb08>
 c10acf0:	e28dc030 	add	ip, sp, #48	; 0x30
 c10acf4:	e59d20a0 	ldr	r2, [sp, #160]	; 0xa0
 c10acf8:	e59d309c 	ldr	r3, [sp, #156]	; 0x9c
 c10acfc:	e28c1008 	add	r1, ip, #8
 c10ad00:	e1a0400c 	mov	r4, ip
 c10ad04:	eafffdc3 	b	c10a418 <_svfiprintf_r+0x3fc>
 c10ad08:	e3590000 	cmp	r9, #0
 c10ad0c:	03580009 	cmpeq	r8, #9
 c10ad10:	9a00006d 	bls	c10aecc <_svfiprintf_r+0xeb0>
 c10ad14:	e28dc070 	add	ip, sp, #112	; 0x70
 c10ad18:	e58dc008 	str	ip, [sp, #8]
 c10ad1c:	e58d501c 	str	r5, [sp, #28]
 c10ad20:	e28c7027 	add	r7, ip, #39	; 0x27
 c10ad24:	e1a05004 	mov	r5, r4
 c10ad28:	e1a00008 	mov	r0, r8
 c10ad2c:	e1a01009 	mov	r1, r9
 c10ad30:	e3a0200a 	mov	r2, #10
 c10ad34:	e3a03000 	mov	r3, #0
 c10ad38:	eb0004d8 	bl	c10c0a0 <__aeabi_uldivmod>
 c10ad3c:	e2822030 	add	r2, r2, #48	; 0x30
 c10ad40:	e5c72000 	strb	r2, [r7]
 c10ad44:	e1a00008 	mov	r0, r8
 c10ad48:	e1a01009 	mov	r1, r9
 c10ad4c:	e3a0200a 	mov	r2, #10
 c10ad50:	e3a03000 	mov	r3, #0
 c10ad54:	eb0004d1 	bl	c10c0a0 <__aeabi_uldivmod>
 c10ad58:	e1a08000 	mov	r8, r0
 c10ad5c:	e1a09001 	mov	r9, r1
 c10ad60:	e1980009 	orrs	r0, r8, r9
 c10ad64:	e1a04007 	mov	r4, r7
 c10ad68:	e2477001 	sub	r7, r7, #1
 c10ad6c:	1affffed 	bne	c10ad28 <_svfiprintf_r+0xd0c>
 c10ad70:	e58d4020 	str	r4, [sp, #32]
 c10ad74:	e59d1008 	ldr	r1, [sp, #8]
 c10ad78:	e59d2020 	ldr	r2, [sp, #32]
 c10ad7c:	e2813028 	add	r3, r1, #40	; 0x28
 c10ad80:	e0623003 	rsb	r3, r2, r3
 c10ad84:	e1a04005 	mov	r4, r5
 c10ad88:	e58d3008 	str	r3, [sp, #8]
 c10ad8c:	e59d501c 	ldr	r5, [sp, #28]
 c10ad90:	eafffd71 	b	c10a35c <_svfiprintf_r+0x340>
 c10ad94:	e28d0098 	add	r0, sp, #152	; 0x98
 c10ad98:	e58d3008 	str	r3, [sp, #8]
 c10ad9c:	e58d0020 	str	r0, [sp, #32]
 c10ada0:	eafffd6d 	b	c10a35c <_svfiprintf_r+0x340>
 c10ada4:	e21b1010 	ands	r1, fp, #16
 c10ada8:	0a000052 	beq	c10aef8 <_svfiprintf_r+0xedc>
 c10adac:	e59d1014 	ldr	r1, [sp, #20]
 c10adb0:	e5912000 	ldr	r2, [r1]
 c10adb4:	e1a08002 	mov	r8, r2
 c10adb8:	e3a09000 	mov	r9, #0
 c10adbc:	e2811004 	add	r1, r1, #4
 c10adc0:	e2522000 	subs	r2, r2, #0
 c10adc4:	13a02001 	movne	r2, #1
 c10adc8:	e58d1014 	str	r1, [sp, #20]
 c10adcc:	eafffd38 	b	c10a2b4 <_svfiprintf_r+0x298>
 c10add0:	e31b0010 	tst	fp, #16
 c10add4:	1a000043 	bne	c10aee8 <_svfiprintf_r+0xecc>
 c10add8:	e31b0040 	tst	fp, #64	; 0x40
 c10addc:	0a000084 	beq	c10aff4 <_svfiprintf_r+0xfd8>
 c10ade0:	e59d3014 	ldr	r3, [sp, #20]
 c10ade4:	e1d320b0 	ldrh	r2, [r3]
 c10ade8:	e3a03001 	mov	r3, #1
 c10adec:	e59dc014 	ldr	ip, [sp, #20]
 c10adf0:	e1a08002 	mov	r8, r2
 c10adf4:	e3a09000 	mov	r9, #0
 c10adf8:	e28cc004 	add	ip, ip, #4
 c10adfc:	e2522000 	subs	r2, r2, #0
 c10ae00:	13a02001 	movne	r2, #1
 c10ae04:	e58dc014 	str	ip, [sp, #20]
 c10ae08:	eafffd29 	b	c10a2b4 <_svfiprintf_r+0x298>
 c10ae0c:	e31b0010 	tst	fp, #16
 c10ae10:	0a00003e 	beq	c10af10 <_svfiprintf_r+0xef4>
 c10ae14:	e59d1014 	ldr	r1, [sp, #20]
 c10ae18:	e5918000 	ldr	r8, [r1]
 c10ae1c:	e1a09fc8 	asr	r9, r8, #31
 c10ae20:	e2811004 	add	r1, r1, #4
 c10ae24:	e3580000 	cmp	r8, #0
 c10ae28:	e2d9c000 	sbcs	ip, r9, #0
 c10ae2c:	e58d1014 	str	r1, [sp, #20]
 c10ae30:	aafffe18 	bge	c10a698 <_svfiprintf_r+0x67c>
 c10ae34:	e2788000 	rsbs	r8, r8, #0
 c10ae38:	e2e99000 	rsc	r9, r9, #0
 c10ae3c:	e3a0302d 	mov	r3, #45	; 0x2d
 c10ae40:	e1981009 	orrs	r1, r8, r9
 c10ae44:	e5cd30a7 	strb	r3, [sp, #167]	; 0xa7
 c10ae48:	03a02000 	moveq	r2, #0
 c10ae4c:	13a02001 	movne	r2, #1
 c10ae50:	e3a03001 	mov	r3, #1
 c10ae54:	eafffd18 	b	c10a2bc <_svfiprintf_r+0x2a0>
 c10ae58:	e59d0018 	ldr	r0, [sp, #24]
 c10ae5c:	e1a01006 	mov	r1, r6
 c10ae60:	e28d2098 	add	r2, sp, #152	; 0x98
 c10ae64:	ebfffc05 	bl	c109e80 <__ssprint_r>
 c10ae68:	e3500000 	cmp	r0, #0
 c10ae6c:	1affff2c 	bne	c10ab24 <_svfiprintf_r+0xb08>
 c10ae70:	e59d20a0 	ldr	r2, [sp, #160]	; 0xa0
 c10ae74:	e59d309c 	ldr	r3, [sp, #156]	; 0x9c
 c10ae78:	e28d0030 	add	r0, sp, #48	; 0x30
 c10ae7c:	eafffec9 	b	c10a9a8 <_svfiprintf_r+0x98c>
 c10ae80:	e59dc014 	ldr	ip, [sp, #20]
 c10ae84:	e59ca000 	ldr	sl, [ip]
 c10ae88:	e28c2004 	add	r2, ip, #4
 c10ae8c:	e35a0000 	cmp	sl, #0
 c10ae90:	b5d53000 	ldrblt	r3, [r5]
 c10ae94:	b3e0a000 	mvnlt	sl, #0
 c10ae98:	b58d2014 	strlt	r2, [sp, #20]
 c10ae9c:	bafffc99 	blt	c10a108 <_svfiprintf_r+0xec>
 c10aea0:	e5d53000 	ldrb	r3, [r5]
 c10aea4:	e58d2014 	str	r2, [sp, #20]
 c10aea8:	eafffc96 	b	c10a108 <_svfiprintf_r+0xec>
 c10aeac:	e59d0018 	ldr	r0, [sp, #24]
 c10aeb0:	e1a01006 	mov	r1, r6
 c10aeb4:	e28d2098 	add	r2, sp, #152	; 0x98
 c10aeb8:	ebfffbf0 	bl	c109e80 <__ssprint_r>
 c10aebc:	e3500000 	cmp	r0, #0
 c10aec0:	1affff17 	bne	c10ab24 <_svfiprintf_r+0xb08>
 c10aec4:	e59d20a0 	ldr	r2, [sp, #160]	; 0xa0
 c10aec8:	eafffdc7 	b	c10a5ec <_svfiprintf_r+0x5d0>
 c10aecc:	e2888030 	add	r8, r8, #48	; 0x30
 c10aed0:	e3a02001 	mov	r2, #1
 c10aed4:	e28d3097 	add	r3, sp, #151	; 0x97
 c10aed8:	e5cd8097 	strb	r8, [sp, #151]	; 0x97
 c10aedc:	e58d2008 	str	r2, [sp, #8]
 c10aee0:	e58d3020 	str	r3, [sp, #32]
 c10aee4:	eafffd1c 	b	c10a35c <_svfiprintf_r+0x340>
 c10aee8:	e59d1014 	ldr	r1, [sp, #20]
 c10aeec:	e3a03001 	mov	r3, #1
 c10aef0:	e5912000 	ldr	r2, [r1]
 c10aef4:	eaffffae 	b	c10adb4 <_svfiprintf_r+0xd98>
 c10aef8:	e21b3040 	ands	r3, fp, #64	; 0x40
 c10aefc:	0a000033 	beq	c10afd0 <_svfiprintf_r+0xfb4>
 c10af00:	e59d3014 	ldr	r3, [sp, #20]
 c10af04:	e1d320b0 	ldrh	r2, [r3]
 c10af08:	e1a03001 	mov	r3, r1
 c10af0c:	eaffffb6 	b	c10adec <_svfiprintf_r+0xdd0>
 c10af10:	e31b0040 	tst	fp, #64	; 0x40
 c10af14:	159d2014 	ldrne	r2, [sp, #20]
 c10af18:	059d3014 	ldreq	r3, [sp, #20]
 c10af1c:	11d280f0 	ldrshne	r8, [r2]
 c10af20:	05938000 	ldreq	r8, [r3]
 c10af24:	12822004 	addne	r2, r2, #4
 c10af28:	02833004 	addeq	r3, r3, #4
 c10af2c:	158d2014 	strne	r2, [sp, #20]
 c10af30:	058d3014 	streq	r3, [sp, #20]
 c10af34:	e1a09fc8 	asr	r9, r8, #31
 c10af38:	eafffdd3 	b	c10a68c <_svfiprintf_r+0x670>
 c10af3c:	e59d2014 	ldr	r2, [sp, #20]
 c10af40:	e59dc010 	ldr	ip, [sp, #16]
 c10af44:	e59d0014 	ldr	r0, [sp, #20]
 c10af48:	e5923000 	ldr	r3, [r2]
 c10af4c:	e2800004 	add	r0, r0, #4
 c10af50:	e1a0100c 	mov	r1, ip
 c10af54:	e1a02fc1 	asr	r2, r1, #31
 c10af58:	e8830006 	stm	r3, {r1, r2}
 c10af5c:	e58d0014 	str	r0, [sp, #20]
 c10af60:	eafffc41 	b	c10a06c <_svfiprintf_r+0x50>
 c10af64:	e31b0040 	tst	fp, #64	; 0x40
 c10af68:	159d2014 	ldrne	r2, [sp, #20]
 c10af6c:	059dc014 	ldreq	ip, [sp, #20]
 c10af70:	11d280b0 	ldrhne	r8, [r2]
 c10af74:	059c8000 	ldreq	r8, [ip]
 c10af78:	12822004 	addne	r2, r2, #4
 c10af7c:	028cc004 	addeq	ip, ip, #4
 c10af80:	158d2014 	strne	r2, [sp, #20]
 c10af84:	058dc014 	streq	ip, [sp, #20]
 c10af88:	e3a09000 	mov	r9, #0
 c10af8c:	eafffe36 	b	c10a86c <_svfiprintf_r+0x850>
 c10af90:	e59d0020 	ldr	r0, [sp, #32]
 c10af94:	ebfffba1 	bl	c109e20 <strlen>
 c10af98:	e3a03000 	mov	r3, #0
 c10af9c:	e58d0008 	str	r0, [sp, #8]
 c10afa0:	e58d301c 	str	r3, [sp, #28]
 c10afa4:	eafffced 	b	c10a360 <_svfiprintf_r+0x344>
 c10afa8:	e59d1014 	ldr	r1, [sp, #20]
 c10afac:	e59d2010 	ldr	r2, [sp, #16]
 c10afb0:	e5913000 	ldr	r3, [r1]
 c10afb4:	e2811004 	add	r1, r1, #4
 c10afb8:	e58d1014 	str	r1, [sp, #20]
 c10afbc:	e5832000 	str	r2, [r3]
 c10afc0:	eafffc29 	b	c10a06c <_svfiprintf_r+0x50>
 c10afc4:	e59f80d8 	ldr	r8, [pc, #216]	; c10b0a4 <_svfiprintf_r+0x1088>
 c10afc8:	e1a00001 	mov	r0, r1
 c10afcc:	eafffd3a 	b	c10a4bc <_svfiprintf_r+0x4a0>
 c10afd0:	e59d0014 	ldr	r0, [sp, #20]
 c10afd4:	e5902000 	ldr	r2, [r0]
 c10afd8:	e1a08002 	mov	r8, r2
 c10afdc:	e3a09000 	mov	r9, #0
 c10afe0:	e2800004 	add	r0, r0, #4
 c10afe4:	e2522000 	subs	r2, r2, #0
 c10afe8:	13a02001 	movne	r2, #1
 c10afec:	e58d0014 	str	r0, [sp, #20]
 c10aff0:	eafffcaf 	b	c10a2b4 <_svfiprintf_r+0x298>
 c10aff4:	e59d0014 	ldr	r0, [sp, #20]
 c10aff8:	e3a03001 	mov	r3, #1
 c10affc:	e5902000 	ldr	r2, [r0]
 c10b000:	eafffff4 	b	c10afd8 <_svfiprintf_r+0xfbc>
 c10b004:	e3a01040 	mov	r1, #64	; 0x40
 c10b008:	e58d2004 	str	r2, [sp, #4]
 c10b00c:	ebfff50f 	bl	c108450 <_malloc_r>
 c10b010:	e3500000 	cmp	r0, #0
 c10b014:	13a03040 	movne	r3, #64	; 0x40
 c10b018:	e59d2004 	ldr	r2, [sp, #4]
 c10b01c:	e5860000 	str	r0, [r6]
 c10b020:	e5860010 	str	r0, [r6, #16]
 c10b024:	15863014 	strne	r3, [r6, #20]
 c10b028:	1afffc06 	bne	c10a048 <_svfiprintf_r+0x2c>
 c10b02c:	e59d0018 	ldr	r0, [sp, #24]
 c10b030:	e3a0300c 	mov	r3, #12
 c10b034:	e3e01000 	mvn	r1, #0
 c10b038:	e5803000 	str	r3, [r0]
 c10b03c:	e58d1010 	str	r1, [sp, #16]
 c10b040:	eafffebc 	b	c10ab38 <_svfiprintf_r+0xb1c>
 c10b044:	e2840008 	add	r0, r4, #8
 c10b048:	e59d20a0 	ldr	r2, [sp, #160]	; 0xa0
 c10b04c:	e59d309c 	ldr	r3, [sp, #156]	; 0x9c
 c10b050:	e59f8050 	ldr	r8, [pc, #80]	; c10b0a8 <_svfiprintf_r+0x108c>
 c10b054:	eafffe4b 	b	c10a988 <_svfiprintf_r+0x96c>
 c10b058:	e59d2008 	ldr	r2, [sp, #8]
 c10b05c:	e59dc020 	ldr	ip, [sp, #32]
 c10b060:	e2823028 	add	r3, r2, #40	; 0x28
 c10b064:	e06c3003 	rsb	r3, ip, r3
 c10b068:	e58d3008 	str	r3, [sp, #8]
 c10b06c:	eafffcba 	b	c10a35c <_svfiprintf_r+0x340>
 c10b070:	e59f103c 	ldr	r1, [pc, #60]	; c10b0b4 <_svfiprintf_r+0x1098>
 c10b074:	e35a0006 	cmp	sl, #6
 c10b078:	23a0a006 	movcs	sl, #6
 c10b07c:	e58da008 	str	sl, [sp, #8]
 c10b080:	e1ca9fca 	bic	r9, sl, sl, asr #31
 c10b084:	e58d1020 	str	r1, [sp, #32]
 c10b088:	eafffe0e 	b	c10a8c8 <_svfiprintf_r+0x8ac>
 c10b08c:	e59d309c 	ldr	r3, [sp, #156]	; 0x9c
 c10b090:	e59f8010 	ldr	r8, [pc, #16]	; c10b0a8 <_svfiprintf_r+0x108c>
 c10b094:	eafffd4c 	b	c10a5cc <_svfiprintf_r+0x5b0>
 c10b098:	e59f8004 	ldr	r8, [pc, #4]	; c10b0a4 <_svfiprintf_r+0x1088>
 c10b09c:	e1a00001 	mov	r0, r1
 c10b0a0:	eafffece 	b	c10abe0 <_svfiprintf_r+0xbc4>
 c10b0a4:	0c100b70 	.word	0x0c100b70
 c10b0a8:	0c100b60 	.word	0x0c100b60
 c10b0ac:	0c1009f8 	.word	0x0c1009f8
 c10b0b0:	0c1009e4 	.word	0x0c1009e4
 c10b0b4:	0c100a0c 	.word	0x0c100a0c

0c10b0b8 <_calloc_r>:
 c10b0b8:	e92d4010 	push	{r4, lr}
 c10b0bc:	e0010192 	mul	r1, r2, r1
 c10b0c0:	ebfff4e2 	bl	c108450 <_malloc_r>
 c10b0c4:	e2504000 	subs	r4, r0, #0
 c10b0c8:	0a00001b 	beq	c10b13c <_calloc_r+0x84>
 c10b0cc:	e5142004 	ldr	r2, [r4, #-4]
 c10b0d0:	e3c22003 	bic	r2, r2, #3
 c10b0d4:	e2422004 	sub	r2, r2, #4
 c10b0d8:	e3520024 	cmp	r2, #36	; 0x24
 c10b0dc:	8a000019 	bhi	c10b148 <_calloc_r+0x90>
 c10b0e0:	e3520013 	cmp	r2, #19
 c10b0e4:	e1a03004 	mov	r3, r4
 c10b0e8:	9a00000e 	bls	c10b128 <_calloc_r+0x70>
 c10b0ec:	e3a01000 	mov	r1, #0
 c10b0f0:	e1a00004 	mov	r0, r4
 c10b0f4:	e4801004 	str	r1, [r0], #4
 c10b0f8:	e352001b 	cmp	r2, #27
 c10b0fc:	e5841004 	str	r1, [r4, #4]
 c10b100:	e2803004 	add	r3, r0, #4
 c10b104:	9a000007 	bls	c10b128 <_calloc_r+0x70>
 c10b108:	e3520024 	cmp	r2, #36	; 0x24
 c10b10c:	e5801004 	str	r1, [r0, #4]
 c10b110:	e283c004 	add	ip, r3, #4
 c10b114:	e5831004 	str	r1, [r3, #4]
 c10b118:	e2833008 	add	r3, r3, #8
 c10b11c:	058c1004 	streq	r1, [ip, #4]
 c10b120:	05831004 	streq	r1, [r3, #4]
 c10b124:	02833008 	addeq	r3, r3, #8
 c10b128:	e3a01000 	mov	r1, #0
 c10b12c:	e1a02003 	mov	r2, r3
 c10b130:	e4821004 	str	r1, [r2], #4
 c10b134:	e5831004 	str	r1, [r3, #4]
 c10b138:	e5821004 	str	r1, [r2, #4]
 c10b13c:	e1a00004 	mov	r0, r4
 c10b140:	e8bd4010 	pop	{r4, lr}
 c10b144:	e12fff1e 	bx	lr
 c10b148:	e3a01000 	mov	r1, #0
 c10b14c:	eb000122 	bl	c10b5dc <memset>
 c10b150:	eafffff9 	b	c10b13c <_calloc_r+0x84>

0c10b154 <_malloc_trim_r>:
 c10b154:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
 c10b158:	e59f50e4 	ldr	r5, [pc, #228]	; c10b244 <_malloc_trim_r+0xf0>
 c10b15c:	e1a07001 	mov	r7, r1
 c10b160:	e1a04000 	mov	r4, r0
 c10b164:	ebfff72d 	bl	c108e20 <__malloc_lock>
 c10b168:	e5953008 	ldr	r3, [r5, #8]
 c10b16c:	e5936004 	ldr	r6, [r3, #4]
 c10b170:	e3c66003 	bic	r6, r6, #3
 c10b174:	e2863efe 	add	r3, r6, #4064	; 0xfe0
 c10b178:	e283300f 	add	r3, r3, #15
 c10b17c:	e0677003 	rsb	r7, r7, r3
 c10b180:	e1a07627 	lsr	r7, r7, #12
 c10b184:	e2477001 	sub	r7, r7, #1
 c10b188:	e1a07607 	lsl	r7, r7, #12
 c10b18c:	e3570a01 	cmp	r7, #4096	; 0x1000
 c10b190:	ba000006 	blt	c10b1b0 <_malloc_trim_r+0x5c>
 c10b194:	e1a00004 	mov	r0, r4
 c10b198:	e3a01000 	mov	r1, #0
 c10b19c:	ebfffa83 	bl	c109bb0 <_sbrk_r>
 c10b1a0:	e5953008 	ldr	r3, [r5, #8]
 c10b1a4:	e0833006 	add	r3, r3, r6
 c10b1a8:	e1500003 	cmp	r0, r3
 c10b1ac:	0a000004 	beq	c10b1c4 <_malloc_trim_r+0x70>
 c10b1b0:	e1a00004 	mov	r0, r4
 c10b1b4:	ebfff71a 	bl	c108e24 <__malloc_unlock>
 c10b1b8:	e3a00000 	mov	r0, #0
 c10b1bc:	e8bd40f8 	pop	{r3, r4, r5, r6, r7, lr}
 c10b1c0:	e12fff1e 	bx	lr
 c10b1c4:	e1a00004 	mov	r0, r4
 c10b1c8:	e2671000 	rsb	r1, r7, #0
 c10b1cc:	ebfffa77 	bl	c109bb0 <_sbrk_r>
 c10b1d0:	e3700001 	cmn	r0, #1
 c10b1d4:	0a00000b 	beq	c10b208 <_malloc_trim_r+0xb4>
 c10b1d8:	e59f3068 	ldr	r3, [pc, #104]	; c10b248 <_malloc_trim_r+0xf4>
 c10b1dc:	e5931000 	ldr	r1, [r3]
 c10b1e0:	e5952008 	ldr	r2, [r5, #8]
 c10b1e4:	e0676006 	rsb	r6, r7, r6
 c10b1e8:	e3866001 	orr	r6, r6, #1
 c10b1ec:	e0677001 	rsb	r7, r7, r1
 c10b1f0:	e1a00004 	mov	r0, r4
 c10b1f4:	e5826004 	str	r6, [r2, #4]
 c10b1f8:	e5837000 	str	r7, [r3]
 c10b1fc:	ebfff708 	bl	c108e24 <__malloc_unlock>
 c10b200:	e3a00001 	mov	r0, #1
 c10b204:	eaffffec 	b	c10b1bc <_malloc_trim_r+0x68>
 c10b208:	e1a00004 	mov	r0, r4
 c10b20c:	e3a01000 	mov	r1, #0
 c10b210:	ebfffa66 	bl	c109bb0 <_sbrk_r>
 c10b214:	e5953008 	ldr	r3, [r5, #8]
 c10b218:	e0632000 	rsb	r2, r3, r0
 c10b21c:	e352000f 	cmp	r2, #15
 c10b220:	daffffe2 	ble	c10b1b0 <_malloc_trim_r+0x5c>
 c10b224:	e59f1020 	ldr	r1, [pc, #32]	; c10b24c <_malloc_trim_r+0xf8>
 c10b228:	e5911000 	ldr	r1, [r1]
 c10b22c:	e0610000 	rsb	r0, r1, r0
 c10b230:	e59f1010 	ldr	r1, [pc, #16]	; c10b248 <_malloc_trim_r+0xf4>
 c10b234:	e3822001 	orr	r2, r2, #1
 c10b238:	e5810000 	str	r0, [r1]
 c10b23c:	e5832004 	str	r2, [r3, #4]
 c10b240:	eaffffda 	b	c10b1b0 <_malloc_trim_r+0x5c>
 c10b244:	0c100524 	.word	0x0c100524
 c10b248:	0c100ca0 	.word	0x0c100ca0
 c10b24c:	0c10092c 	.word	0x0c10092c

0c10b250 <_free_r>:
 c10b250:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
 c10b254:	e2515000 	subs	r5, r1, #0
 c10b258:	e1a04000 	mov	r4, r0
 c10b25c:	0a00005c 	beq	c10b3d4 <_free_r+0x184>
 c10b260:	ebfff6ee 	bl	c108e20 <__malloc_lock>
 c10b264:	e2452008 	sub	r2, r5, #8
 c10b268:	e5920004 	ldr	r0, [r2, #4]
 c10b26c:	e59fc22c 	ldr	ip, [pc, #556]	; c10b4a0 <_free_r+0x250>
 c10b270:	e3c03001 	bic	r3, r0, #1
 c10b274:	e0821003 	add	r1, r2, r3
 c10b278:	e59c6008 	ldr	r6, [ip, #8]
 c10b27c:	e591e004 	ldr	lr, [r1, #4]
 c10b280:	e1560001 	cmp	r6, r1
 c10b284:	e3cee003 	bic	lr, lr, #3
 c10b288:	0a000060 	beq	c10b410 <_free_r+0x1c0>
 c10b28c:	e2100001 	ands	r0, r0, #1
 c10b290:	e581e004 	str	lr, [r1, #4]
 c10b294:	13a00000 	movne	r0, #0
 c10b298:	1a000009 	bne	c10b2c4 <_free_r+0x74>
 c10b29c:	e5156008 	ldr	r6, [r5, #-8]
 c10b2a0:	e0662002 	rsb	r2, r6, r2
 c10b2a4:	e5925008 	ldr	r5, [r2, #8]
 c10b2a8:	e28c7008 	add	r7, ip, #8
 c10b2ac:	e1550007 	cmp	r5, r7
 c10b2b0:	e0833006 	add	r3, r3, r6
 c10b2b4:	1592600c 	ldrne	r6, [r2, #12]
 c10b2b8:	1585600c 	strne	r6, [r5, #12]
 c10b2bc:	15865008 	strne	r5, [r6, #8]
 c10b2c0:	03a00001 	moveq	r0, #1
 c10b2c4:	e081500e 	add	r5, r1, lr
 c10b2c8:	e5955004 	ldr	r5, [r5, #4]
 c10b2cc:	e3150001 	tst	r5, #1
 c10b2d0:	1a00000a 	bne	c10b300 <_free_r+0xb0>
 c10b2d4:	e3500000 	cmp	r0, #0
 c10b2d8:	e083300e 	add	r3, r3, lr
 c10b2dc:	1591e008 	ldrne	lr, [r1, #8]
 c10b2e0:	1a000003 	bne	c10b2f4 <_free_r+0xa4>
 c10b2e4:	e591e008 	ldr	lr, [r1, #8]
 c10b2e8:	e59f51b4 	ldr	r5, [pc, #436]	; c10b4a4 <_free_r+0x254>
 c10b2ec:	e15e0005 	cmp	lr, r5
 c10b2f0:	0a00005c 	beq	c10b468 <_free_r+0x218>
 c10b2f4:	e591100c 	ldr	r1, [r1, #12]
 c10b2f8:	e58e100c 	str	r1, [lr, #12]
 c10b2fc:	e581e008 	str	lr, [r1, #8]
 c10b300:	e3831001 	orr	r1, r3, #1
 c10b304:	e3500000 	cmp	r0, #0
 c10b308:	e5821004 	str	r1, [r2, #4]
 c10b30c:	e7823003 	str	r3, [r2, r3]
 c10b310:	1a00002d 	bne	c10b3cc <_free_r+0x17c>
 c10b314:	e3530c02 	cmp	r3, #512	; 0x200
 c10b318:	3a00002f 	bcc	c10b3dc <_free_r+0x18c>
 c10b31c:	e1a014a3 	lsr	r1, r3, #9
 c10b320:	e3510004 	cmp	r1, #4
 c10b324:	91a00323 	lsrls	r0, r3, #6
 c10b328:	92800038 	addls	r0, r0, #56	; 0x38
 c10b32c:	91a0e180 	lslls	lr, r0, #3
 c10b330:	9a000014 	bls	c10b388 <_free_r+0x138>
 c10b334:	e3510014 	cmp	r1, #20
 c10b338:	9281005b 	addls	r0, r1, #91	; 0x5b
 c10b33c:	91a0e180 	lslls	lr, r0, #3
 c10b340:	9a000010 	bls	c10b388 <_free_r+0x138>
 c10b344:	e3510054 	cmp	r1, #84	; 0x54
 c10b348:	91a00623 	lsrls	r0, r3, #12
 c10b34c:	9280006e 	addls	r0, r0, #110	; 0x6e
 c10b350:	91a0e180 	lslls	lr, r0, #3
 c10b354:	9a00000b 	bls	c10b388 <_free_r+0x138>
 c10b358:	e3510f55 	cmp	r1, #340	; 0x154
 c10b35c:	91a007a3 	lsrls	r0, r3, #15
 c10b360:	92800077 	addls	r0, r0, #119	; 0x77
 c10b364:	91a0e180 	lslls	lr, r0, #3
 c10b368:	9a000006 	bls	c10b388 <_free_r+0x138>
 c10b36c:	e59f0134 	ldr	r0, [pc, #308]	; c10b4a8 <_free_r+0x258>
 c10b370:	e1510000 	cmp	r1, r0
 c10b374:	91a00923 	lsrls	r0, r3, #18
 c10b378:	9280007c 	addls	r0, r0, #124	; 0x7c
 c10b37c:	91a0e180 	lslls	lr, r0, #3
 c10b380:	83a0ee3f 	movhi	lr, #1008	; 0x3f0
 c10b384:	83a0007e 	movhi	r0, #126	; 0x7e
 c10b388:	e08ce00e 	add	lr, ip, lr
 c10b38c:	e59e1008 	ldr	r1, [lr, #8]
 c10b390:	e151000e 	cmp	r1, lr
 c10b394:	1a000003 	bne	c10b3a8 <_free_r+0x158>
 c10b398:	ea000039 	b	c10b484 <_free_r+0x234>
 c10b39c:	e5911008 	ldr	r1, [r1, #8]
 c10b3a0:	e15e0001 	cmp	lr, r1
 c10b3a4:	0a000003 	beq	c10b3b8 <_free_r+0x168>
 c10b3a8:	e5910004 	ldr	r0, [r1, #4]
 c10b3ac:	e3c00003 	bic	r0, r0, #3
 c10b3b0:	e1530000 	cmp	r3, r0
 c10b3b4:	3afffff8 	bcc	c10b39c <_free_r+0x14c>
 c10b3b8:	e591300c 	ldr	r3, [r1, #12]
 c10b3bc:	e582300c 	str	r3, [r2, #12]
 c10b3c0:	e5821008 	str	r1, [r2, #8]
 c10b3c4:	e581200c 	str	r2, [r1, #12]
 c10b3c8:	e5832008 	str	r2, [r3, #8]
 c10b3cc:	e1a00004 	mov	r0, r4
 c10b3d0:	ebfff693 	bl	c108e24 <__malloc_unlock>
 c10b3d4:	e8bd40f8 	pop	{r3, r4, r5, r6, r7, lr}
 c10b3d8:	e12fff1e 	bx	lr
 c10b3dc:	e59c1004 	ldr	r1, [ip, #4]
 c10b3e0:	e1a031a3 	lsr	r3, r3, #3
 c10b3e4:	e1a00143 	asr	r0, r3, #2
 c10b3e8:	e3a0e001 	mov	lr, #1
 c10b3ec:	e181001e 	orr	r0, r1, lr, lsl r0
 c10b3f0:	e08c3183 	add	r3, ip, r3, lsl #3
 c10b3f4:	e5931008 	ldr	r1, [r3, #8]
 c10b3f8:	e582300c 	str	r3, [r2, #12]
 c10b3fc:	e5821008 	str	r1, [r2, #8]
 c10b400:	e58c0004 	str	r0, [ip, #4]
 c10b404:	e5832008 	str	r2, [r3, #8]
 c10b408:	e581200c 	str	r2, [r1, #12]
 c10b40c:	eaffffee 	b	c10b3cc <_free_r+0x17c>
 c10b410:	e3100001 	tst	r0, #1
 c10b414:	e08e3003 	add	r3, lr, r3
 c10b418:	1a000006 	bne	c10b438 <_free_r+0x1e8>
 c10b41c:	e5151008 	ldr	r1, [r5, #-8]
 c10b420:	e0612002 	rsb	r2, r1, r2
 c10b424:	e592000c 	ldr	r0, [r2, #12]
 c10b428:	e592e008 	ldr	lr, [r2, #8]
 c10b42c:	e58e000c 	str	r0, [lr, #12]
 c10b430:	e580e008 	str	lr, [r0, #8]
 c10b434:	e0833001 	add	r3, r3, r1
 c10b438:	e59f106c 	ldr	r1, [pc, #108]	; c10b4ac <_free_r+0x25c>
 c10b43c:	e5910000 	ldr	r0, [r1]
 c10b440:	e3831001 	orr	r1, r3, #1
 c10b444:	e1530000 	cmp	r3, r0
 c10b448:	e5821004 	str	r1, [r2, #4]
 c10b44c:	e58c2008 	str	r2, [ip, #8]
 c10b450:	3affffdd 	bcc	c10b3cc <_free_r+0x17c>
 c10b454:	e59f3054 	ldr	r3, [pc, #84]	; c10b4b0 <_free_r+0x260>
 c10b458:	e1a00004 	mov	r0, r4
 c10b45c:	e5931000 	ldr	r1, [r3]
 c10b460:	ebffff3b 	bl	c10b154 <_malloc_trim_r>
 c10b464:	eaffffd8 	b	c10b3cc <_free_r+0x17c>
 c10b468:	e3831001 	orr	r1, r3, #1
 c10b46c:	e58e200c 	str	r2, [lr, #12]
 c10b470:	e58e2008 	str	r2, [lr, #8]
 c10b474:	e582e00c 	str	lr, [r2, #12]
 c10b478:	e9824002 	stmib	r2, {r1, lr}
 c10b47c:	e7823003 	str	r3, [r2, r3]
 c10b480:	eaffffd1 	b	c10b3cc <_free_r+0x17c>
 c10b484:	e59c3004 	ldr	r3, [ip, #4]
 c10b488:	e1a00140 	asr	r0, r0, #2
 c10b48c:	e3a0e001 	mov	lr, #1
 c10b490:	e183001e 	orr	r0, r3, lr, lsl r0
 c10b494:	e1a03001 	mov	r3, r1
 c10b498:	e58c0004 	str	r0, [ip, #4]
 c10b49c:	eaffffc6 	b	c10b3bc <_free_r+0x16c>
 c10b4a0:	0c100524 	.word	0x0c100524
 c10b4a4:	0c10052c 	.word	0x0c10052c
 c10b4a8:	00000554 	.word	0x00000554
 c10b4ac:	0c100930 	.word	0x0c100930
 c10b4b0:	0c100c9c 	.word	0x0c100c9c

0c10b4b4 <memmove>:
 c10b4b4:	e1500001 	cmp	r0, r1
 c10b4b8:	e92d00f0 	push	{r4, r5, r6, r7}
 c10b4bc:	e1a03000 	mov	r3, r0
 c10b4c0:	e1a0c001 	mov	ip, r1
 c10b4c4:	9a00000d 	bls	c10b500 <memmove+0x4c>
 c10b4c8:	e0814002 	add	r4, r1, r2
 c10b4cc:	e1500004 	cmp	r0, r4
 c10b4d0:	2a00000a 	bcs	c10b500 <memmove+0x4c>
 c10b4d4:	e3520000 	cmp	r2, #0
 c10b4d8:	0a000006 	beq	c10b4f8 <memmove+0x44>
 c10b4dc:	e0803002 	add	r3, r0, r2
 c10b4e0:	e1a01004 	mov	r1, r4
 c10b4e4:	e0622003 	rsb	r2, r2, r3
 c10b4e8:	e571c001 	ldrb	ip, [r1, #-1]!
 c10b4ec:	e563c001 	strb	ip, [r3, #-1]!
 c10b4f0:	e1530002 	cmp	r3, r2
 c10b4f4:	1afffffb 	bne	c10b4e8 <memmove+0x34>
 c10b4f8:	e8bd00f0 	pop	{r4, r5, r6, r7}
 c10b4fc:	e12fff1e 	bx	lr
 c10b500:	e352000f 	cmp	r2, #15
 c10b504:	9a00002b 	bls	c10b5b8 <memmove+0x104>
 c10b508:	e1814000 	orr	r4, r1, r0
 c10b50c:	e3140003 	tst	r4, #3
 c10b510:	1a00002a 	bne	c10b5c0 <memmove+0x10c>
 c10b514:	e2425010 	sub	r5, r2, #16
 c10b518:	e1a06225 	lsr	r6, r5, #4
 c10b51c:	e2814010 	add	r4, r1, #16
 c10b520:	e0844206 	add	r4, r4, r6, lsl #4
 c10b524:	e1a03001 	mov	r3, r1
 c10b528:	e1a02000 	mov	r2, r0
 c10b52c:	e593c000 	ldr	ip, [r3]
 c10b530:	e582c000 	str	ip, [r2]
 c10b534:	e593c004 	ldr	ip, [r3, #4]
 c10b538:	e582c004 	str	ip, [r2, #4]
 c10b53c:	e593c008 	ldr	ip, [r3, #8]
 c10b540:	e582c008 	str	ip, [r2, #8]
 c10b544:	e593c00c 	ldr	ip, [r3, #12]
 c10b548:	e2833010 	add	r3, r3, #16
 c10b54c:	e1540003 	cmp	r4, r3
 c10b550:	e582c00c 	str	ip, [r2, #12]
 c10b554:	e2822010 	add	r2, r2, #16
 c10b558:	1afffff3 	bne	c10b52c <memmove+0x78>
 c10b55c:	e286c001 	add	ip, r6, #1
 c10b560:	e205200f 	and	r2, r5, #15
 c10b564:	e1a0c20c 	lsl	ip, ip, #4
 c10b568:	e3520003 	cmp	r2, #3
 c10b56c:	e080300c 	add	r3, r0, ip
 c10b570:	e081100c 	add	r1, r1, ip
 c10b574:	9a00000e 	bls	c10b5b4 <memmove+0x100>
 c10b578:	e2422004 	sub	r2, r2, #4
 c10b57c:	e1a07122 	lsr	r7, r2, #2
 c10b580:	e0816107 	add	r6, r1, r7, lsl #2
 c10b584:	e1a0c001 	mov	ip, r1
 c10b588:	e2866004 	add	r6, r6, #4
 c10b58c:	e1a04003 	mov	r4, r3
 c10b590:	e49c5004 	ldr	r5, [ip], #4
 c10b594:	e15c0006 	cmp	ip, r6
 c10b598:	e4845004 	str	r5, [r4], #4
 c10b59c:	1afffffb 	bne	c10b590 <memmove+0xdc>
 c10b5a0:	e287c001 	add	ip, r7, #1
 c10b5a4:	e1a0c10c 	lsl	ip, ip, #2
 c10b5a8:	e083300c 	add	r3, r3, ip
 c10b5ac:	e081100c 	add	r1, r1, ip
 c10b5b0:	e2022003 	and	r2, r2, #3
 c10b5b4:	e1a0c001 	mov	ip, r1
 c10b5b8:	e3520000 	cmp	r2, #0
 c10b5bc:	0affffcd 	beq	c10b4f8 <memmove+0x44>
 c10b5c0:	e1a0100c 	mov	r1, ip
 c10b5c4:	e08c2002 	add	r2, ip, r2
 c10b5c8:	e4d1c001 	ldrb	ip, [r1], #1
 c10b5cc:	e1510002 	cmp	r1, r2
 c10b5d0:	e4c3c001 	strb	ip, [r3], #1
 c10b5d4:	1afffffb 	bne	c10b5c8 <memmove+0x114>
 c10b5d8:	eaffffc6 	b	c10b4f8 <memmove+0x44>

0c10b5dc <memset>:
 c10b5dc:	e3520003 	cmp	r2, #3
 c10b5e0:	e52d4004 	push	{r4}		; (str r4, [sp, #-4]!)
 c10b5e4:	e20110ff 	and	r1, r1, #255	; 0xff
 c10b5e8:	8a000008 	bhi	c10b610 <memset+0x34>
 c10b5ec:	e3520000 	cmp	r2, #0
 c10b5f0:	0a000004 	beq	c10b608 <memset+0x2c>
 c10b5f4:	e1a03000 	mov	r3, r0
 c10b5f8:	e0822000 	add	r2, r2, r0
 c10b5fc:	e4c31001 	strb	r1, [r3], #1
 c10b600:	e1530002 	cmp	r3, r2
 c10b604:	1afffffc 	bne	c10b5fc <memset+0x20>
 c10b608:	e49d4004 	pop	{r4}		; (ldr r4, [sp], #4)
 c10b60c:	e12fff1e 	bx	lr
 c10b610:	e0802002 	add	r2, r0, r2
 c10b614:	e1a0c000 	mov	ip, r0
 c10b618:	ea000000 	b	c10b620 <memset+0x44>
 c10b61c:	e4cc1001 	strb	r1, [ip], #1
 c10b620:	e31c0003 	tst	ip, #3
 c10b624:	1afffffc 	bne	c10b61c <memset+0x40>
 c10b628:	e0813401 	add	r3, r1, r1, lsl #8
 c10b62c:	e0833803 	add	r3, r3, r3, lsl #16
 c10b630:	ea00000f 	b	c10b674 <memset+0x98>
 c10b634:	e50c3040 	str	r3, [ip, #-64]	; 0xffffffc0
 c10b638:	e50c303c 	str	r3, [ip, #-60]	; 0xffffffc4
 c10b63c:	e50c3038 	str	r3, [ip, #-56]	; 0xffffffc8
 c10b640:	e50c3034 	str	r3, [ip, #-52]	; 0xffffffcc
 c10b644:	e50c3030 	str	r3, [ip, #-48]	; 0xffffffd0
 c10b648:	e50c302c 	str	r3, [ip, #-44]	; 0xffffffd4
 c10b64c:	e50c3028 	str	r3, [ip, #-40]	; 0xffffffd8
 c10b650:	e50c3024 	str	r3, [ip, #-36]	; 0xffffffdc
 c10b654:	e50c3020 	str	r3, [ip, #-32]	; 0xffffffe0
 c10b658:	e50c301c 	str	r3, [ip, #-28]	; 0xffffffe4
 c10b65c:	e50c3018 	str	r3, [ip, #-24]	; 0xffffffe8
 c10b660:	e50c3014 	str	r3, [ip, #-20]	; 0xffffffec
 c10b664:	e50c3010 	str	r3, [ip, #-16]
 c10b668:	e50c300c 	str	r3, [ip, #-12]
 c10b66c:	e50c3008 	str	r3, [ip, #-8]
 c10b670:	e50c3004 	str	r3, [ip, #-4]
 c10b674:	e06c4002 	rsb	r4, ip, r2
 c10b678:	e354003f 	cmp	r4, #63	; 0x3f
 c10b67c:	e1a0400c 	mov	r4, ip
 c10b680:	e28cc040 	add	ip, ip, #64	; 0x40
 c10b684:	caffffea 	bgt	c10b634 <memset+0x58>
 c10b688:	e1a0c004 	mov	ip, r4
 c10b68c:	ea000003 	b	c10b6a0 <memset+0xc4>
 c10b690:	e50c3010 	str	r3, [ip, #-16]
 c10b694:	e50c300c 	str	r3, [ip, #-12]
 c10b698:	e50c3008 	str	r3, [ip, #-8]
 c10b69c:	e50c3004 	str	r3, [ip, #-4]
 c10b6a0:	e06c4002 	rsb	r4, ip, r2
 c10b6a4:	e354000f 	cmp	r4, #15
 c10b6a8:	e1a0400c 	mov	r4, ip
 c10b6ac:	e28cc010 	add	ip, ip, #16
 c10b6b0:	cafffff6 	bgt	c10b690 <memset+0xb4>
 c10b6b4:	ea000000 	b	c10b6bc <memset+0xe0>
 c10b6b8:	e4843004 	str	r3, [r4], #4
 c10b6bc:	e064c002 	rsb	ip, r4, r2
 c10b6c0:	e35c0003 	cmp	ip, #3
 c10b6c4:	cafffffb 	bgt	c10b6b8 <memset+0xdc>
 c10b6c8:	ea000000 	b	c10b6d0 <memset+0xf4>
 c10b6cc:	e4c41001 	strb	r1, [r4], #1
 c10b6d0:	e1540002 	cmp	r4, r2
 c10b6d4:	3afffffc 	bcc	c10b6cc <memset+0xf0>
 c10b6d8:	eaffffca 	b	c10b608 <memset+0x2c>

0c10b6dc <_realloc_r>:
 c10b6dc:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 c10b6e0:	e2516000 	subs	r6, r1, #0
 c10b6e4:	e24dd00c 	sub	sp, sp, #12
 c10b6e8:	e1a08000 	mov	r8, r0
 c10b6ec:	e1a07002 	mov	r7, r2
 c10b6f0:	0a0000f8 	beq	c10bad8 <_realloc_r+0x3fc>
 c10b6f4:	ebfff5c9 	bl	c108e20 <__malloc_lock>
 c10b6f8:	e287400b 	add	r4, r7, #11
 c10b6fc:	e3540016 	cmp	r4, #22
 c10b700:	83c44007 	bichi	r4, r4, #7
 c10b704:	93a02010 	movls	r2, #16
 c10b708:	81a00fa4 	lsrhi	r0, r4, #31
 c10b70c:	93a00000 	movls	r0, #0
 c10b710:	91a04002 	movls	r4, r2
 c10b714:	81a02004 	movhi	r2, r4
 c10b718:	e1540007 	cmp	r4, r7
 c10b71c:	33800001 	orrcc	r0, r0, #1
 c10b720:	e3500000 	cmp	r0, #0
 c10b724:	e2469008 	sub	r9, r6, #8
 c10b728:	13a0300c 	movne	r3, #12
 c10b72c:	e599c004 	ldr	ip, [r9, #4]
 c10b730:	13a07000 	movne	r7, #0
 c10b734:	15883000 	strne	r3, [r8]
 c10b738:	1a00005c 	bne	c10b8b0 <_realloc_r+0x1d4>
 c10b73c:	e3ccb003 	bic	fp, ip, #3
 c10b740:	e15b0002 	cmp	fp, r2
 c10b744:	a2897008 	addge	r7, r9, #8
 c10b748:	a1a0500b 	movge	r5, fp
 c10b74c:	aa00004b 	bge	c10b880 <_realloc_r+0x1a4>
 c10b750:	e59f3540 	ldr	r3, [pc, #1344]	; c10bc98 <_realloc_r+0x5bc>
 c10b754:	e593e008 	ldr	lr, [r3, #8]
 c10b758:	e089100b 	add	r1, r9, fp
 c10b75c:	e15e0001 	cmp	lr, r1
 c10b760:	0a0000e0 	beq	c10bae8 <_realloc_r+0x40c>
 c10b764:	e5915004 	ldr	r5, [r1, #4]
 c10b768:	e3c5a001 	bic	sl, r5, #1
 c10b76c:	e081a00a 	add	sl, r1, sl
 c10b770:	e59aa004 	ldr	sl, [sl, #4]
 c10b774:	e31a0001 	tst	sl, #1
 c10b778:	11a01000 	movne	r1, r0
 c10b77c:	0a00005d 	beq	c10b8f8 <_realloc_r+0x21c>
 c10b780:	e31c0001 	tst	ip, #1
 c10b784:	1a000065 	bne	c10b920 <_realloc_r+0x244>
 c10b788:	e516a008 	ldr	sl, [r6, #-8]
 c10b78c:	e06aa009 	rsb	sl, sl, r9
 c10b790:	e59ac004 	ldr	ip, [sl, #4]
 c10b794:	e3510000 	cmp	r1, #0
 c10b798:	e3ccc003 	bic	ip, ip, #3
 c10b79c:	0a000099 	beq	c10ba08 <_realloc_r+0x32c>
 c10b7a0:	e151000e 	cmp	r1, lr
 c10b7a4:	0a0000ed 	beq	c10bb60 <_realloc_r+0x484>
 c10b7a8:	e08cc00b 	add	ip, ip, fp
 c10b7ac:	e080500c 	add	r5, r0, ip
 c10b7b0:	e1520005 	cmp	r2, r5
 c10b7b4:	e58dc004 	str	ip, [sp, #4]
 c10b7b8:	ca000094 	bgt	c10ba10 <_realloc_r+0x334>
 c10b7bc:	e2812008 	add	r2, r1, #8
 c10b7c0:	e892000c 	ldm	r2, {r2, r3}
 c10b7c4:	e5832008 	str	r2, [r3, #8]
 c10b7c8:	e582300c 	str	r3, [r2, #12]
 c10b7cc:	e1a0700a 	mov	r7, sl
 c10b7d0:	e59a300c 	ldr	r3, [sl, #12]
 c10b7d4:	e5b71008 	ldr	r1, [r7, #8]!
 c10b7d8:	e24b2004 	sub	r2, fp, #4
 c10b7dc:	e3520024 	cmp	r2, #36	; 0x24
 c10b7e0:	e581300c 	str	r3, [r1, #12]
 c10b7e4:	e5831008 	str	r1, [r3, #8]
 c10b7e8:	8a00011e 	bhi	c10bc68 <_realloc_r+0x58c>
 c10b7ec:	e3520013 	cmp	r2, #19
 c10b7f0:	e1a01007 	mov	r1, r7
 c10b7f4:	9a000017 	bls	c10b858 <_realloc_r+0x17c>
 c10b7f8:	e1a03006 	mov	r3, r6
 c10b7fc:	e4931004 	ldr	r1, [r3], #4
 c10b800:	e58a1008 	str	r1, [sl, #8]
 c10b804:	e5961004 	ldr	r1, [r6, #4]
 c10b808:	e352001b 	cmp	r2, #27
 c10b80c:	e58a100c 	str	r1, [sl, #12]
 c10b810:	e2836004 	add	r6, r3, #4
 c10b814:	e28a1010 	add	r1, sl, #16
 c10b818:	9a00000e 	bls	c10b858 <_realloc_r+0x17c>
 c10b81c:	e5933004 	ldr	r3, [r3, #4]
 c10b820:	e58a3010 	str	r3, [sl, #16]
 c10b824:	e5961004 	ldr	r1, [r6, #4]
 c10b828:	e3520024 	cmp	r2, #36	; 0x24
 c10b82c:	e2863004 	add	r3, r6, #4
 c10b830:	e58a1014 	str	r1, [sl, #20]
 c10b834:	e2866008 	add	r6, r6, #8
 c10b838:	e28a1018 	add	r1, sl, #24
 c10b83c:	1a000005 	bne	c10b858 <_realloc_r+0x17c>
 c10b840:	e5933004 	ldr	r3, [r3, #4]
 c10b844:	e58a3018 	str	r3, [sl, #24]
 c10b848:	e5963004 	ldr	r3, [r6, #4]
 c10b84c:	e58a301c 	str	r3, [sl, #28]
 c10b850:	e28a1020 	add	r1, sl, #32
 c10b854:	e2866008 	add	r6, r6, #8
 c10b858:	e1a02006 	mov	r2, r6
 c10b85c:	e4920004 	ldr	r0, [r2], #4
 c10b860:	e1a03001 	mov	r3, r1
 c10b864:	e4830004 	str	r0, [r3], #4
 c10b868:	e5960004 	ldr	r0, [r6, #4]
 c10b86c:	e5810004 	str	r0, [r1, #4]
 c10b870:	e5922004 	ldr	r2, [r2, #4]
 c10b874:	e5832004 	str	r2, [r3, #4]
 c10b878:	e59ac004 	ldr	ip, [sl, #4]
 c10b87c:	e1a0900a 	mov	r9, sl
 c10b880:	e0643005 	rsb	r3, r4, r5
 c10b884:	e353000f 	cmp	r3, #15
 c10b888:	8a00000c 	bhi	c10b8c0 <_realloc_r+0x1e4>
 c10b88c:	e20cc001 	and	ip, ip, #1
 c10b890:	e18cc005 	orr	ip, ip, r5
 c10b894:	e589c004 	str	ip, [r9, #4]
 c10b898:	e0899005 	add	r9, r9, r5
 c10b89c:	e5993004 	ldr	r3, [r9, #4]
 c10b8a0:	e3833001 	orr	r3, r3, #1
 c10b8a4:	e5893004 	str	r3, [r9, #4]
 c10b8a8:	e1a00008 	mov	r0, r8
 c10b8ac:	ebfff55c 	bl	c108e24 <__malloc_unlock>
 c10b8b0:	e1a00007 	mov	r0, r7
 c10b8b4:	e28dd00c 	add	sp, sp, #12
 c10b8b8:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 c10b8bc:	e12fff1e 	bx	lr
 c10b8c0:	e20cc001 	and	ip, ip, #1
 c10b8c4:	e0891004 	add	r1, r9, r4
 c10b8c8:	e3832001 	orr	r2, r3, #1
 c10b8cc:	e18c4004 	orr	r4, ip, r4
 c10b8d0:	e5894004 	str	r4, [r9, #4]
 c10b8d4:	e5812004 	str	r2, [r1, #4]
 c10b8d8:	e0813003 	add	r3, r1, r3
 c10b8dc:	e5932004 	ldr	r2, [r3, #4]
 c10b8e0:	e3822001 	orr	r2, r2, #1
 c10b8e4:	e5832004 	str	r2, [r3, #4]
 c10b8e8:	e1a00008 	mov	r0, r8
 c10b8ec:	e2811008 	add	r1, r1, #8
 c10b8f0:	ebfffe56 	bl	c10b250 <_free_r>
 c10b8f4:	eaffffeb 	b	c10b8a8 <_realloc_r+0x1cc>
 c10b8f8:	e3c50003 	bic	r0, r5, #3
 c10b8fc:	e080500b 	add	r5, r0, fp
 c10b900:	e1520005 	cmp	r2, r5
 c10b904:	caffff9d 	bgt	c10b780 <_realloc_r+0xa4>
 c10b908:	e2812008 	add	r2, r1, #8
 c10b90c:	e892000c 	ldm	r2, {r2, r3}
 c10b910:	e2897008 	add	r7, r9, #8
 c10b914:	e582300c 	str	r3, [r2, #12]
 c10b918:	e5832008 	str	r2, [r3, #8]
 c10b91c:	eaffffd7 	b	c10b880 <_realloc_r+0x1a4>
 c10b920:	e1a01007 	mov	r1, r7
 c10b924:	e1a00008 	mov	r0, r8
 c10b928:	ebfff2c8 	bl	c108450 <_malloc_r>
 c10b92c:	e2507000 	subs	r7, r0, #0
 c10b930:	0affffdc 	beq	c10b8a8 <_realloc_r+0x1cc>
 c10b934:	e599c004 	ldr	ip, [r9, #4]
 c10b938:	e3cc2001 	bic	r2, ip, #1
 c10b93c:	e2473008 	sub	r3, r7, #8
 c10b940:	e0892002 	add	r2, r9, r2
 c10b944:	e1530002 	cmp	r3, r2
 c10b948:	0a0000c1 	beq	c10bc54 <_realloc_r+0x578>
 c10b94c:	e24b2004 	sub	r2, fp, #4
 c10b950:	e3520024 	cmp	r2, #36	; 0x24
 c10b954:	8a00007e 	bhi	c10bb54 <_realloc_r+0x478>
 c10b958:	e3520013 	cmp	r2, #19
 c10b95c:	e1a01006 	mov	r1, r6
 c10b960:	e1a03007 	mov	r3, r7
 c10b964:	9a000019 	bls	c10b9d0 <_realloc_r+0x2f4>
 c10b968:	e1a0c006 	mov	ip, r6
 c10b96c:	e49c3004 	ldr	r3, [ip], #4
 c10b970:	e1a00007 	mov	r0, r7
 c10b974:	e4803004 	str	r3, [r0], #4
 c10b978:	e5963004 	ldr	r3, [r6, #4]
 c10b97c:	e352001b 	cmp	r2, #27
 c10b980:	e5873004 	str	r3, [r7, #4]
 c10b984:	e28c1004 	add	r1, ip, #4
 c10b988:	e2803004 	add	r3, r0, #4
 c10b98c:	9a00000f 	bls	c10b9d0 <_realloc_r+0x2f4>
 c10b990:	e59cc004 	ldr	ip, [ip, #4]
 c10b994:	e580c004 	str	ip, [r0, #4]
 c10b998:	e591e004 	ldr	lr, [r1, #4]
 c10b99c:	e3520024 	cmp	r2, #36	; 0x24
 c10b9a0:	e2830004 	add	r0, r3, #4
 c10b9a4:	e281c004 	add	ip, r1, #4
 c10b9a8:	e583e004 	str	lr, [r3, #4]
 c10b9ac:	e2811008 	add	r1, r1, #8
 c10b9b0:	e2833008 	add	r3, r3, #8
 c10b9b4:	1a000005 	bne	c10b9d0 <_realloc_r+0x2f4>
 c10b9b8:	e59c2004 	ldr	r2, [ip, #4]
 c10b9bc:	e5802004 	str	r2, [r0, #4]
 c10b9c0:	e5912004 	ldr	r2, [r1, #4]
 c10b9c4:	e2811008 	add	r1, r1, #8
 c10b9c8:	e5832004 	str	r2, [r3, #4]
 c10b9cc:	e2833008 	add	r3, r3, #8
 c10b9d0:	e1a00001 	mov	r0, r1
 c10b9d4:	e490c004 	ldr	ip, [r0], #4
 c10b9d8:	e1a02003 	mov	r2, r3
 c10b9dc:	e482c004 	str	ip, [r2], #4
 c10b9e0:	e5911004 	ldr	r1, [r1, #4]
 c10b9e4:	e5831004 	str	r1, [r3, #4]
 c10b9e8:	e5903004 	ldr	r3, [r0, #4]
 c10b9ec:	e5823004 	str	r3, [r2, #4]
 c10b9f0:	e1a00008 	mov	r0, r8
 c10b9f4:	e1a01006 	mov	r1, r6
 c10b9f8:	ebfffe14 	bl	c10b250 <_free_r>
 c10b9fc:	e1a00008 	mov	r0, r8
 c10ba00:	ebfff507 	bl	c108e24 <__malloc_unlock>
 c10ba04:	eaffffa9 	b	c10b8b0 <_realloc_r+0x1d4>
 c10ba08:	e08cc00b 	add	ip, ip, fp
 c10ba0c:	e58dc004 	str	ip, [sp, #4]
 c10ba10:	e59d1004 	ldr	r1, [sp, #4]
 c10ba14:	e1520001 	cmp	r2, r1
 c10ba18:	caffffc0 	bgt	c10b920 <_realloc_r+0x244>
 c10ba1c:	e1a0700a 	mov	r7, sl
 c10ba20:	e59a300c 	ldr	r3, [sl, #12]
 c10ba24:	e5b71008 	ldr	r1, [r7, #8]!
 c10ba28:	e24b2004 	sub	r2, fp, #4
 c10ba2c:	e3520024 	cmp	r2, #36	; 0x24
 c10ba30:	e581300c 	str	r3, [r1, #12]
 c10ba34:	e5831008 	str	r1, [r3, #8]
 c10ba38:	8a00003e 	bhi	c10bb38 <_realloc_r+0x45c>
 c10ba3c:	e3520013 	cmp	r2, #19
 c10ba40:	e1a01007 	mov	r1, r7
 c10ba44:	9a000017 	bls	c10baa8 <_realloc_r+0x3cc>
 c10ba48:	e1a03006 	mov	r3, r6
 c10ba4c:	e4931004 	ldr	r1, [r3], #4
 c10ba50:	e58a1008 	str	r1, [sl, #8]
 c10ba54:	e5961004 	ldr	r1, [r6, #4]
 c10ba58:	e352001b 	cmp	r2, #27
 c10ba5c:	e58a100c 	str	r1, [sl, #12]
 c10ba60:	e2836004 	add	r6, r3, #4
 c10ba64:	e28a1010 	add	r1, sl, #16
 c10ba68:	9a00000e 	bls	c10baa8 <_realloc_r+0x3cc>
 c10ba6c:	e5933004 	ldr	r3, [r3, #4]
 c10ba70:	e58a3010 	str	r3, [sl, #16]
 c10ba74:	e5961004 	ldr	r1, [r6, #4]
 c10ba78:	e3520024 	cmp	r2, #36	; 0x24
 c10ba7c:	e2863004 	add	r3, r6, #4
 c10ba80:	e58a1014 	str	r1, [sl, #20]
 c10ba84:	e2866008 	add	r6, r6, #8
 c10ba88:	e28a1018 	add	r1, sl, #24
 c10ba8c:	1a000005 	bne	c10baa8 <_realloc_r+0x3cc>
 c10ba90:	e5933004 	ldr	r3, [r3, #4]
 c10ba94:	e58a3018 	str	r3, [sl, #24]
 c10ba98:	e5963004 	ldr	r3, [r6, #4]
 c10ba9c:	e58a301c 	str	r3, [sl, #28]
 c10baa0:	e28a1020 	add	r1, sl, #32
 c10baa4:	e2866008 	add	r6, r6, #8
 c10baa8:	e1a02006 	mov	r2, r6
 c10baac:	e4920004 	ldr	r0, [r2], #4
 c10bab0:	e1a03001 	mov	r3, r1
 c10bab4:	e4830004 	str	r0, [r3], #4
 c10bab8:	e5960004 	ldr	r0, [r6, #4]
 c10babc:	e5810004 	str	r0, [r1, #4]
 c10bac0:	e5922004 	ldr	r2, [r2, #4]
 c10bac4:	e5832004 	str	r2, [r3, #4]
 c10bac8:	e59d5004 	ldr	r5, [sp, #4]
 c10bacc:	e59ac004 	ldr	ip, [sl, #4]
 c10bad0:	e1a0900a 	mov	r9, sl
 c10bad4:	eaffff69 	b	c10b880 <_realloc_r+0x1a4>
 c10bad8:	e1a01002 	mov	r1, r2
 c10badc:	ebfff25b 	bl	c108450 <_malloc_r>
 c10bae0:	e1a07000 	mov	r7, r0
 c10bae4:	eaffff71 	b	c10b8b0 <_realloc_r+0x1d4>
 c10bae8:	e59e0004 	ldr	r0, [lr, #4]
 c10baec:	e3c00003 	bic	r0, r0, #3
 c10baf0:	e080100b 	add	r1, r0, fp
 c10baf4:	e2845010 	add	r5, r4, #16
 c10baf8:	e1510005 	cmp	r1, r5
 c10bafc:	b1a0100e 	movlt	r1, lr
 c10bb00:	baffff1e 	blt	c10b780 <_realloc_r+0xa4>
 c10bb04:	e0641001 	rsb	r1, r4, r1
 c10bb08:	e0892004 	add	r2, r9, r4
 c10bb0c:	e3811001 	orr	r1, r1, #1
 c10bb10:	e5821004 	str	r1, [r2, #4]
 c10bb14:	e5991004 	ldr	r1, [r9, #4]
 c10bb18:	e2011001 	and	r1, r1, #1
 c10bb1c:	e1844001 	orr	r4, r4, r1
 c10bb20:	e5894004 	str	r4, [r9, #4]
 c10bb24:	e1a00008 	mov	r0, r8
 c10bb28:	e5832008 	str	r2, [r3, #8]
 c10bb2c:	e1a07006 	mov	r7, r6
 c10bb30:	ebfff4bb 	bl	c108e24 <__malloc_unlock>
 c10bb34:	eaffff5d 	b	c10b8b0 <_realloc_r+0x1d4>
 c10bb38:	e1a00007 	mov	r0, r7
 c10bb3c:	e1a01006 	mov	r1, r6
 c10bb40:	ebfffe5b 	bl	c10b4b4 <memmove>
 c10bb44:	e1a0900a 	mov	r9, sl
 c10bb48:	e59ac004 	ldr	ip, [sl, #4]
 c10bb4c:	e59d5004 	ldr	r5, [sp, #4]
 c10bb50:	eaffff4a 	b	c10b880 <_realloc_r+0x1a4>
 c10bb54:	e1a01006 	mov	r1, r6
 c10bb58:	ebfffe55 	bl	c10b4b4 <memmove>
 c10bb5c:	eaffffa3 	b	c10b9f0 <_realloc_r+0x314>
 c10bb60:	e08cc00b 	add	ip, ip, fp
 c10bb64:	e080500c 	add	r5, r0, ip
 c10bb68:	e2841010 	add	r1, r4, #16
 c10bb6c:	e1550001 	cmp	r5, r1
 c10bb70:	e58dc004 	str	ip, [sp, #4]
 c10bb74:	baffffa5 	blt	c10ba10 <_realloc_r+0x334>
 c10bb78:	e1a0700a 	mov	r7, sl
 c10bb7c:	e59a100c 	ldr	r1, [sl, #12]
 c10bb80:	e5b70008 	ldr	r0, [r7, #8]!
 c10bb84:	e24b2004 	sub	r2, fp, #4
 c10bb88:	e3520024 	cmp	r2, #36	; 0x24
 c10bb8c:	e580100c 	str	r1, [r0, #12]
 c10bb90:	e5810008 	str	r0, [r1, #8]
 c10bb94:	8a000039 	bhi	c10bc80 <_realloc_r+0x5a4>
 c10bb98:	e3520013 	cmp	r2, #19
 c10bb9c:	e1a00007 	mov	r0, r7
 c10bba0:	9a000017 	bls	c10bc04 <_realloc_r+0x528>
 c10bba4:	e1a01006 	mov	r1, r6
 c10bba8:	e4910004 	ldr	r0, [r1], #4
 c10bbac:	e58a0008 	str	r0, [sl, #8]
 c10bbb0:	e5960004 	ldr	r0, [r6, #4]
 c10bbb4:	e352001b 	cmp	r2, #27
 c10bbb8:	e58a000c 	str	r0, [sl, #12]
 c10bbbc:	e2816004 	add	r6, r1, #4
 c10bbc0:	e28a0010 	add	r0, sl, #16
 c10bbc4:	9a00000e 	bls	c10bc04 <_realloc_r+0x528>
 c10bbc8:	e5911004 	ldr	r1, [r1, #4]
 c10bbcc:	e58a1010 	str	r1, [sl, #16]
 c10bbd0:	e5960004 	ldr	r0, [r6, #4]
 c10bbd4:	e3520024 	cmp	r2, #36	; 0x24
 c10bbd8:	e2861004 	add	r1, r6, #4
 c10bbdc:	e58a0014 	str	r0, [sl, #20]
 c10bbe0:	e2866008 	add	r6, r6, #8
 c10bbe4:	e28a0018 	add	r0, sl, #24
 c10bbe8:	1a000005 	bne	c10bc04 <_realloc_r+0x528>
 c10bbec:	e5912004 	ldr	r2, [r1, #4]
 c10bbf0:	e58a2018 	str	r2, [sl, #24]
 c10bbf4:	e5962004 	ldr	r2, [r6, #4]
 c10bbf8:	e58a201c 	str	r2, [sl, #28]
 c10bbfc:	e28a0020 	add	r0, sl, #32
 c10bc00:	e2866008 	add	r6, r6, #8
 c10bc04:	e1a01006 	mov	r1, r6
 c10bc08:	e491c004 	ldr	ip, [r1], #4
 c10bc0c:	e1a02000 	mov	r2, r0
 c10bc10:	e482c004 	str	ip, [r2], #4
 c10bc14:	e596c004 	ldr	ip, [r6, #4]
 c10bc18:	e580c004 	str	ip, [r0, #4]
 c10bc1c:	e5911004 	ldr	r1, [r1, #4]
 c10bc20:	e5821004 	str	r1, [r2, #4]
 c10bc24:	e0641005 	rsb	r1, r4, r5
 c10bc28:	e08a2004 	add	r2, sl, r4
 c10bc2c:	e3811001 	orr	r1, r1, #1
 c10bc30:	e5821004 	str	r1, [r2, #4]
 c10bc34:	e59a1004 	ldr	r1, [sl, #4]
 c10bc38:	e2011001 	and	r1, r1, #1
 c10bc3c:	e1844001 	orr	r4, r4, r1
 c10bc40:	e58a4004 	str	r4, [sl, #4]
 c10bc44:	e1a00008 	mov	r0, r8
 c10bc48:	e5832008 	str	r2, [r3, #8]
 c10bc4c:	ebfff474 	bl	c108e24 <__malloc_unlock>
 c10bc50:	eaffff16 	b	c10b8b0 <_realloc_r+0x1d4>
 c10bc54:	e5175004 	ldr	r5, [r7, #-4]
 c10bc58:	e3c55003 	bic	r5, r5, #3
 c10bc5c:	e085500b 	add	r5, r5, fp
 c10bc60:	e2897008 	add	r7, r9, #8
 c10bc64:	eaffff05 	b	c10b880 <_realloc_r+0x1a4>
 c10bc68:	e1a00007 	mov	r0, r7
 c10bc6c:	e1a01006 	mov	r1, r6
 c10bc70:	ebfffe0f 	bl	c10b4b4 <memmove>
 c10bc74:	e1a0900a 	mov	r9, sl
 c10bc78:	e59ac004 	ldr	ip, [sl, #4]
 c10bc7c:	eafffeff 	b	c10b880 <_realloc_r+0x1a4>
 c10bc80:	e1a00007 	mov	r0, r7
 c10bc84:	e1a01006 	mov	r1, r6
 c10bc88:	e58d3000 	str	r3, [sp]
 c10bc8c:	ebfffe08 	bl	c10b4b4 <memmove>
 c10bc90:	e59d3000 	ldr	r3, [sp]
 c10bc94:	eaffffe2 	b	c10bc24 <_realloc_r+0x548>
 c10bc98:	0c100524 	.word	0x0c100524

0c10bc9c <cleanup_glue>:
 c10bc9c:	e92d4038 	push	{r3, r4, r5, lr}
 c10bca0:	e1a04001 	mov	r4, r1
 c10bca4:	e5911000 	ldr	r1, [r1]
 c10bca8:	e3510000 	cmp	r1, #0
 c10bcac:	e1a05000 	mov	r5, r0
 c10bcb0:	1bfffff9 	blne	c10bc9c <cleanup_glue>
 c10bcb4:	e1a00005 	mov	r0, r5
 c10bcb8:	e1a01004 	mov	r1, r4
 c10bcbc:	ebfffd63 	bl	c10b250 <_free_r>
 c10bcc0:	e8bd4038 	pop	{r3, r4, r5, lr}
 c10bcc4:	e12fff1e 	bx	lr

0c10bcc8 <_reclaim_reent>:
 c10bcc8:	e59f30fc 	ldr	r3, [pc, #252]	; c10bdcc <_reclaim_reent+0x104>
 c10bccc:	e5933000 	ldr	r3, [r3]
 c10bcd0:	e1500003 	cmp	r0, r3
 c10bcd4:	e92d4070 	push	{r4, r5, r6, lr}
 c10bcd8:	e1a05000 	mov	r5, r0
 c10bcdc:	0a00002e 	beq	c10bd9c <_reclaim_reent+0xd4>
 c10bce0:	e590304c 	ldr	r3, [r0, #76]	; 0x4c
 c10bce4:	e3530000 	cmp	r3, #0
 c10bce8:	0a000013 	beq	c10bd3c <_reclaim_reent+0x74>
 c10bcec:	e3a02000 	mov	r2, #0
 c10bcf0:	e1a06002 	mov	r6, r2
 c10bcf4:	e7931102 	ldr	r1, [r3, r2, lsl #2]
 c10bcf8:	e3510000 	cmp	r1, #0
 c10bcfc:	1a000001 	bne	c10bd08 <_reclaim_reent+0x40>
 c10bd00:	ea000006 	b	c10bd20 <_reclaim_reent+0x58>
 c10bd04:	e1a01004 	mov	r1, r4
 c10bd08:	e5914000 	ldr	r4, [r1]
 c10bd0c:	e1a00005 	mov	r0, r5
 c10bd10:	ebfffd4e 	bl	c10b250 <_free_r>
 c10bd14:	e3540000 	cmp	r4, #0
 c10bd18:	1afffff9 	bne	c10bd04 <_reclaim_reent+0x3c>
 c10bd1c:	e595304c 	ldr	r3, [r5, #76]	; 0x4c
 c10bd20:	e2866001 	add	r6, r6, #1
 c10bd24:	e3560020 	cmp	r6, #32
 c10bd28:	e1a02006 	mov	r2, r6
 c10bd2c:	1afffff0 	bne	c10bcf4 <_reclaim_reent+0x2c>
 c10bd30:	e1a00005 	mov	r0, r5
 c10bd34:	e1a01003 	mov	r1, r3
 c10bd38:	ebfffd44 	bl	c10b250 <_free_r>
 c10bd3c:	e5951040 	ldr	r1, [r5, #64]	; 0x40
 c10bd40:	e3510000 	cmp	r1, #0
 c10bd44:	11a00005 	movne	r0, r5
 c10bd48:	1bfffd40 	blne	c10b250 <_free_r>
 c10bd4c:	e5951148 	ldr	r1, [r5, #328]	; 0x148
 c10bd50:	e3510000 	cmp	r1, #0
 c10bd54:	0a000009 	beq	c10bd80 <_reclaim_reent+0xb8>
 c10bd58:	e2856f53 	add	r6, r5, #332	; 0x14c
 c10bd5c:	e1510006 	cmp	r1, r6
 c10bd60:	1a000001 	bne	c10bd6c <_reclaim_reent+0xa4>
 c10bd64:	ea000005 	b	c10bd80 <_reclaim_reent+0xb8>
 c10bd68:	e1a01004 	mov	r1, r4
 c10bd6c:	e5914000 	ldr	r4, [r1]
 c10bd70:	e1a00005 	mov	r0, r5
 c10bd74:	ebfffd35 	bl	c10b250 <_free_r>
 c10bd78:	e1560004 	cmp	r6, r4
 c10bd7c:	1afffff9 	bne	c10bd68 <_reclaim_reent+0xa0>
 c10bd80:	e5951054 	ldr	r1, [r5, #84]	; 0x54
 c10bd84:	e3510000 	cmp	r1, #0
 c10bd88:	11a00005 	movne	r0, r5
 c10bd8c:	1bfffd2f 	blne	c10b250 <_free_r>
 c10bd90:	e5953038 	ldr	r3, [r5, #56]	; 0x38
 c10bd94:	e3530000 	cmp	r3, #0
 c10bd98:	1a000001 	bne	c10bda4 <_reclaim_reent+0xdc>
 c10bd9c:	e8bd4070 	pop	{r4, r5, r6, lr}
 c10bda0:	e12fff1e 	bx	lr
 c10bda4:	e1a00005 	mov	r0, r5
 c10bda8:	e595c03c 	ldr	ip, [r5, #60]	; 0x3c
 c10bdac:	e1a0e00f 	mov	lr, pc
 c10bdb0:	e12fff1c 	bx	ip
 c10bdb4:	e59512e0 	ldr	r1, [r5, #736]	; 0x2e0
 c10bdb8:	e3510000 	cmp	r1, #0
 c10bdbc:	0afffff6 	beq	c10bd9c <_reclaim_reent+0xd4>
 c10bdc0:	e1a00005 	mov	r0, r5
 c10bdc4:	e8bd4070 	pop	{r4, r5, r6, lr}
 c10bdc8:	eaffffb3 	b	c10bc9c <cleanup_glue>
 c10bdcc:	0c100078 	.word	0x0c100078

0c10bdd0 <_wrapup_reent>:
 c10bdd0:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
 c10bdd4:	e2508000 	subs	r8, r0, #0
 c10bdd8:	059f3064 	ldreq	r3, [pc, #100]	; c10be44 <_wrapup_reent+0x74>
 c10bddc:	05938000 	ldreq	r8, [r3]
 c10bde0:	e5987148 	ldr	r7, [r8, #328]	; 0x148
 c10bde4:	e3570000 	cmp	r7, #0
 c10bde8:	0a00000e 	beq	c10be28 <_wrapup_reent+0x58>
 c10bdec:	e5976004 	ldr	r6, [r7, #4]
 c10bdf0:	e3560000 	cmp	r6, #0
 c10bdf4:	da000008 	ble	c10be1c <_wrapup_reent+0x4c>
 c10bdf8:	e2865002 	add	r5, r6, #2
 c10bdfc:	e0875105 	add	r5, r7, r5, lsl #2
 c10be00:	e3a04000 	mov	r4, #0
 c10be04:	e5353004 	ldr	r3, [r5, #-4]!
 c10be08:	e2844001 	add	r4, r4, #1
 c10be0c:	e1a0e00f 	mov	lr, pc
 c10be10:	e12fff13 	bx	r3
 c10be14:	e1540006 	cmp	r4, r6
 c10be18:	1afffff9 	bne	c10be04 <_wrapup_reent+0x34>
 c10be1c:	e5977000 	ldr	r7, [r7]
 c10be20:	e3570000 	cmp	r7, #0
 c10be24:	1afffff0 	bne	c10bdec <_wrapup_reent+0x1c>
 c10be28:	e598303c 	ldr	r3, [r8, #60]	; 0x3c
 c10be2c:	e3530000 	cmp	r3, #0
 c10be30:	11a00008 	movne	r0, r8
 c10be34:	11a0e00f 	movne	lr, pc
 c10be38:	112fff13 	bxne	r3
 c10be3c:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
 c10be40:	e12fff1e 	bx	lr
 c10be44:	0c100078 	.word	0x0c100078

0c10be48 <__aeabi_uidiv>:
 c10be48:	e2512001 	subs	r2, r1, #1
 c10be4c:	012fff1e 	bxeq	lr
 c10be50:	3a000036 	bcc	c10bf30 <__aeabi_uidiv+0xe8>
 c10be54:	e1500001 	cmp	r0, r1
 c10be58:	9a000022 	bls	c10bee8 <__aeabi_uidiv+0xa0>
 c10be5c:	e1110002 	tst	r1, r2
 c10be60:	0a000023 	beq	c10bef4 <__aeabi_uidiv+0xac>
 c10be64:	e311020e 	tst	r1, #-536870912	; 0xe0000000
 c10be68:	01a01181 	lsleq	r1, r1, #3
 c10be6c:	03a03008 	moveq	r3, #8
 c10be70:	13a03001 	movne	r3, #1
 c10be74:	e3510201 	cmp	r1, #268435456	; 0x10000000
 c10be78:	31510000 	cmpcc	r1, r0
 c10be7c:	31a01201 	lslcc	r1, r1, #4
 c10be80:	31a03203 	lslcc	r3, r3, #4
 c10be84:	3afffffa 	bcc	c10be74 <__aeabi_uidiv+0x2c>
 c10be88:	e3510102 	cmp	r1, #-2147483648	; 0x80000000
 c10be8c:	31510000 	cmpcc	r1, r0
 c10be90:	31a01081 	lslcc	r1, r1, #1
 c10be94:	31a03083 	lslcc	r3, r3, #1
 c10be98:	3afffffa 	bcc	c10be88 <__aeabi_uidiv+0x40>
 c10be9c:	e3a02000 	mov	r2, #0
 c10bea0:	e1500001 	cmp	r0, r1
 c10bea4:	20400001 	subcs	r0, r0, r1
 c10bea8:	21822003 	orrcs	r2, r2, r3
 c10beac:	e15000a1 	cmp	r0, r1, lsr #1
 c10beb0:	204000a1 	subcs	r0, r0, r1, lsr #1
 c10beb4:	218220a3 	orrcs	r2, r2, r3, lsr #1
 c10beb8:	e1500121 	cmp	r0, r1, lsr #2
 c10bebc:	20400121 	subcs	r0, r0, r1, lsr #2
 c10bec0:	21822123 	orrcs	r2, r2, r3, lsr #2
 c10bec4:	e15001a1 	cmp	r0, r1, lsr #3
 c10bec8:	204001a1 	subcs	r0, r0, r1, lsr #3
 c10becc:	218221a3 	orrcs	r2, r2, r3, lsr #3
 c10bed0:	e3500000 	cmp	r0, #0
 c10bed4:	11b03223 	lsrsne	r3, r3, #4
 c10bed8:	11a01221 	lsrne	r1, r1, #4
 c10bedc:	1affffef 	bne	c10bea0 <__aeabi_uidiv+0x58>
 c10bee0:	e1a00002 	mov	r0, r2
 c10bee4:	e12fff1e 	bx	lr
 c10bee8:	03a00001 	moveq	r0, #1
 c10beec:	13a00000 	movne	r0, #0
 c10bef0:	e12fff1e 	bx	lr
 c10bef4:	e3510801 	cmp	r1, #65536	; 0x10000
 c10bef8:	21a01821 	lsrcs	r1, r1, #16
 c10befc:	23a02010 	movcs	r2, #16
 c10bf00:	33a02000 	movcc	r2, #0
 c10bf04:	e3510c01 	cmp	r1, #256	; 0x100
 c10bf08:	21a01421 	lsrcs	r1, r1, #8
 c10bf0c:	22822008 	addcs	r2, r2, #8
 c10bf10:	e3510010 	cmp	r1, #16
 c10bf14:	21a01221 	lsrcs	r1, r1, #4
 c10bf18:	22822004 	addcs	r2, r2, #4
 c10bf1c:	e3510004 	cmp	r1, #4
 c10bf20:	82822003 	addhi	r2, r2, #3
 c10bf24:	908220a1 	addls	r2, r2, r1, lsr #1
 c10bf28:	e1a00230 	lsr	r0, r0, r2
 c10bf2c:	e12fff1e 	bx	lr
 c10bf30:	e3500000 	cmp	r0, #0
 c10bf34:	13e00000 	mvnne	r0, #0
 c10bf38:	eaffe056 	b	c104098 <__aeabi_idiv0>

0c10bf3c <__aeabi_uidivmod>:
 c10bf3c:	e3510000 	cmp	r1, #0
 c10bf40:	0afffffa 	beq	c10bf30 <__aeabi_uidiv+0xe8>
 c10bf44:	e92d4003 	push	{r0, r1, lr}
 c10bf48:	ebffffbe 	bl	c10be48 <__aeabi_uidiv>
 c10bf4c:	e8bd4006 	pop	{r1, r2, lr}
 c10bf50:	e0030092 	mul	r3, r2, r0
 c10bf54:	e0411003 	sub	r1, r1, r3
 c10bf58:	e12fff1e 	bx	lr

0c10bf5c <__gedf2>:
 c10bf5c:	e3e0c000 	mvn	ip, #0
 c10bf60:	ea000002 	b	c10bf70 <__cmpdf2+0x4>

0c10bf64 <__ledf2>:
 c10bf64:	e3a0c001 	mov	ip, #1
 c10bf68:	ea000000 	b	c10bf70 <__cmpdf2+0x4>

0c10bf6c <__cmpdf2>:
 c10bf6c:	e3a0c001 	mov	ip, #1
 c10bf70:	e52dc004 	push	{ip}		; (str ip, [sp, #-4]!)
 c10bf74:	e1a0c081 	lsl	ip, r1, #1
 c10bf78:	e1f0cacc 	mvns	ip, ip, asr #21
 c10bf7c:	e1a0c083 	lsl	ip, r3, #1
 c10bf80:	11f0cacc 	mvnsne	ip, ip, asr #21
 c10bf84:	0a00000e 	beq	c10bfc4 <__cmpdf2+0x58>
 c10bf88:	e28dd004 	add	sp, sp, #4
 c10bf8c:	e190c081 	orrs	ip, r0, r1, lsl #1
 c10bf90:	0192c083 	orrseq	ip, r2, r3, lsl #1
 c10bf94:	11310003 	teqne	r1, r3
 c10bf98:	01300002 	teqeq	r0, r2
 c10bf9c:	03a00000 	moveq	r0, #0
 c10bfa0:	012fff1e 	bxeq	lr
 c10bfa4:	e3700000 	cmn	r0, #0
 c10bfa8:	e1310003 	teq	r1, r3
 c10bfac:	51510003 	cmppl	r1, r3
 c10bfb0:	01500002 	cmpeq	r0, r2
 c10bfb4:	21a00fc3 	asrcs	r0, r3, #31
 c10bfb8:	31e00fc3 	mvncc	r0, r3, asr #31
 c10bfbc:	e3800001 	orr	r0, r0, #1
 c10bfc0:	e12fff1e 	bx	lr
 c10bfc4:	e1a0c081 	lsl	ip, r1, #1
 c10bfc8:	e1f0cacc 	mvns	ip, ip, asr #21
 c10bfcc:	1a000001 	bne	c10bfd8 <__cmpdf2+0x6c>
 c10bfd0:	e190c601 	orrs	ip, r0, r1, lsl #12
 c10bfd4:	1a000004 	bne	c10bfec <__cmpdf2+0x80>
 c10bfd8:	e1a0c083 	lsl	ip, r3, #1
 c10bfdc:	e1f0cacc 	mvns	ip, ip, asr #21
 c10bfe0:	1affffe8 	bne	c10bf88 <__cmpdf2+0x1c>
 c10bfe4:	e192c603 	orrs	ip, r2, r3, lsl #12
 c10bfe8:	0affffe6 	beq	c10bf88 <__cmpdf2+0x1c>
 c10bfec:	e49d0004 	pop	{r0}		; (ldr r0, [sp], #4)
 c10bff0:	e12fff1e 	bx	lr

0c10bff4 <__aeabi_cdrcmple>:
 c10bff4:	e1a0c000 	mov	ip, r0
 c10bff8:	e1a00002 	mov	r0, r2
 c10bffc:	e1a0200c 	mov	r2, ip
 c10c000:	e1a0c001 	mov	ip, r1
 c10c004:	e1a01003 	mov	r1, r3
 c10c008:	e1a0300c 	mov	r3, ip
 c10c00c:	eaffffff 	b	c10c010 <__aeabi_cdcmpeq>

0c10c010 <__aeabi_cdcmpeq>:
 c10c010:	e92d4001 	push	{r0, lr}
 c10c014:	ebffffd4 	bl	c10bf6c <__cmpdf2>
 c10c018:	e3500000 	cmp	r0, #0
 c10c01c:	43700000 	cmnmi	r0, #0
 c10c020:	e8bd4001 	pop	{r0, lr}
 c10c024:	e12fff1e 	bx	lr

0c10c028 <__aeabi_dcmpeq>:
 c10c028:	e52de008 	str	lr, [sp, #-8]!
 c10c02c:	ebfffff7 	bl	c10c010 <__aeabi_cdcmpeq>
 c10c030:	03a00001 	moveq	r0, #1
 c10c034:	13a00000 	movne	r0, #0
 c10c038:	e49de008 	ldr	lr, [sp], #8
 c10c03c:	e12fff1e 	bx	lr

0c10c040 <__aeabi_dcmplt>:
 c10c040:	e52de008 	str	lr, [sp, #-8]!
 c10c044:	ebfffff1 	bl	c10c010 <__aeabi_cdcmpeq>
 c10c048:	33a00001 	movcc	r0, #1
 c10c04c:	23a00000 	movcs	r0, #0
 c10c050:	e49de008 	ldr	lr, [sp], #8
 c10c054:	e12fff1e 	bx	lr

0c10c058 <__aeabi_dcmple>:
 c10c058:	e52de008 	str	lr, [sp, #-8]!
 c10c05c:	ebffffeb 	bl	c10c010 <__aeabi_cdcmpeq>
 c10c060:	93a00001 	movls	r0, #1
 c10c064:	83a00000 	movhi	r0, #0
 c10c068:	e49de008 	ldr	lr, [sp], #8
 c10c06c:	e12fff1e 	bx	lr

0c10c070 <__aeabi_dcmpge>:
 c10c070:	e52de008 	str	lr, [sp, #-8]!
 c10c074:	ebffffde 	bl	c10bff4 <__aeabi_cdrcmple>
 c10c078:	93a00001 	movls	r0, #1
 c10c07c:	83a00000 	movhi	r0, #0
 c10c080:	e49de008 	ldr	lr, [sp], #8
 c10c084:	e12fff1e 	bx	lr

0c10c088 <__aeabi_dcmpgt>:
 c10c088:	e52de008 	str	lr, [sp, #-8]!
 c10c08c:	ebffffd8 	bl	c10bff4 <__aeabi_cdrcmple>
 c10c090:	33a00001 	movcc	r0, #1
 c10c094:	23a00000 	movcs	r0, #0
 c10c098:	e49de008 	ldr	lr, [sp], #8
 c10c09c:	e12fff1e 	bx	lr

0c10c0a0 <__aeabi_uldivmod>:
 c10c0a0:	e3530000 	cmp	r3, #0
 c10c0a4:	03520000 	cmpeq	r2, #0
 c10c0a8:	1a000004 	bne	c10c0c0 <__aeabi_uldivmod+0x20>
 c10c0ac:	e3510000 	cmp	r1, #0
 c10c0b0:	03500000 	cmpeq	r0, #0
 c10c0b4:	13e01000 	mvnne	r1, #0
 c10c0b8:	13e00000 	mvnne	r0, #0
 c10c0bc:	eaffdff5 	b	c104098 <__aeabi_idiv0>
 c10c0c0:	e24dd008 	sub	sp, sp, #8
 c10c0c4:	e92d6000 	push	{sp, lr}
 c10c0c8:	eb000013 	bl	c10c11c <__gnu_uldivmod_helper>
 c10c0cc:	e59de004 	ldr	lr, [sp, #4]
 c10c0d0:	e28dd008 	add	sp, sp, #8
 c10c0d4:	e8bd000c 	pop	{r2, r3}
 c10c0d8:	e12fff1e 	bx	lr

0c10c0dc <__gnu_ldivmod_helper>:
 c10c0dc:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
 c10c0e0:	e1a04002 	mov	r4, r2
 c10c0e4:	e1a07003 	mov	r7, r3
 c10c0e8:	e1a05000 	mov	r5, r0
 c10c0ec:	e1a06001 	mov	r6, r1
 c10c0f0:	eb000019 	bl	c10c15c <__divdi3>
 c10c0f4:	e0070790 	mul	r7, r0, r7
 c10c0f8:	e0832490 	umull	r2, r3, r0, r4
 c10c0fc:	e0247491 	mla	r4, r1, r4, r7
 c10c100:	e0843003 	add	r3, r4, r3
 c10c104:	e0555002 	subs	r5, r5, r2
 c10c108:	e0c66003 	sbc	r6, r6, r3
 c10c10c:	e59d3018 	ldr	r3, [sp, #24]
 c10c110:	e8830060 	stm	r3, {r5, r6}
 c10c114:	e8bd40f8 	pop	{r3, r4, r5, r6, r7, lr}
 c10c118:	e12fff1e 	bx	lr

0c10c11c <__gnu_uldivmod_helper>:
 c10c11c:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
 c10c120:	e1a04002 	mov	r4, r2
 c10c124:	e1a07003 	mov	r7, r3
 c10c128:	e1a05000 	mov	r5, r0
 c10c12c:	e1a06001 	mov	r6, r1
 c10c130:	eb000133 	bl	c10c604 <__udivdi3>
 c10c134:	e0070790 	mul	r7, r0, r7
 c10c138:	e0832490 	umull	r2, r3, r0, r4
 c10c13c:	e0247491 	mla	r4, r1, r4, r7
 c10c140:	e0843003 	add	r3, r4, r3
 c10c144:	e0555002 	subs	r5, r5, r2
 c10c148:	e0c66003 	sbc	r6, r6, r3
 c10c14c:	e59d3018 	ldr	r3, [sp, #24]
 c10c150:	e8830060 	stm	r3, {r5, r6}
 c10c154:	e8bd40f8 	pop	{r3, r4, r5, r6, r7, lr}
 c10c158:	e12fff1e 	bx	lr

0c10c15c <__divdi3>:
 c10c15c:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 c10c160:	e3510000 	cmp	r1, #0
 c10c164:	e24dd014 	sub	sp, sp, #20
 c10c168:	e1a0c003 	mov	ip, r3
 c10c16c:	a3a07000 	movge	r7, #0
 c10c170:	ba000094 	blt	c10c3c8 <__divdi3+0x26c>
 c10c174:	e35c0000 	cmp	ip, #0
 c10c178:	ba00008e 	blt	c10c3b8 <__divdi3+0x25c>
 c10c17c:	e253a000 	subs	sl, r3, #0
 c10c180:	e1a0b000 	mov	fp, r0
 c10c184:	e1a08001 	mov	r8, r1
 c10c188:	e1a09002 	mov	r9, r2
 c10c18c:	e1a04002 	mov	r4, r2
 c10c190:	e1a05000 	mov	r5, r0
 c10c194:	e1a06001 	mov	r6, r1
 c10c198:	1a00003e 	bne	c10c298 <__divdi3+0x13c>
 c10c19c:	e1520001 	cmp	r2, r1
 c10c1a0:	9a00004c 	bls	c10c2d8 <__divdi3+0x17c>
 c10c1a4:	e1a00002 	mov	r0, r2
 c10c1a8:	eb000222 	bl	c10ca38 <__clzsi2>
 c10c1ac:	e3500000 	cmp	r0, #0
 c10c1b0:	12603020 	rsbne	r3, r0, #32
 c10c1b4:	11a0333b 	lsrne	r3, fp, r3
 c10c1b8:	11a04019 	lslne	r4, r9, r0
 c10c1bc:	11836018 	orrne	r6, r3, r8, lsl r0
 c10c1c0:	e1a09824 	lsr	r9, r4, #16
 c10c1c4:	11a0501b 	lslne	r5, fp, r0
 c10c1c8:	e1a01009 	mov	r1, r9
 c10c1cc:	e1a00006 	mov	r0, r6
 c10c1d0:	ebffff1c 	bl	c10be48 <__aeabi_uidiv>
 c10c1d4:	e1a01009 	mov	r1, r9
 c10c1d8:	e1a0a000 	mov	sl, r0
 c10c1dc:	e1a00006 	mov	r0, r6
 c10c1e0:	ebffff55 	bl	c10bf3c <__aeabi_uidivmod>
 c10c1e4:	e1a08804 	lsl	r8, r4, #16
 c10c1e8:	e1a08828 	lsr	r8, r8, #16
 c10c1ec:	e0030a98 	mul	r3, r8, sl
 c10c1f0:	e1a0b825 	lsr	fp, r5, #16
 c10c1f4:	e18bb801 	orr	fp, fp, r1, lsl #16
 c10c1f8:	e153000b 	cmp	r3, fp
 c10c1fc:	9a000005 	bls	c10c218 <__divdi3+0xbc>
 c10c200:	e09bb004 	adds	fp, fp, r4
 c10c204:	e24aa001 	sub	sl, sl, #1
 c10c208:	2a000002 	bcs	c10c218 <__divdi3+0xbc>
 c10c20c:	e153000b 	cmp	r3, fp
 c10c210:	824aa001 	subhi	sl, sl, #1
 c10c214:	808bb004 	addhi	fp, fp, r4
 c10c218:	e063b00b 	rsb	fp, r3, fp
 c10c21c:	e1a01009 	mov	r1, r9
 c10c220:	e1a0000b 	mov	r0, fp
 c10c224:	ebffff07 	bl	c10be48 <__aeabi_uidiv>
 c10c228:	e1a01009 	mov	r1, r9
 c10c22c:	e1a06000 	mov	r6, r0
 c10c230:	e1a0000b 	mov	r0, fp
 c10c234:	ebffff40 	bl	c10bf3c <__aeabi_uidivmod>
 c10c238:	e0080896 	mul	r8, r6, r8
 c10c23c:	e1a00805 	lsl	r0, r5, #16
 c10c240:	e1a05820 	lsr	r5, r0, #16
 c10c244:	e1855801 	orr	r5, r5, r1, lsl #16
 c10c248:	e1580005 	cmp	r8, r5
 c10c24c:	9a000004 	bls	c10c264 <__divdi3+0x108>
 c10c250:	e0955004 	adds	r5, r5, r4
 c10c254:	e2466001 	sub	r6, r6, #1
 c10c258:	2a000001 	bcs	c10c264 <__divdi3+0x108>
 c10c25c:	e1580005 	cmp	r8, r5
 c10c260:	82466001 	subhi	r6, r6, #1
 c10c264:	e186680a 	orr	r6, r6, sl, lsl #16
 c10c268:	e3a09000 	mov	r9, #0
 c10c26c:	e3570000 	cmp	r7, #0
 c10c270:	e1a03006 	mov	r3, r6
 c10c274:	e1a04009 	mov	r4, r9
 c10c278:	0a000001 	beq	c10c284 <__divdi3+0x128>
 c10c27c:	e2733000 	rsbs	r3, r3, #0
 c10c280:	e2e44000 	rsc	r4, r4, #0
 c10c284:	e1a00003 	mov	r0, r3
 c10c288:	e1a01004 	mov	r1, r4
 c10c28c:	e28dd014 	add	sp, sp, #20
 c10c290:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 c10c294:	e12fff1e 	bx	lr
 c10c298:	e15a0001 	cmp	sl, r1
 c10c29c:	83a09000 	movhi	r9, #0
 c10c2a0:	81a06009 	movhi	r6, r9
 c10c2a4:	8afffff0 	bhi	c10c26c <__divdi3+0x110>
 c10c2a8:	e1a00003 	mov	r0, r3
 c10c2ac:	eb0001e1 	bl	c10ca38 <__clzsi2>
 c10c2b0:	e2504000 	subs	r4, r0, #0
 c10c2b4:	1a00007a 	bne	c10c4a4 <__divdi3+0x348>
 c10c2b8:	e15a0008 	cmp	sl, r8
 c10c2bc:	2159000b 	cmpcs	r9, fp
 c10c2c0:	83a09000 	movhi	r9, #0
 c10c2c4:	93a09001 	movls	r9, #1
 c10c2c8:	93a06001 	movls	r6, #1
 c10c2cc:	91a09004 	movls	r9, r4
 c10c2d0:	81a06009 	movhi	r6, r9
 c10c2d4:	eaffffe4 	b	c10c26c <__divdi3+0x110>
 c10c2d8:	e3520000 	cmp	r2, #0
 c10c2dc:	1a000003 	bne	c10c2f0 <__divdi3+0x194>
 c10c2e0:	e3a00001 	mov	r0, #1
 c10c2e4:	e1a01002 	mov	r1, r2
 c10c2e8:	ebfffed6 	bl	c10be48 <__aeabi_uidiv>
 c10c2ec:	e1a04000 	mov	r4, r0
 c10c2f0:	e1a00004 	mov	r0, r4
 c10c2f4:	eb0001cf 	bl	c10ca38 <__clzsi2>
 c10c2f8:	e2503000 	subs	r3, r0, #0
 c10c2fc:	1a000035 	bne	c10c3d8 <__divdi3+0x27c>
 c10c300:	e3a01001 	mov	r1, #1
 c10c304:	e1a09804 	lsl	r9, r4, #16
 c10c308:	e58d1008 	str	r1, [sp, #8]
 c10c30c:	e0646006 	rsb	r6, r4, r6
 c10c310:	e1a08824 	lsr	r8, r4, #16
 c10c314:	e1a09829 	lsr	r9, r9, #16
 c10c318:	e1a01008 	mov	r1, r8
 c10c31c:	e1a00006 	mov	r0, r6
 c10c320:	ebfffec8 	bl	c10be48 <__aeabi_uidiv>
 c10c324:	e1a01008 	mov	r1, r8
 c10c328:	e1a0a000 	mov	sl, r0
 c10c32c:	e1a00006 	mov	r0, r6
 c10c330:	ebffff01 	bl	c10bf3c <__aeabi_uidivmod>
 c10c334:	e0030a99 	mul	r3, r9, sl
 c10c338:	e1a0c825 	lsr	ip, r5, #16
 c10c33c:	e18cb801 	orr	fp, ip, r1, lsl #16
 c10c340:	e153000b 	cmp	r3, fp
 c10c344:	9a000005 	bls	c10c360 <__divdi3+0x204>
 c10c348:	e09bb004 	adds	fp, fp, r4
 c10c34c:	e24aa001 	sub	sl, sl, #1
 c10c350:	2a000002 	bcs	c10c360 <__divdi3+0x204>
 c10c354:	e153000b 	cmp	r3, fp
 c10c358:	824aa001 	subhi	sl, sl, #1
 c10c35c:	808bb004 	addhi	fp, fp, r4
 c10c360:	e063b00b 	rsb	fp, r3, fp
 c10c364:	e1a01008 	mov	r1, r8
 c10c368:	e1a0000b 	mov	r0, fp
 c10c36c:	ebfffeb5 	bl	c10be48 <__aeabi_uidiv>
 c10c370:	e1a01008 	mov	r1, r8
 c10c374:	e1a06000 	mov	r6, r0
 c10c378:	e1a0000b 	mov	r0, fp
 c10c37c:	ebfffeee 	bl	c10bf3c <__aeabi_uidivmod>
 c10c380:	e0090996 	mul	r9, r6, r9
 c10c384:	e1a00805 	lsl	r0, r5, #16
 c10c388:	e1a05820 	lsr	r5, r0, #16
 c10c38c:	e1855801 	orr	r5, r5, r1, lsl #16
 c10c390:	e1590005 	cmp	r9, r5
 c10c394:	9a000004 	bls	c10c3ac <__divdi3+0x250>
 c10c398:	e0955004 	adds	r5, r5, r4
 c10c39c:	e2466001 	sub	r6, r6, #1
 c10c3a0:	2a000001 	bcs	c10c3ac <__divdi3+0x250>
 c10c3a4:	e1590005 	cmp	r9, r5
 c10c3a8:	82466001 	subhi	r6, r6, #1
 c10c3ac:	e186680a 	orr	r6, r6, sl, lsl #16
 c10c3b0:	e59d9008 	ldr	r9, [sp, #8]
 c10c3b4:	eaffffac 	b	c10c26c <__divdi3+0x110>
 c10c3b8:	e1e07007 	mvn	r7, r7
 c10c3bc:	e2722000 	rsbs	r2, r2, #0
 c10c3c0:	e2e33000 	rsc	r3, r3, #0
 c10c3c4:	eaffff6c 	b	c10c17c <__divdi3+0x20>
 c10c3c8:	e2700000 	rsbs	r0, r0, #0
 c10c3cc:	e2e11000 	rsc	r1, r1, #0
 c10c3d0:	e3e07000 	mvn	r7, #0
 c10c3d4:	eaffff66 	b	c10c174 <__divdi3+0x18>
 c10c3d8:	e2638020 	rsb	r8, r3, #32
 c10c3dc:	e1a0b835 	lsr	fp, r5, r8
 c10c3e0:	e1a04314 	lsl	r4, r4, r3
 c10c3e4:	e1a0a836 	lsr	sl, r6, r8
 c10c3e8:	e18be316 	orr	lr, fp, r6, lsl r3
 c10c3ec:	e1a08824 	lsr	r8, r4, #16
 c10c3f0:	e1a0c804 	lsl	ip, r4, #16
 c10c3f4:	e1a01008 	mov	r1, r8
 c10c3f8:	e1a0000a 	mov	r0, sl
 c10c3fc:	e1a0982c 	lsr	r9, ip, #16
 c10c400:	e1a05315 	lsl	r5, r5, r3
 c10c404:	e58de008 	str	lr, [sp, #8]
 c10c408:	ebfffe8e 	bl	c10be48 <__aeabi_uidiv>
 c10c40c:	e1a01008 	mov	r1, r8
 c10c410:	e1a0b000 	mov	fp, r0
 c10c414:	e1a0000a 	mov	r0, sl
 c10c418:	ebfffec7 	bl	c10bf3c <__aeabi_uidivmod>
 c10c41c:	e0030b99 	mul	r3, r9, fp
 c10c420:	e59d2008 	ldr	r2, [sp, #8]
 c10c424:	e1a06822 	lsr	r6, r2, #16
 c10c428:	e1866801 	orr	r6, r6, r1, lsl #16
 c10c42c:	e1530006 	cmp	r3, r6
 c10c430:	9a000002 	bls	c10c440 <__divdi3+0x2e4>
 c10c434:	e0966004 	adds	r6, r6, r4
 c10c438:	e24bb001 	sub	fp, fp, #1
 c10c43c:	3a00006c 	bcc	c10c5f4 <__divdi3+0x498>
 c10c440:	e0636006 	rsb	r6, r3, r6
 c10c444:	e1a01008 	mov	r1, r8
 c10c448:	e1a00006 	mov	r0, r6
 c10c44c:	ebfffe7d 	bl	c10be48 <__aeabi_uidiv>
 c10c450:	e1a01008 	mov	r1, r8
 c10c454:	e1a0a000 	mov	sl, r0
 c10c458:	e1a00006 	mov	r0, r6
 c10c45c:	ebfffeb6 	bl	c10bf3c <__aeabi_uidivmod>
 c10c460:	e0030a99 	mul	r3, r9, sl
 c10c464:	e59d2008 	ldr	r2, [sp, #8]
 c10c468:	e1a06802 	lsl	r6, r2, #16
 c10c46c:	e1a00826 	lsr	r0, r6, #16
 c10c470:	e1806801 	orr	r6, r0, r1, lsl #16
 c10c474:	e1530006 	cmp	r3, r6
 c10c478:	9a000005 	bls	c10c494 <__divdi3+0x338>
 c10c47c:	e0966004 	adds	r6, r6, r4
 c10c480:	e24aa001 	sub	sl, sl, #1
 c10c484:	2a000002 	bcs	c10c494 <__divdi3+0x338>
 c10c488:	e1530006 	cmp	r3, r6
 c10c48c:	824aa001 	subhi	sl, sl, #1
 c10c490:	80866004 	addhi	r6, r6, r4
 c10c494:	e0636006 	rsb	r6, r3, r6
 c10c498:	e18a380b 	orr	r3, sl, fp, lsl #16
 c10c49c:	e58d3008 	str	r3, [sp, #8]
 c10c4a0:	eaffff9c 	b	c10c318 <__divdi3+0x1bc>
 c10c4a4:	e2641020 	rsb	r1, r4, #32
 c10c4a8:	e1a00139 	lsr	r0, r9, r1
 c10c4ac:	e1a0213b 	lsr	r2, fp, r1
 c10c4b0:	e180a41a 	orr	sl, r0, sl, lsl r4
 c10c4b4:	e1a06138 	lsr	r6, r8, r1
 c10c4b8:	e1828418 	orr	r8, r2, r8, lsl r4
 c10c4bc:	e1a0380a 	lsl	r3, sl, #16
 c10c4c0:	e1a0b82a 	lsr	fp, sl, #16
 c10c4c4:	e1a0e823 	lsr	lr, r3, #16
 c10c4c8:	e1a0100b 	mov	r1, fp
 c10c4cc:	e1a00006 	mov	r0, r6
 c10c4d0:	e58d8008 	str	r8, [sp, #8]
 c10c4d4:	e58de00c 	str	lr, [sp, #12]
 c10c4d8:	ebfffe5a 	bl	c10be48 <__aeabi_uidiv>
 c10c4dc:	e1a0100b 	mov	r1, fp
 c10c4e0:	e1a08000 	mov	r8, r0
 c10c4e4:	e1a00006 	mov	r0, r6
 c10c4e8:	ebfffe93 	bl	c10bf3c <__aeabi_uidivmod>
 c10c4ec:	e59dc00c 	ldr	ip, [sp, #12]
 c10c4f0:	e002089c 	mul	r2, ip, r8
 c10c4f4:	e59d3008 	ldr	r3, [sp, #8]
 c10c4f8:	e1a06823 	lsr	r6, r3, #16
 c10c4fc:	e1861801 	orr	r1, r6, r1, lsl #16
 c10c500:	e1520001 	cmp	r2, r1
 c10c504:	e1a03419 	lsl	r3, r9, r4
 c10c508:	9a000002 	bls	c10c518 <__divdi3+0x3bc>
 c10c50c:	e091100a 	adds	r1, r1, sl
 c10c510:	e2488001 	sub	r8, r8, #1
 c10c514:	3a000032 	bcc	c10c5e4 <__divdi3+0x488>
 c10c518:	e0629001 	rsb	r9, r2, r1
 c10c51c:	e1a00009 	mov	r0, r9
 c10c520:	e1a0100b 	mov	r1, fp
 c10c524:	e58d3004 	str	r3, [sp, #4]
 c10c528:	ebfffe46 	bl	c10be48 <__aeabi_uidiv>
 c10c52c:	e1a0100b 	mov	r1, fp
 c10c530:	e1a06000 	mov	r6, r0
 c10c534:	e1a00009 	mov	r0, r9
 c10c538:	ebfffe7f 	bl	c10bf3c <__aeabi_uidivmod>
 c10c53c:	e59d000c 	ldr	r0, [sp, #12]
 c10c540:	e0020690 	mul	r2, r0, r6
 c10c544:	e59d3008 	ldr	r3, [sp, #8]
 c10c548:	e1a0c803 	lsl	ip, r3, #16
 c10c54c:	e1a0982c 	lsr	r9, ip, #16
 c10c550:	e1890801 	orr	r0, r9, r1, lsl #16
 c10c554:	e1520000 	cmp	r2, r0
 c10c558:	e59d3004 	ldr	r3, [sp, #4]
 c10c55c:	9a000002 	bls	c10c56c <__divdi3+0x410>
 c10c560:	e090000a 	adds	r0, r0, sl
 c10c564:	e2466001 	sub	r6, r6, #1
 c10c568:	3a000019 	bcc	c10c5d4 <__divdi3+0x478>
 c10c56c:	e062e000 	rsb	lr, r2, r0
 c10c570:	e1866808 	orr	r6, r6, r8, lsl #16
 c10c574:	e1a02826 	lsr	r2, r6, #16
 c10c578:	e1a01823 	lsr	r1, r3, #16
 c10c57c:	e1c6c802 	bic	ip, r6, r2, lsl #16
 c10c580:	e1c39801 	bic	r9, r3, r1, lsl #16
 c10c584:	e003099c 	mul	r3, ip, r9
 c10c588:	e0090992 	mul	r9, r2, r9
 c10c58c:	e00c0c91 	mul	ip, r1, ip
 c10c590:	e0010192 	mul	r1, r2, r1
 c10c594:	e099c00c 	adds	ip, r9, ip
 c10c598:	22811801 	addcs	r1, r1, #65536	; 0x10000
 c10c59c:	e093380c 	adds	r3, r3, ip, lsl #16
 c10c5a0:	e0a1182c 	adc	r1, r1, ip, lsr #16
 c10c5a4:	e15e0001 	cmp	lr, r1
 c10c5a8:	3a000006 	bcc	c10c5c8 <__divdi3+0x46c>
 c10c5ac:	13a02000 	movne	r2, #0
 c10c5b0:	03a02001 	moveq	r2, #1
 c10c5b4:	e1530415 	cmp	r3, r5, lsl r4
 c10c5b8:	93a09000 	movls	r9, #0
 c10c5bc:	82029001 	andhi	r9, r2, #1
 c10c5c0:	e3590000 	cmp	r9, #0
 c10c5c4:	0affff28 	beq	c10c26c <__divdi3+0x110>
 c10c5c8:	e2466001 	sub	r6, r6, #1
 c10c5cc:	e3a09000 	mov	r9, #0
 c10c5d0:	eaffff25 	b	c10c26c <__divdi3+0x110>
 c10c5d4:	e1520000 	cmp	r2, r0
 c10c5d8:	82466001 	subhi	r6, r6, #1
 c10c5dc:	8080000a 	addhi	r0, r0, sl
 c10c5e0:	eaffffe1 	b	c10c56c <__divdi3+0x410>
 c10c5e4:	e1520001 	cmp	r2, r1
 c10c5e8:	82488001 	subhi	r8, r8, #1
 c10c5ec:	8081100a 	addhi	r1, r1, sl
 c10c5f0:	eaffffc8 	b	c10c518 <__divdi3+0x3bc>
 c10c5f4:	e1530006 	cmp	r3, r6
 c10c5f8:	824bb001 	subhi	fp, fp, #1
 c10c5fc:	80866004 	addhi	r6, r6, r4
 c10c600:	eaffff8e 	b	c10c440 <__divdi3+0x2e4>

0c10c604 <__udivdi3>:
 c10c604:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 c10c608:	e2538000 	subs	r8, r3, #0
 c10c60c:	e24dd00c 	sub	sp, sp, #12
 c10c610:	e1a05000 	mov	r5, r0
 c10c614:	e1a04001 	mov	r4, r1
 c10c618:	e1a06002 	mov	r6, r2
 c10c61c:	e1a0a002 	mov	sl, r2
 c10c620:	e1a0b000 	mov	fp, r0
 c10c624:	e1a07001 	mov	r7, r1
 c10c628:	1a000037 	bne	c10c70c <__udivdi3+0x108>
 c10c62c:	e1520001 	cmp	r2, r1
 c10c630:	9a000045 	bls	c10c74c <__udivdi3+0x148>
 c10c634:	e1a00002 	mov	r0, r2
 c10c638:	eb0000fe 	bl	c10ca38 <__clzsi2>
 c10c63c:	e3500000 	cmp	r0, #0
 c10c640:	12603020 	rsbne	r3, r0, #32
 c10c644:	11a03335 	lsrne	r3, r5, r3
 c10c648:	11a0a016 	lslne	sl, r6, r0
 c10c64c:	11837014 	orrne	r7, r3, r4, lsl r0
 c10c650:	e1a0482a 	lsr	r4, sl, #16
 c10c654:	11a0b015 	lslne	fp, r5, r0
 c10c658:	e1a01004 	mov	r1, r4
 c10c65c:	e1a00007 	mov	r0, r7
 c10c660:	ebfffdf8 	bl	c10be48 <__aeabi_uidiv>
 c10c664:	e1a01004 	mov	r1, r4
 c10c668:	e1a08000 	mov	r8, r0
 c10c66c:	e1a00007 	mov	r0, r7
 c10c670:	ebfffe31 	bl	c10bf3c <__aeabi_uidivmod>
 c10c674:	e1a0680a 	lsl	r6, sl, #16
 c10c678:	e1a06826 	lsr	r6, r6, #16
 c10c67c:	e0030896 	mul	r3, r6, r8
 c10c680:	e1a0782b 	lsr	r7, fp, #16
 c10c684:	e1877801 	orr	r7, r7, r1, lsl #16
 c10c688:	e1530007 	cmp	r3, r7
 c10c68c:	9a000005 	bls	c10c6a8 <__udivdi3+0xa4>
 c10c690:	e097700a 	adds	r7, r7, sl
 c10c694:	e2488001 	sub	r8, r8, #1
 c10c698:	2a000002 	bcs	c10c6a8 <__udivdi3+0xa4>
 c10c69c:	e1530007 	cmp	r3, r7
 c10c6a0:	82488001 	subhi	r8, r8, #1
 c10c6a4:	8087700a 	addhi	r7, r7, sl
 c10c6a8:	e0637007 	rsb	r7, r3, r7
 c10c6ac:	e1a01004 	mov	r1, r4
 c10c6b0:	e1a00007 	mov	r0, r7
 c10c6b4:	ebfffde3 	bl	c10be48 <__aeabi_uidiv>
 c10c6b8:	e1a01004 	mov	r1, r4
 c10c6bc:	e1a05000 	mov	r5, r0
 c10c6c0:	e1a00007 	mov	r0, r7
 c10c6c4:	ebfffe1c 	bl	c10bf3c <__aeabi_uidivmod>
 c10c6c8:	e0060695 	mul	r6, r5, r6
 c10c6cc:	e1a0080b 	lsl	r0, fp, #16
 c10c6d0:	e1a0b820 	lsr	fp, r0, #16
 c10c6d4:	e18bb801 	orr	fp, fp, r1, lsl #16
 c10c6d8:	e156000b 	cmp	r6, fp
 c10c6dc:	9a000004 	bls	c10c6f4 <__udivdi3+0xf0>
 c10c6e0:	e09bb00a 	adds	fp, fp, sl
 c10c6e4:	e2455001 	sub	r5, r5, #1
 c10c6e8:	2a000001 	bcs	c10c6f4 <__udivdi3+0xf0>
 c10c6ec:	e156000b 	cmp	r6, fp
 c10c6f0:	82455001 	subhi	r5, r5, #1
 c10c6f4:	e1858808 	orr	r8, r5, r8, lsl #16
 c10c6f8:	e3a01000 	mov	r1, #0
 c10c6fc:	e1a00008 	mov	r0, r8
 c10c700:	e28dd00c 	add	sp, sp, #12
 c10c704:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 c10c708:	e12fff1e 	bx	lr
 c10c70c:	e1580001 	cmp	r8, r1
 c10c710:	83a01000 	movhi	r1, #0
 c10c714:	81a08001 	movhi	r8, r1
 c10c718:	8afffff7 	bhi	c10c6fc <__udivdi3+0xf8>
 c10c71c:	e1a00008 	mov	r0, r8
 c10c720:	eb0000c4 	bl	c10ca38 <__clzsi2>
 c10c724:	e2507000 	subs	r7, r0, #0
 c10c728:	1a00003e 	bne	c10c828 <__udivdi3+0x224>
 c10c72c:	e1580004 	cmp	r8, r4
 c10c730:	21560005 	cmpcs	r6, r5
 c10c734:	83a01000 	movhi	r1, #0
 c10c738:	93a01001 	movls	r1, #1
 c10c73c:	93a08001 	movls	r8, #1
 c10c740:	91a01007 	movls	r1, r7
 c10c744:	81a08001 	movhi	r8, r1
 c10c748:	eaffffeb 	b	c10c6fc <__udivdi3+0xf8>
 c10c74c:	e3520000 	cmp	r2, #0
 c10c750:	1a000003 	bne	c10c764 <__udivdi3+0x160>
 c10c754:	e3a00001 	mov	r0, #1
 c10c758:	e1a01002 	mov	r1, r2
 c10c75c:	ebfffdb9 	bl	c10be48 <__aeabi_uidiv>
 c10c760:	e1a0a000 	mov	sl, r0
 c10c764:	e1a0000a 	mov	r0, sl
 c10c768:	eb0000b2 	bl	c10ca38 <__clzsi2>
 c10c76c:	e2503000 	subs	r3, r0, #0
 c10c770:	1a000075 	bne	c10c94c <__udivdi3+0x348>
 c10c774:	e1a0180a 	lsl	r1, sl, #16
 c10c778:	e06a4004 	rsb	r4, sl, r4
 c10c77c:	e1a0982a 	lsr	r9, sl, #16
 c10c780:	e1a06821 	lsr	r6, r1, #16
 c10c784:	e3a07001 	mov	r7, #1
 c10c788:	e1a01009 	mov	r1, r9
 c10c78c:	e1a00004 	mov	r0, r4
 c10c790:	ebfffdac 	bl	c10be48 <__aeabi_uidiv>
 c10c794:	e1a01009 	mov	r1, r9
 c10c798:	e1a05000 	mov	r5, r0
 c10c79c:	e1a00004 	mov	r0, r4
 c10c7a0:	ebfffde5 	bl	c10bf3c <__aeabi_uidivmod>
 c10c7a4:	e0030596 	mul	r3, r6, r5
 c10c7a8:	e1a0282b 	lsr	r2, fp, #16
 c10c7ac:	e1824801 	orr	r4, r2, r1, lsl #16
 c10c7b0:	e1530004 	cmp	r3, r4
 c10c7b4:	9a000005 	bls	c10c7d0 <__udivdi3+0x1cc>
 c10c7b8:	e094400a 	adds	r4, r4, sl
 c10c7bc:	e2455001 	sub	r5, r5, #1
 c10c7c0:	2a000002 	bcs	c10c7d0 <__udivdi3+0x1cc>
 c10c7c4:	e1530004 	cmp	r3, r4
 c10c7c8:	82455001 	subhi	r5, r5, #1
 c10c7cc:	8084400a 	addhi	r4, r4, sl
 c10c7d0:	e0634004 	rsb	r4, r3, r4
 c10c7d4:	e1a01009 	mov	r1, r9
 c10c7d8:	e1a00004 	mov	r0, r4
 c10c7dc:	ebfffd99 	bl	c10be48 <__aeabi_uidiv>
 c10c7e0:	e1a01009 	mov	r1, r9
 c10c7e4:	e1a08000 	mov	r8, r0
 c10c7e8:	e1a00004 	mov	r0, r4
 c10c7ec:	ebfffdd2 	bl	c10bf3c <__aeabi_uidivmod>
 c10c7f0:	e0060698 	mul	r6, r8, r6
 c10c7f4:	e1a0b80b 	lsl	fp, fp, #16
 c10c7f8:	e1a0382b 	lsr	r3, fp, #16
 c10c7fc:	e183b801 	orr	fp, r3, r1, lsl #16
 c10c800:	e156000b 	cmp	r6, fp
 c10c804:	9a000004 	bls	c10c81c <__udivdi3+0x218>
 c10c808:	e09bb00a 	adds	fp, fp, sl
 c10c80c:	e2488001 	sub	r8, r8, #1
 c10c810:	2a000001 	bcs	c10c81c <__udivdi3+0x218>
 c10c814:	e156000b 	cmp	r6, fp
 c10c818:	82488001 	subhi	r8, r8, #1
 c10c81c:	e1888805 	orr	r8, r8, r5, lsl #16
 c10c820:	e1a01007 	mov	r1, r7
 c10c824:	eaffffb4 	b	c10c6fc <__udivdi3+0xf8>
 c10c828:	e267a020 	rsb	sl, r7, #32
 c10c82c:	e1a01a36 	lsr	r1, r6, sl
 c10c830:	e1a02a35 	lsr	r2, r5, sl
 c10c834:	e1818718 	orr	r8, r1, r8, lsl r7
 c10c838:	e1a0ba34 	lsr	fp, r4, sl
 c10c83c:	e1829714 	orr	r9, r2, r4, lsl r7
 c10c840:	e1a0a828 	lsr	sl, r8, #16
 c10c844:	e1a0e808 	lsl	lr, r8, #16
 c10c848:	e1a0100a 	mov	r1, sl
 c10c84c:	e1a0000b 	mov	r0, fp
 c10c850:	e1a0482e 	lsr	r4, lr, #16
 c10c854:	e58d9004 	str	r9, [sp, #4]
 c10c858:	ebfffd7a 	bl	c10be48 <__aeabi_uidiv>
 c10c85c:	e1a0100a 	mov	r1, sl
 c10c860:	e1a09000 	mov	r9, r0
 c10c864:	e1a0000b 	mov	r0, fp
 c10c868:	ebfffdb3 	bl	c10bf3c <__aeabi_uidivmod>
 c10c86c:	e0020994 	mul	r2, r4, r9
 c10c870:	e59d0004 	ldr	r0, [sp, #4]
 c10c874:	e1a0c820 	lsr	ip, r0, #16
 c10c878:	e18cb801 	orr	fp, ip, r1, lsl #16
 c10c87c:	e152000b 	cmp	r2, fp
 c10c880:	e1a03716 	lsl	r3, r6, r7
 c10c884:	9a000002 	bls	c10c894 <__udivdi3+0x290>
 c10c888:	e09bb008 	adds	fp, fp, r8
 c10c88c:	e2499001 	sub	r9, r9, #1
 c10c890:	3a000060 	bcc	c10ca18 <__udivdi3+0x414>
 c10c894:	e062b00b 	rsb	fp, r2, fp
 c10c898:	e1a0100a 	mov	r1, sl
 c10c89c:	e1a0000b 	mov	r0, fp
 c10c8a0:	e58d3000 	str	r3, [sp]
 c10c8a4:	ebfffd67 	bl	c10be48 <__aeabi_uidiv>
 c10c8a8:	e1a0100a 	mov	r1, sl
 c10c8ac:	e1a06000 	mov	r6, r0
 c10c8b0:	e1a0000b 	mov	r0, fp
 c10c8b4:	ebfffda0 	bl	c10bf3c <__aeabi_uidivmod>
 c10c8b8:	e0040496 	mul	r4, r6, r4
 c10c8bc:	e59d0004 	ldr	r0, [sp, #4]
 c10c8c0:	e1a0c800 	lsl	ip, r0, #16
 c10c8c4:	e1a0382c 	lsr	r3, ip, #16
 c10c8c8:	e1832801 	orr	r2, r3, r1, lsl #16
 c10c8cc:	e1540002 	cmp	r4, r2
 c10c8d0:	e59d3000 	ldr	r3, [sp]
 c10c8d4:	9a000002 	bls	c10c8e4 <__udivdi3+0x2e0>
 c10c8d8:	e0922008 	adds	r2, r2, r8
 c10c8dc:	e2466001 	sub	r6, r6, #1
 c10c8e0:	3a000048 	bcc	c10ca08 <__udivdi3+0x404>
 c10c8e4:	e0644002 	rsb	r4, r4, r2
 c10c8e8:	e1868809 	orr	r8, r6, r9, lsl #16
 c10c8ec:	e1a02828 	lsr	r2, r8, #16
 c10c8f0:	e1a0e823 	lsr	lr, r3, #16
 c10c8f4:	e1c80802 	bic	r0, r8, r2, lsl #16
 c10c8f8:	e1c3680e 	bic	r6, r3, lr, lsl #16
 c10c8fc:	e0030690 	mul	r3, r0, r6
 c10c900:	e0060692 	mul	r6, r2, r6
 c10c904:	e000009e 	mul	r0, lr, r0
 c10c908:	e00e0e92 	mul	lr, r2, lr
 c10c90c:	e0960000 	adds	r0, r6, r0
 c10c910:	228ee801 	addcs	lr, lr, #65536	; 0x10000
 c10c914:	e0933800 	adds	r3, r3, r0, lsl #16
 c10c918:	e0aee820 	adc	lr, lr, r0, lsr #16
 c10c91c:	e154000e 	cmp	r4, lr
 c10c920:	3a000006 	bcc	c10c940 <__udivdi3+0x33c>
 c10c924:	13a02000 	movne	r2, #0
 c10c928:	03a02001 	moveq	r2, #1
 c10c92c:	e1530715 	cmp	r3, r5, lsl r7
 c10c930:	93a01000 	movls	r1, #0
 c10c934:	82021001 	andhi	r1, r2, #1
 c10c938:	e3510000 	cmp	r1, #0
 c10c93c:	0affff6e 	beq	c10c6fc <__udivdi3+0xf8>
 c10c940:	e2488001 	sub	r8, r8, #1
 c10c944:	e3a01000 	mov	r1, #0
 c10c948:	eaffff6b 	b	c10c6fc <__udivdi3+0xf8>
 c10c94c:	e2639020 	rsb	r9, r3, #32
 c10c950:	e1a0a31a 	lsl	sl, sl, r3
 c10c954:	e1a07934 	lsr	r7, r4, r9
 c10c958:	e1a08935 	lsr	r8, r5, r9
 c10c95c:	e1a0982a 	lsr	r9, sl, #16
 c10c960:	e1a0280a 	lsl	r2, sl, #16
 c10c964:	e1a01009 	mov	r1, r9
 c10c968:	e1a00007 	mov	r0, r7
 c10c96c:	e1888314 	orr	r8, r8, r4, lsl r3
 c10c970:	e1a0b315 	lsl	fp, r5, r3
 c10c974:	e1a06822 	lsr	r6, r2, #16
 c10c978:	ebfffd32 	bl	c10be48 <__aeabi_uidiv>
 c10c97c:	e1a01009 	mov	r1, r9
 c10c980:	e1a05000 	mov	r5, r0
 c10c984:	e1a00007 	mov	r0, r7
 c10c988:	ebfffd6b 	bl	c10bf3c <__aeabi_uidivmod>
 c10c98c:	e0030596 	mul	r3, r6, r5
 c10c990:	e1a04828 	lsr	r4, r8, #16
 c10c994:	e1844801 	orr	r4, r4, r1, lsl #16
 c10c998:	e1530004 	cmp	r3, r4
 c10c99c:	9a000002 	bls	c10c9ac <__udivdi3+0x3a8>
 c10c9a0:	e094400a 	adds	r4, r4, sl
 c10c9a4:	e2455001 	sub	r5, r5, #1
 c10c9a8:	3a00001e 	bcc	c10ca28 <__udivdi3+0x424>
 c10c9ac:	e0634004 	rsb	r4, r3, r4
 c10c9b0:	e1a01009 	mov	r1, r9
 c10c9b4:	e1a00004 	mov	r0, r4
 c10c9b8:	ebfffd22 	bl	c10be48 <__aeabi_uidiv>
 c10c9bc:	e1a01009 	mov	r1, r9
 c10c9c0:	e1a07000 	mov	r7, r0
 c10c9c4:	e1a00004 	mov	r0, r4
 c10c9c8:	ebfffd5b 	bl	c10bf3c <__aeabi_uidivmod>
 c10c9cc:	e0030796 	mul	r3, r6, r7
 c10c9d0:	e1a00808 	lsl	r0, r8, #16
 c10c9d4:	e1a0c820 	lsr	ip, r0, #16
 c10c9d8:	e18c4801 	orr	r4, ip, r1, lsl #16
 c10c9dc:	e1530004 	cmp	r3, r4
 c10c9e0:	9a000005 	bls	c10c9fc <__udivdi3+0x3f8>
 c10c9e4:	e094400a 	adds	r4, r4, sl
 c10c9e8:	e2477001 	sub	r7, r7, #1
 c10c9ec:	2a000002 	bcs	c10c9fc <__udivdi3+0x3f8>
 c10c9f0:	e1530004 	cmp	r3, r4
 c10c9f4:	82477001 	subhi	r7, r7, #1
 c10c9f8:	8084400a 	addhi	r4, r4, sl
 c10c9fc:	e0634004 	rsb	r4, r3, r4
 c10ca00:	e1877805 	orr	r7, r7, r5, lsl #16
 c10ca04:	eaffff5f 	b	c10c788 <__udivdi3+0x184>
 c10ca08:	e1540002 	cmp	r4, r2
 c10ca0c:	82466001 	subhi	r6, r6, #1
 c10ca10:	80822008 	addhi	r2, r2, r8
 c10ca14:	eaffffb2 	b	c10c8e4 <__udivdi3+0x2e0>
 c10ca18:	e152000b 	cmp	r2, fp
 c10ca1c:	82499001 	subhi	r9, r9, #1
 c10ca20:	808bb008 	addhi	fp, fp, r8
 c10ca24:	eaffff9a 	b	c10c894 <__udivdi3+0x290>
 c10ca28:	e1530004 	cmp	r3, r4
 c10ca2c:	82455001 	subhi	r5, r5, #1
 c10ca30:	8084400a 	addhi	r4, r4, sl
 c10ca34:	eaffffdc 	b	c10c9ac <__udivdi3+0x3a8>

0c10ca38 <__clzsi2>:
 c10ca38:	e3a0101c 	mov	r1, #28
 c10ca3c:	e3500801 	cmp	r0, #65536	; 0x10000
 c10ca40:	21a00820 	lsrcs	r0, r0, #16
 c10ca44:	22411010 	subcs	r1, r1, #16
 c10ca48:	e3500c01 	cmp	r0, #256	; 0x100
 c10ca4c:	21a00420 	lsrcs	r0, r0, #8
 c10ca50:	22411008 	subcs	r1, r1, #8
 c10ca54:	e3500010 	cmp	r0, #16
 c10ca58:	21a00220 	lsrcs	r0, r0, #4
 c10ca5c:	22411004 	subcs	r1, r1, #4
 c10ca60:	e28f2008 	add	r2, pc, #8
 c10ca64:	e7d20000 	ldrb	r0, [r2, r0]
 c10ca68:	e0800001 	add	r0, r0, r1
 c10ca6c:	e12fff1e 	bx	lr
 c10ca70:	02020304 	.word	0x02020304
 c10ca74:	01010101 	.word	0x01010101
	...

0c10ca80 <_sbrk>:
 c10ca80:	e59f201c 	ldr	r2, [pc, #28]	; c10caa4 <_sbrk+0x24>
 c10ca84:	e5923000 	ldr	r3, [r2]
 c10ca88:	e59f1018 	ldr	r1, [pc, #24]	; c10caa8 <_sbrk+0x28>
 c10ca8c:	e3530000 	cmp	r3, #0
 c10ca90:	01a03001 	moveq	r3, r1
 c10ca94:	e0830000 	add	r0, r3, r0
 c10ca98:	e5820000 	str	r0, [r2]
 c10ca9c:	e1a00003 	mov	r0, r3
 c10caa0:	e12fff1e 	bx	lr
 c10caa4:	0c100cd0 	.word	0x0c100cd0
 c10caa8:	0c10caac 	.word	0x0c10caac
